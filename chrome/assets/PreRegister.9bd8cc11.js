var or=Object.defineProperty;var ir=(l,e,n)=>e in l?or(l,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):l[e]=n;var $e=(l,e,n)=>(ir(l,typeof e!="symbol"?e+"":e,n),n);import{S as x,i as ee,s as Q,j as y,Q as ze,k as m,z as N,n as d,x as w,R as Y,T as v,U as Me,h as M,w as z,Y as J,Z as cr,a as ve,c as T,m as A,t as $,b as S,d as I,_ as he,A as ct,$ as vn,D as xs,a0 as me,f as de,g as Ne,l as Ee,a1 as ar,a2 as fr,V as Ht,a3 as el,a4 as tl,M as ur,a5 as _r,a6 as nl,N as sl,a7 as oe,a8 as Te,a9 as te,aa as le,ab as re,ac as nt,ad as Ke,ae as Ve,af as ge,ag as Le,ah as Oe,e as K,ai as vt,aj as Fe,ak as pr,L as ke,al as Re,am as ll,an as it,ao as we,ap as zt,aq as pn,ar as Ft,y as pt,v as et,as as mn,at as qt,au as rl,av as Tt,aw as Qe,ax as fe,ay as st,az as ol,aA as mr,F as dn,K as wt,aB as tn,aC as dr,aD as nn,aE as ht,aF as hr,aG as gr,aH as br,aI as wr,H as Ae,aJ as vr,aK as qe,aL as il,aM as gt,aN as Ut,aO as Xt,aP as Kt,aQ as Wt,aR as $r,aS as lt,aT as Bt,aU as mt,aV as cl,aW as Yt,aX as Lt,aY as sn,aZ as yt,a_ as St,a$ as kr,b0 as Ct,G as hn,b1 as yr,b2 as Sr,C as al,b3 as $n,b4 as Mt,b5 as Nt,b6 as At,b7 as Cr,b8 as fl,b9 as ul,E as Mr,ba as Nr,bb as Er,bc as Tr,u as be,bd as Gt,be as It,bf as Ar,O as Ir,bg as Rr,bh as ln,bi as Lr,bj as _l,bk as Dt,bl as Or,bm as Pr,bn as kn,bo as jr,bp as Hr,bq as Zt,br as Jt,bs as pl,I as zr,bt as Fr,bu as kt,bv as Br,bw as yn,bx as Pt,by as jt,bz as dt,bA as Sn,bB as Cn,bC as Mn,bD as Nn,bE as En,bF as Dr,bG as ml,bH as Vr,bI as qr,bJ as Ur,bK as Xr,bL as Kr,bM as Wr,B as Gr,bN as Yr,bO as Qt,bP as Zr,bQ as Et,bR as dl,bS as Jr,bT as Qr,bU as Tn,bV as xt,bW as xr,bX as eo,bY as to,bZ as no}from"./web-resource-cache.a5955fee.js";const so=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))t(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function n(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerpolicy&&(r.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?r.credentials="include":s.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(s){if(s.ep)return;s.ep=!0;const r=n(s);fetch(s.href,r)}};so();function lo(l){let e;return{c(){e=y("span"),ze(e,"display","none")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}class hl extends x{constructor(e){super(),ee(this,e,null,lo,Q,{})}}function An(l,e,n){const t=l.slice();return t[2]=e[n],t}function ro(l){let e,n,t,s=Rn(l[2].value.offset)+"",r,o,c,i,a=l[2].value.message+"",f;return{c(){e=y("span"),n=y("span"),t=z("+"),r=z(s),o=z("ms:"),c=M(),i=y("span"),f=z(a),w(n,"class","offset"),w(i,"class","message"),w(e,"class","event")},m(u,_){m(u,e,_),v(e,n),v(n,t),v(n,r),v(n,o),v(e,c),v(e,i),v(i,f)},p(u,_){_&1&&s!==(s=Rn(u[2].value.offset)+"")&&J(r,s),_&1&&a!==(a=u[2].value.message+"")&&J(f,a)},d(u){u&&d(e)}}}function oo(l){let e,n=l[2].value+"",t;return{c(){e=y("span"),t=z(n),w(e,"class","string")},m(s,r){m(s,e,r),v(e,t)},p(s,r){r&1&&n!==(n=s[2].value+"")&&J(t,n)},d(s){s&&d(e)}}}function In(l){let e,n;function t(o,c){if(o[2].type==="string")return oo;if(o[2].type==="event")return ro}let s=t(l),r=s&&s(l);return{c(){e=y("li"),r&&r.c(),n=M()},m(o,c){m(o,e,c),r&&r.m(e,null),v(e,n)},p(o,c){s===(s=t(o))&&r?r.p(o,c):(r&&r.d(1),r=s&&s(o),r&&(r.c(),r.m(e,n)))},d(o){o&&d(e),r&&r.d()}}}function io(l){let e,n,t=l[0],s=[];for(let r=0;r<t.length;r+=1)s[r]=In(An(l,t,r));return{c(){e=y("div"),n=y("ol");for(let r=0;r<s.length;r+=1)s[r].c();w(e,"class","log-container svelte-13jddbg"),Y(e,"display_none",l[1])},m(r,o){m(r,e,o),v(e,n);for(let c=0;c<s.length;c+=1)s[c].m(n,null)},p(r,[o]){if(o&1){t=r[0];let c;for(c=0;c<t.length;c+=1){const i=An(r,t,c);s[c]?s[c].p(i,o):(s[c]=In(i),s[c].c(),s[c].m(n,null))}for(;c<s.length;c+=1)s[c].d(1);s.length=t.length}o&2&&Y(e,"display_none",r[1])},i:N,o:N,d(r){r&&d(e),Me(s,r)}}}class gl{constructor(){this._a_items=[]}get items(){return this._a_items}set items(e){this._a_items=e}event(e,n){return this._a_items.push({type:"event",value:{message:e,offset:n}}),this}}function Rn(l){return(l/1e3).toFixed(2).padStart(5,"0")}function co(l,e,n){let{items:t}=e,{hide:s=!1}=e;return l.$$set=r=>{"items"in r&&n(0,t=r.items),"hide"in r&&n(1,s=r.hide)},[t,s]}class bl extends x{constructor(e){super(),ee(this,e,co,io,Q,{items:0,hide:1})}}function ao(l){let e,n,t;return{c(){e=y("div"),n=y("img"),w(n,"alt","StarShell title"),cr(n.src,t="/media/vendor/title.svg")||w(n,"src",t),w(n,"class","svelte-1htd4i8"),w(e,"class","no-margin title svelte-1htd4i8"),ze(e,"width",l[0]+"px")},m(s,r){m(s,e,r),v(e,n)},p:N,i:N,o:N,d(s){s&&d(e)}}}function fo(l,e,n){let{width:t=180}=e;const s=t;return l.$$set=r=>{"width"in r&&n(1,t=r.width)},[s,t]}class wl extends x{constructor(e){super(),ee(this,e,fo,ao,Q,{width:1})}}function uo(l){let e,n,t,s,r,o,c,i,a,f;return a=new ct({props:{cancel:"pop",confirm:["Use anyway",l[0]],wait:5e3}}),{c(){e=y("h3"),e.textContent="Weak Password Warning",n=M(),t=y("p"),t.textContent="The password you entered was found on a list of the top ten thousand most commonly used passwords.",s=M(),r=y("p"),r.textContent="In order to help prevent the loss of funds, you are encouraged to create a strong, unique password.",o=M(),c=y("p"),c.textContent="How do you want to proceed?",i=M(),T(a.$$.fragment)},m(u,_){m(u,e,_),m(u,n,_),m(u,t,_),m(u,s,_),m(u,r,_),m(u,o,_),m(u,c,_),m(u,i,_),A(a,u,_),f=!0},p:N,i(u){f||($(a.$$.fragment,u),f=!0)},o(u){S(a.$$.fragment,u),f=!1},d(u){u&&d(e),u&&d(n),u&&d(t),u&&d(s),u&&d(r),u&&d(o),u&&d(c),u&&d(i),I(a,u)}}}function _o(l){let e,n;return e=new ve({props:{$$slots:{default:[uo]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&32&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function po(l,e,n){let{attempt_register:t}=e,{weakness:s}=e;const r=he("page");function o(){t(),r.pop()}return l.$$set=c=>{"attempt_register"in c&&n(1,t=c.attempt_register),"weakness"in c&&n(2,s=c.weakness)},[o,t,s]}class mo extends x{constructor(e){super(),ee(this,e,po,_o,Q,{attempt_register:1,weakness:2})}}function Ln(l){let e,n,t,s;return{c(){e=y("div"),n=z(l[4]),w(e,"class","validation-message")},m(r,o){m(r,e,o),v(e,n),s=!0},p(r,o){(!s||o&16)&&J(n,r[4])},i(r){s||(Ke(()=>{t||(t=Ve(e,ge,{duration:300},!0)),t.run(1)}),s=!0)},o(r){t||(t=Ve(e,ge,{duration:300},!1)),t.run(0),s=!1},d(r){r&&d(e),r&&t&&t.end()}}}function ho(l){let e,n,t,s,r,o,c=!l[2]&&l[4]&&Ln(l);return{c(){e=y("input"),n=M(),c&&c.c(),t=oe(),w(e,"type","password"),w(e,"autocomplete","new-password"),w(e,"name","password"),w(e,"placeholder","Password")},m(i,a){m(i,e,a),Te(e,l[0]),m(i,n,a),c&&c.m(i,a),m(i,t,a),s=!0,r||(o=[te(e,"blur",l[10]),te(e,"input",l[11])],r=!0)},p(i,a){a&1&&e.value!==i[0]&&Te(e,i[0]),!i[2]&&i[4]?c?(c.p(i,a),a&20&&$(c,1)):(c=Ln(i),c.c(),$(c,1),c.m(t.parentNode,t)):c&&(le(),S(c,1,1,()=>{c=null}),re())},i(i){s||($(c),s=!0)},o(i){S(c),s=!1},d(i){i&&d(e),i&&d(n),c&&c.d(i),i&&d(t),r=!1,nt(o)}}}function On(l){let e,n,t,s;return{c(){e=y("div"),n=z(l[5]),w(e,"class","validation-message")},m(r,o){m(r,e,o),v(e,n),s=!0},p(r,o){(!s||o&32)&&J(n,r[5])},i(r){s||(Ke(()=>{t||(t=Ve(e,ge,{duration:300},!0)),t.run(1)}),s=!0)},o(r){t||(t=Ve(e,ge,{duration:300},!1)),t.run(0),s=!1},d(r){r&&d(e),r&&t&&t.end()}}}function go(l){let e,n,t,s,r,o,c=!l[2]&&l[5]&&On(l);return{c(){e=y("input"),n=M(),c&&c.c(),t=oe(),w(e,"type","password"),w(e,"autocomplete","new-password"),w(e,"name","verify"),w(e,"placeholder","Password")},m(i,a){m(i,e,a),Te(e,l[1]),m(i,n,a),c&&c.m(i,a),m(i,t,a),s=!0,r||(o=[te(e,"blur",l[12]),te(e,"input",l[13])],r=!0)},p(i,a){a&2&&e.value!==i[1]&&Te(e,i[1]),!i[2]&&i[5]?c?(c.p(i,a),a&36&&$(c,1)):(c=On(i),c.c(),$(c,1),c.m(t.parentNode,t)):c&&(le(),S(c,1,1,()=>{c=null}),re())},i(i){s||($(c),s=!0)},o(i){S(c),s=!1},d(i){i&&d(e),i&&d(n),c&&c.d(i),i&&d(t),r=!1,nt(o)}}}function Pn(l){let e,n;return{c(){e=y("pre"),n=z(l[3])},m(t,s){m(t,e,s),v(e,n)},p(t,s){s&8&&J(n,t[3])},d(t){t&&d(e)}}}function bo(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,b,g,k,C,P,R,D;t=new xs({props:{dim:96}}),r=new wl({props:{width:150}}),_=new me({props:{key:"password",name:"New password",$$slots:{default:[ho]},$$scope:{ctx:l}}}),h=new me({props:{key:"verify-password",name:"Verify password",$$slots:{default:[go]},$$scope:{ctx:l}}});function G(O){l[14](O)}let B={};l[6].items!==void 0&&(B.items=l[6].items),g=new bl({props:B}),de.push(()=>Ne(g,"items",G));let L=l[3]&&Pn(l);return R=new ct({props:{confirm:l[7]}}),{c(){e=y("center"),n=y("div"),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),c=y("p"),c.textContent="Create a new password to protect your wallet's data.",i=M(),a=y("div"),f=y("input"),u=M(),T(_.$$.fragment),p=M(),T(h.$$.fragment),b=M(),T(g.$$.fragment),C=M(),L&&L.c(),P=M(),T(R.$$.fragment),w(n,"class","intro svelte-pdf2wg"),w(c,"class","narrow svelte-pdf2wg"),f.hidden=!0,w(f,"type","text"),w(f,"name","username"),w(f,"autocomplete","username"),f.value="StarShell Wallet User",w(a,"class","form flex-rows")},m(O,U){m(O,e,U),v(e,n),A(t,n,null),v(n,s),A(r,n,null),v(e,o),v(e,c),m(O,i,U),m(O,a,U),v(a,f),v(a,u),A(_,a,null),v(a,p),A(h,a,null),m(O,b,U),A(g,O,U),m(O,C,U),L&&L.m(O,U),m(O,P,U),A(R,O,U),D=!0},p(O,U){const E={};U&8388629&&(E.$$scope={dirty:U,ctx:O}),_.$set(E);const q={};U&8388646&&(q.$$scope={dirty:U,ctx:O}),h.$set(q);const H={};!k&&U&64&&(k=!0,H.items=O[6].items,Ee(()=>k=!1)),g.$set(H),O[3]?L?L.p(O,U):(L=Pn(O),L.c(),L.m(P.parentNode,P)):L&&(L.d(1),L=null);const j={};U&128&&(j.confirm=O[7]),R.$set(j)},i(O){D||($(t.$$.fragment,O),$(r.$$.fragment,O),$(_.$$.fragment,O),$(h.$$.fragment,O),$(g.$$.fragment,O),$(R.$$.fragment,O),D=!0)},o(O){S(t.$$.fragment,O),S(r.$$.fragment,O),S(_.$$.fragment,O),S(h.$$.fragment,O),S(g.$$.fragment,O),S(R.$$.fragment,O),D=!1},d(O){O&&d(e),I(t),I(r),O&&d(i),O&&d(a),I(_),I(h),O&&d(b),I(g,O),O&&d(C),L&&L.d(O),O&&d(P),I(R,O)}}}function wo(l){let e,n;return e=new ve({props:{$$slots:{default:[bo]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&8388863&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function vo(l,e,n){let t,s;const r=he("page"),o=he("completed");let c="",i="",a="",f="",u="",_=0,p=new gl;function h(U){n(6,p=p.event(U,Date.now()-_))}r.on({restore(){n(0,c=n(1,i=""))}});function b(){if(c&&!vn(c)){c.length<ar?n(4,f="Password must be at least 5 characters"):c.length>fr?n(4,f="Password must be 1024 characters or fewer"):n(4,f="Password is not acceptable");return}n(4,f="")}function g(){if(c&&!f&&c!==i){n(5,u="Passwords do not match");return}n(5,u="")}const k=(async()=>(await(await fetch("/data/passwords-top-10k.txt")).text()).split(`
`))();async function C(){(await k).includes(c)?r.push({creator:mo,props:{attempt_register:R}}):await R()}let P=!1;async function R(){if(!t||P)return 1;P=!0;const U=()=>(P=!1,1);n(3,a=""),_=Date.now(),h("Estimating time to complete");{const E=window.performance.now();await Ht.deriveRootBits(el,tl,1/50);const H=window.performance.now()-E,j=2*(2*(H*50));h(`About ${(j/1e3).toFixed(1)} seconds`)}try{await ur(c,h)}catch(E){return E instanceof _r?n(3,a="A passphrase is already registered"):E instanceof nl?n(3,a="Invalid passphrase"):n(3,a=`Unexpected error occurred while attempting to register:
${E.stack||E.message}`),U()}h("Verifying passphrase");try{await sl(c,!1,h)}catch(E){debugger;return n(3,a=`Failed to verify passphrase immediately after registration:
${E.stack}`),await Ht.eraseBase(),U()}return h("Done"),n(3,a="Success"),o&&o(!0),U()}const D=()=>b();function G(){c=this.value,n(0,c)}const B=()=>g();function L(){i=this.value,n(1,i)}function O(U){l.$$.not_equal(p.items,U)&&(p.items=U,n(6,p))}return l.$$.update=()=>{l.$$.dirty&3&&n(2,t=!!c&&c===i&&vn(c)),l.$$.dirty&4&&n(7,s=["Continue",C,!t])},[c,i,t,a,f,u,p,s,b,g,D,G,B,L,O]}class vl extends x{constructor(e){super(),ee(this,e,vo,wo,Q,{})}}var gn=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M19 5v14H5V5h14m0-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 9c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6 10H6v-1.53c0-2.5 3.97-3.58 6-3.58s6 1.08 6 3.58V18zm-9.69-2h7.38c-.69-.56-2.38-1.12-3.69-1.12s-3.01.56-3.69 1.12z"/>
</svg>`,$o=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-analytics-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-analytics-fg" d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"/>
	<path class="s2r-analytics-fg" d="M7 12h2v5H7zm8-5h2v10h-2zm-4 7h2v3h-2zm0-4h2v2h-2z"/>
</svg>`,ko=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M13 5.08A7 7 0 0 1 18.92 11h3.03c-.47-4.72-4.23-8.48-8.95-8.95v3.03zM18.92 13A7 7 0 0 1 13 18.92v3.03c4.72-.47 8.48-4.23 8.95-8.95h-3.03zM11 18.92c-3.39-.49-6-3.4-6-6.92s2.61-6.43 6-6.92V2.05c-5.05.5-9 4.76-9 9.95 0 5.19 3.95 9.45 9 9.95v-3.03z"/>
</svg>`,$l=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/>
</svg>`,kl=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4z"/>
</svg>`;function yo(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function So(l){let e,n,t;function s(o){l[4](o)}let r={id:"asset-select",pfpMap:l[1],placeholder:"Select asset",items:l[8]};return l[0]!==void 0&&(r.value=l[0]),e=new ll({props:r}),de.push(()=>Ne(e,"value",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};c&2&&(i.pfpMap=o[1]),!n&&c&1&&(n=!0,i.value=o[0],Ee(()=>n=!1)),e.$set(i)},i(o){t||($(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function Co(l){let e;return{c(){e=z("Loading assets...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Mo(l){let e,n,t={ctx:l,current:null,token:null,hasCatch:!1,pending:Co,then:So,catch:yo,value:8,blocks:[,,,]};return Le(l[2](),t),{c(){e=y("div"),t.block.c(),w(e,"class","asset")},m(s,r){m(s,e,r),t.block.m(e,t.anchor=null),t.mount=()=>e,t.anchor=null,n=!0},p(s,[r]){l=s,Oe(t,l,r)},i(s){n||($(t.block),n=!0)},o(s){for(let r=0;r<3;r+=1){const o=t.blocks[r];S(o)}n=!1},d(s){s&&d(e),t.block.d(),t.token=null,t=null}}}function No(l,e,n){let t,s;K(l,vt,f=>n(5,t=f)),K(l,Fe,f=>n(6,s=f));let{assetRef:r=""}=e;s?.id;let o={};async function c(){const f=[];n(1,o=await pr(s.coins,{dim:19}));for(const[u,_]of ke(s.coins))f.push({value:Re.holdingPathFor(t,u),object:_,primary:u,secondary:_.name,pfp:_.pfp});return f}let i={value:r,object:null,primary:"",secondary:"",pfp:""};function a(f){i=f,n(0,i)}return l.$$set=f=>{"assetRef"in f&&n(3,r=f.assetRef)},l.$$.update=()=>{l.$$.dirty&1&&n(3,r=i?.value||"")},[i,o,c,r,a]}class Eo extends x{constructor(e){super(),ee(this,e,No,Mo,Q,{assetRef:3})}}var To=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14l-6-6z"/>
</svg>`,Ao=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6-1.41-1.41z"/>
</svg>`;function jn(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h;return{c(){e=y("span"),n=y("span"),t=y("span"),s=z("= "),r=z(l[5]),o=M(),c=y("span"),c.textContent="USD",i=M(),a=y("span"),f=y("span"),u=M(),_=y("span"),w(t,"class","amount svelte-1o74by9"),w(c,"class","fiat svelte-1o74by9"),w(n,"class","equivalent svelte-1o74by9"),w(f,"class","icon increment clickable svelte-1o74by9"),w(_,"class","icon decrement clickable svelte-1o74by9"),w(a,"class","adjust svelte-1o74by9"),w(e,"class","occupy svelte-1o74by9")},m(b,g){m(b,e,g),v(e,n),v(n,t),v(t,s),v(t,r),v(n,o),v(n,c),v(e,i),v(e,a),v(a,f),f.innerHTML=To,v(a,u),v(a,_),_.innerHTML=Ao,p||(h=[te(f,"click",l[16]),te(f,"mousedown",l[17]),te(_,"click",l[18]),te(_,"mousedown",l[19])],p=!0)},p(b,g){g&32&&J(r,b[5])},d(b){b&&d(e),p=!1,nt(h)}}}function Hn(l){let e,n;return{c(){e=y("span"),n=z(l[1]),w(e,"class","validation-message")},m(t,s){m(t,e,s),v(e,n)},p(t,s){s&2&&J(n,t[1])},d(t){t&&d(e)}}}function Io(l){let e,n,t,s,r,o,c,i,a,f=l[3]&&jn(l),u=l[1]&&Hn(l);return{c(){e=y("div"),n=y("input"),o=M(),f&&f.c(),c=M(),u&&u.c(),n.disabled=t=!l[2],w(n,"type","number"),w(n,"min","0"),w(n,"max",s=l[4]+""||"0"),w(n,"step",r="0."+"0".repeat((l[3]?.decimals||1)-1)+"1"),n.required=!0,n.value=l[0],w(n,"class","svelte-1o74by9"),Y(n,"invalid",l[1]),w(e,"class","amount-input svelte-1o74by9")},m(_,p){m(_,e,p),v(e,n),l[15](n),v(e,o),f&&f.m(e,null),v(e,c),u&&u.m(e,null),i||(a=[te(n,"change",l[14]),te(n,"input",l[7]),te(n,"invalid",Ro)],i=!0)},p(_,[p]){p&4&&t!==(t=!_[2])&&(n.disabled=t),p&16&&s!==(s=_[4]+""||"0")&&w(n,"max",s),p&8&&r!==(r="0."+"0".repeat((_[3]?.decimals||1)-1)+"1")&&w(n,"step",r),p&1&&n.value!==_[0]&&(n.value=_[0]),p&2&&Y(n,"invalid",_[1]),_[3]?f?f.p(_,p):(f=jn(_),f.c(),f.m(e,c)):f&&(f.d(1),f=null),_[1]?u?u.p(_,p):(u=Hn(_),u.c(),u.m(e,null)):u&&(u.d(1),u=null)},i:N,o:N,d(_){_&&d(e),l[15](null),f&&f.d(),u&&u.d(),i=!1,nt(a)}}}function zn(l){let e=0;const n=window.setTimeout(()=>{e=window.setInterval(l,90)},1e3);window.addEventListener("mouseup",()=>{clearTimeout(n),clearInterval(e)},{once:!0})}const Ro=l=>l.preventDefault();function Lo(l,e,n){let t,s,r;K(l,Fe,V=>n(21,t=V)),K(l,vt,V=>n(22,s=V)),K(l,it,V=>n(23,r=V));let{value:o=""}=e;const c=new we(0),i=new we(1);let{assetRef:a=""}=e,{bufferMax:f=0}=e,u,_=c,p=c,h="",b="";async function g(){n(5,h="[...]");const V=Re.parseEntityPath(a);if(V?.type==="holding"){const se=V.coin;n(3,u=t.coins[se]);const Z=r.cachedBalance(s,se);Z&&Z.timestamp>Date.now()-5*zt&&n(4,_=new we(Z.data.amount).shiftedBy(-u.decimals).minus(new we(f)));const ie=await r.bankBalance(s,se);if(a===ie.holding){const ue=new we(ie.balance.amount).shiftedBy(-u.decimals).minus(new we(f));ue.eq(_)||n(4,_=ue);const ce=t.coins[se];n(13,b=ce?.extra?.coingecko_id||"")}}else V?.type==="token"&&n(3,u=null);u?p=i.shiftedBy(-u.decimals):(p=c,n(4,_=c))}function k(V){n(0,o=V.target.value)}function C(){const V=p.plus(o||0);V.lte(_)?n(0,o=V+""):n(0,o=_+""),B()}function P(){const V=p.negated().plus(o||0);V.gte(0)?V.gt(_)?n(0,o=_+""):n(0,o=V+""):n(0,o="0"),B()}let{error:R=""}=e,D;function G(V){D.setCustomValidity(V),n(1,R=V)}function B(){if(!o)return G("Enter an amount");let V;try{V=new we(o)}catch{return G("Invalid number")}if(V.lt(c))return G("Value must be positive");if(V.gt(_))return G("Insufficient balance");n(1,R="")}let{showValidation:L=0}=e;const O=()=>B();function U(V){de[V?"unshift":"push"](()=>{D=V,n(6,D)})}const E=()=>C(),q=()=>zn(C),H=()=>P(),j=()=>zn(P);return l.$$set=V=>{"value"in V&&n(0,o=V.value),"assetRef"in V&&n(2,a=V.assetRef),"bufferMax"in V&&n(11,f=V.bufferMax),"error"in V&&n(1,R=V.error),"showValidation"in V&&n(12,L=V.showValidation)},l.$$.update=()=>{l.$$.dirty&4&&(a?g():n(3,u=null)),l.$$.dirty&8193&&(b?(async()=>{const V=await pn.coinsVersus([b],"usd",1*zt);b in V?n(5,h=Ft(+o*+V[b],!0)):n(5,h="(?)")})():n(5,h="")),l.$$.dirty&4097&&(L?B():o||n(1,R=""))},[o,R,a,u,_,h,D,k,C,P,B,f,L,b,O,U,E,q,H,j]}class Oo extends x{constructor(e){super(),ee(this,e,Lo,Io,Q,{value:0,assetRef:2,bufferMax:11,error:1,showValidation:12})}}function Po(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function jo(l){let e,n,t;function s(o){l[4](o)}let r={id:"sender-select",placeholder:"Select account",secondaryClass:"balance",items:l[1]};return l[0]!==void 0&&(r.value=l[0]),e=new ll({props:r}),de.push(()=>Ne(e,"value",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};!n&&c&1&&(n=!0,i.value=o[0],Ee(()=>n=!1)),e.$set(i)},i(o){t||($(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function Ho(l){let e;return{c(){e=z("Loading accounts...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function zo(l){let e,n,t={ctx:l,current:null,token:null,hasCatch:!1,pending:Ho,then:jo,catch:Po,value:1,blocks:[,,,]};return Le(l[2](),t),{c(){e=y("div"),t.block.c(),w(e,"class","sender")},m(s,r){m(s,e,r),t.block.m(e,t.anchor=null),t.mount=()=>e,t.anchor=null,n=!0},p(s,[r]){l=s,Oe(t,l,r)},i(s){n||($(t.block),n=!0)},o(s){for(let r=0;r<3;r+=1){const o=t.blocks[r];S(o)}n=!1},d(s){s&&d(e),t.block.d(),t.token=null,t=null}}}function Fo(l,e,n){let t;K(l,pt,f=>n(5,t=f));let{accountRef:s=t}=e;const r=(f,u)=>({value:f,primary:u.name,secondary:u.extra?.total_fiat_cache||"(?)"});let o,c;async function i(){const f=await et.read();return n(1,c=mn(f.raw,r)),n(0,o=c.find(u=>s===u.value)),c}function a(f){o=f,n(0,o)}return l.$$set=f=>{"accountRef"in f&&n(3,s=f.accountRef)},l.$$.update=()=>{l.$$.dirty&1&&o&&n(3,s=o.value)},[o,c,i,s,a]}class Bo extends x{constructor(e){super(),ee(this,e,Fo,zo,Q,{accountRef:3})}}function Do(l){let e;return{c(){e=y("span"),e.textContent="Failed to locate contact",w(e,"class","warning")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Vo(l){let e,n,t;return n=new st({props:{address:l[0]}}),{c(){e=y("span"),T(n.$$.fragment),w(e,"class","manual")},m(s,r){m(s,e,r),A(n,e,null),t=!0},p(s,r){const o={};r&1&&(o.address=s[0]),n.$set(o)},i(s){t||($(n.$$.fragment,s),t=!0)},o(s){S(n.$$.fragment,s),t=!1},d(s){s&&d(e),I(n)}}}function qo(l){let e,n,t,s,r,o=l[1].name+"",c,i,a,f,u=l[1]&&Fn(l);return a=new st({props:{address:fe.bech32(l[1].address)}}),{c(){e=y("div"),n=y("span"),u&&u.c(),t=M(),s=y("span"),r=y("span"),c=z(o),i=M(),T(a.$$.fragment),w(n,"class","contact-pfp svelte-1ontxbe"),w(r,"class","name svelte-1ontxbe"),w(s,"class","info svelte-1ontxbe"),w(e,"class","contact svelte-1ontxbe")},m(_,p){m(_,e,p),v(e,n),u&&u.m(n,null),v(e,t),v(e,s),v(s,r),v(r,c),v(s,i),A(a,s,null),f=!0},p(_,p){_[1]?u?(u.p(_,p),p&2&&$(u,1)):(u=Fn(_),u.c(),$(u,1),u.m(n,null)):u&&(le(),S(u,1,1,()=>{u=null}),re()),(!f||p&2)&&o!==(o=_[1].name+"")&&J(c,o);const h={};p&2&&(h.address=fe.bech32(_[1].address)),a.$set(h)},i(_){f||($(u),$(a.$$.fragment,_),f=!0)},o(_){S(u),S(a.$$.fragment,_),f=!1},d(_){_&&d(e),u&&u.d(),I(a)}}}function Fn(l){let e,n;return e=new ol({props:{dim:28,resource:l[1],genStyle:"font-size:18px;"}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.resource=t[1]),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Uo(l){let e,n,t,s;const r=[qo,Vo,Do],o=[];function c(i,a){return i[1]?0:i[0]?1:2}return e=c(l),n=o[e]=r[e](l),{c(){n.c(),t=oe()},m(i,a){o[e].m(i,a),m(i,t,a),s=!0},p(i,[a]){let f=e;e=c(i),e===f?o[e].p(i,a):(le(),S(o[f],1,1,()=>{o[f]=null}),re(),n=o[e],n?n.p(i,a):(n=o[e]=r[e](i),n.c()),$(n,1),n.m(t.parentNode,t))},i(i){s||($(n),s=!0)},o(i){S(n),s=!1},d(i){o[e].d(i),i&&d(t)}}}function Xo(l,e,n){let t;K(l,qt,a=>n(3,t=a));let{contact:s=null}=e,r=s,{address:o=""}=e;async function c(){const f=(await Qe.read()).contacts(t);if(!r&&o){for(const[,u]of f)if(o===fe.bech32(u.address)){n(1,r=u);break}}}c();const i=rl("agents",c);return Tt(()=>{i()}),l.$$set=a=>{"contact"in a&&n(2,s=a.contact),"address"in a&&n(0,o=a.address)},[o,r,s]}class yl extends x{constructor(e){super(),ee(this,e,Xo,Uo,Q,{contact:2,address:0})}}function Ko(l){let e,n,t,s;return n=new yl({props:{contact:l[1].contact,address:l[1].value}}),{c(){e=y("div"),T(n.$$.fragment),w(e,"class",t="item "+l[2]+" svelte-pgx3pp"),Y(e,"display_none",l[0]||!l[1].value)},m(r,o){m(r,e,o),A(n,e,null),s=!0},p(r,[o]){const c={};o&2&&(c.contact=r[1].contact),o&2&&(c.address=r[1].value),n.$set(c),(!s||o&4&&t!==(t="item "+r[2]+" svelte-pgx3pp"))&&w(e,"class",t),o&7&&Y(e,"display_none",r[0]||!r[1].value)},i(r){s||($(n.$$.fragment,r),s=!0)},o(r){S(n.$$.fragment,r),s=!1},d(r){r&&d(e),I(n)}}}function Wo(l,e,n){let{isActive:t=!1}=e,{isFirst:s=!1}=e,{isHover:r=!1}=e,{isSelectable:o=!1}=e,{getOptionLabel:c=void 0}=e,{item:i}=e,{filterText:a=""}=e,f="";return l.$$set=u=>{"isActive"in u&&n(0,t=u.isActive),"isFirst"in u&&n(3,s=u.isFirst),"isHover"in u&&n(4,r=u.isHover),"isSelectable"in u&&n(5,o=u.isSelectable),"getOptionLabel"in u&&n(6,c=u.getOptionLabel),"item"in u&&n(1,i=u.item),"filterText"in u&&n(7,a=u.filterText)},l.$$.update=()=>{if(l.$$.dirty&57){const u=[];t&&u.push("active"),s&&u.push("first"),r&&u.push("hover"),o||u.push("notSelectable"),n(2,f=u.join(" "))}},[t,i,f,s,r,o,c,a]}class Go extends x{constructor(e){super(),ee(this,e,Wo,Ko,Q,{isActive:0,isFirst:3,isHover:4,isSelectable:5,getOptionLabel:6,item:1,filterText:7})}}function Yo(l){let e,n,t;return n=new yl({props:{contact:l[0].contact,address:l[0].value}}),{c(){e=y("div"),T(n.$$.fragment),w(e,"class","selection svelte-aitqlq")},m(s,r){m(s,e,r),A(n,e,null),t=!0},p(s,[r]){const o={};r&1&&(o.contact=s[0].contact),r&1&&(o.address=s[0].value),n.$set(o)},i(s){t||($(n.$$.fragment,s),t=!0)},o(s){S(n.$$.fragment,s),t=!1},d(s){s&&d(e),I(n)}}}function Zo(l,e,n){let{getSelectionLabel:t}=e,{item:s}=e;return l.$$set=r=>{"getSelectionLabel"in r&&n(1,t=r.getSelectionLabel),"item"in r&&n(0,s=r.item)},[s,t]}class Jo extends x{constructor(e){super(),ee(this,e,Zo,Yo,Q,{getSelectionLabel:1,item:0})}}function Qo(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function xo(l){let e,n,t,s;function r(i){l[14](i)}function o(i){l[15](i)}let c={id:"recipient-select",placeholder:"Address or contact",listOffset:1,isClearable:!!l[0],isCreatable:!!l[3],Item:Go,Selection:Jo,items:l[8],value:l[4],noOptionsMessage:`Stop typing in the address. 
 Use copy/paste instead!`,containerClasses:l[1]?"invalid":""};return l[2]!==void 0&&(c.filterText=l[2]),l[6]!==void 0&&(c.listOpen=l[6]),e=new mr({props:c}),de.push(()=>Ne(e,"filterText",r)),de.push(()=>Ne(e,"listOpen",o)),e.$on("select",l[10]),e.$on("clear",l[11]),{c(){T(e.$$.fragment)},m(i,a){A(e,i,a),s=!0},p(i,a){const f={};a&1&&(f.isClearable=!!i[0]),a&8&&(f.isCreatable=!!i[3]),a&16&&(f.value=i[4]),a&2&&(f.containerClasses=i[1]?"invalid":""),!n&&a&4&&(n=!0,f.filterText=i[2],Ee(()=>n=!1)),!t&&a&64&&(t=!0,f.listOpen=i[6],Ee(()=>t=!1)),e.$set(f)},i(i){s||($(e.$$.fragment,i),s=!0)},o(i){S(e.$$.fragment,i),s=!1},d(i){I(e,i)}}}function ei(l){let e;return{c(){e=z("Loading contacts...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Bn(l){let e,n;return{c(){e=y("span"),n=z(l[1]),w(e,"class","validation-message")},m(t,s){m(t,e,s),v(e,n)},p(t,s){s&2&&J(n,t[1])},d(t){t&&d(e)}}}function ti(l){let e,n,t,s={ctx:l,current:null,token:null,hasCatch:!1,pending:ei,then:xo,catch:Qo,value:8,blocks:[,,,]};Le(l[9](),s);let r=l[1]&&Bn(l);return{c(){e=y("div"),s.block.c(),n=M(),r&&r.c(),w(e,"class","sender svelte-1rmr362"),Y(e,"hide-cursor",l[5])},m(o,c){m(o,e,c),s.block.m(e,s.anchor=null),s.mount=()=>e,s.anchor=n,v(e,n),r&&r.m(e,null),l[16](e),t=!0},p(o,[c]){l=o,Oe(s,l,c),l[1]?r?r.p(l,c):(r=Bn(l),r.c(),r.m(e,null)):r&&(r.d(1),r=null),c&32&&Y(e,"hide-cursor",l[5])},i(o){t||($(s.block),t=!0)},o(o){for(let c=0;c<3;c+=1){const i=s.blocks[c];S(i)}t=!1},d(o){o&&d(e),s.block.d(),s.token=null,s=null,r&&r.d(),l[16](null)}}}function ni(l,e,n){let t,s;K(l,Fe,L=>n(13,t=L)),K(l,qt,L=>n(17,s=L));let{address:r=""}=e;const o=r;let{error:c=""}=e,i,a,f;const u=L=>({value:fe.bech32(L.address),label:L.name,contact:L});async function _(){const L=await Qe.read(),O=[{value:"",label:"",contact:null}];n(8,f=[...L.contacts(s)]);for(const[,U]of f){const E=u(U),q=fe.bech32(U.address);o&&q===o&&n(4,a=E),O.push(E)}return O}function p(L){n(0,r=L.detail.value),n(1,c="")}function h(){n(0,r="")}let b="",g=!1,k=!1;function C(){if(n(3,b=""),!t)n(1,c="No chain set");else if(!fe.isValidAddressFor(t,i,"acc"))console.error("Invalid address"),n(1,c="Invalid address for this chain");else{n(1,c="");for(const[,L]of f)if(i===fe.bech32(L.address)){n(2,i=""),n(4,a=u(L)),n(6,k=!1),n(5,g=!0);return}n(3,b=i),setTimeout(()=>{dn(P,".manual>.address").click(),n(6,k=!1)},0)}}let P,{showValidation:R=0}=e;function D(L){i=L,n(2,i)}function G(L){k=L,n(6,k)}function B(L){de[L?"unshift":"push"](()=>{P=L,n(7,P)})}return l.$$set=L=>{"address"in L&&n(0,r=L.address),"error"in L&&n(1,c=L.error),"showValidation"in L&&n(12,R=L.showValidation)},l.$$.update=()=>{l.$$.dirty&12&&(n(5,g=!1),i?C():(n(5,g=!!b),n(3,b=""))),l.$$.dirty&12293&&(R?r?fe.isValidAddressFor(t,r,"acc")?n(1,c=""):n(1,c="Invalid address for this chain"):i?C():n(1,c="Enter a recipient"):r||n(1,c=""))},[r,c,i,b,a,g,k,P,f,_,p,h,R,t,D,G,B]}class si extends x{constructor(e){super(),ee(this,e,ni,ti,Q,{address:0,error:1,showValidation:12})}}function li(l){let e,n=(l[1]?.name||"[...]")+"",t,s,r,o=(l[1]?.extra?.total_fiat_cache||"(?)")+"",c;return{c(){e=y("div"),t=z(n),s=M(),r=y("div"),c=z(o),w(e,"class","title"),w(r,"class","subtitle svelte-m8l3qm")},m(i,a){m(i,e,a),v(e,t),m(i,s,a),m(i,r,a),v(r,c)},p(i,a){a&2&&n!==(n=(i[1]?.name||"[...]")+"")&&J(t,n),a&2&&o!==(o=(i[1]?.extra?.total_fiat_cache||"(?)")+"")&&J(c,o)},d(i){i&&d(e),i&&d(s),i&&d(r)}}}function ri(l){let e,n=(l[3]||"[...]")+"",t,s,r,o,c;return o=new st({props:{address:l[10]}}),{c(){e=y("div"),t=z(n),s=M(),r=y("div"),T(o.$$.fragment),w(e,"class","title"),w(r,"class","subtitle svelte-m8l3qm")},m(i,a){m(i,e,a),v(e,t),m(i,s,a),m(i,r,a),A(o,r,null),c=!0},p(i,a){(!c||a&8)&&n!==(n=(i[3]||"[...]")+"")&&J(t,n)},i(i){c||($(o.$$.fragment,i),c=!0)},o(i){S(o.$$.fragment,i),c=!1},d(i){i&&d(e),i&&d(s),i&&d(r),I(o)}}}function oi(l){let e;return{c(){e=z("=[...]")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function ii(l){let e=qe(new we(l[9]).times(l[4]).toNumber())+"",n;return{c(){n=z(e)},m(t,s){m(t,n,s)},p(t,s){s&16&&e!==(e=qe(new we(t[9]).times(t[4]).toNumber())+"")&&J(n,e)},d(t){t&&d(n)}}}function ci(l){let e,n,t;function s(c,i){return c[4]?ii:oi}let r=s(l),o=r(l);return{c(){e=y("div"),e.textContent=`${l[9]}  ${l[8]}`,n=M(),t=y("div"),o.c(),w(e,"class","title"),w(t,"class","subtitle svelte-m8l3qm")},m(c,i){m(c,e,i),m(c,n,i),m(c,t,i),o.m(t,null)},p(c,i){r===(r=s(c))&&o?o.p(c,i):(o.d(1),o=r(c),o&&(o.c(),o.m(t,null)))},d(c){c&&d(e),c&&d(n),c&&d(t),o.d()}}}function ai(l){let e;return{c(){e=z("=[...]")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function fi(l){let e=qe(new we(l[11]).times(l[4]).toNumber())+"",n;return{c(){n=z(e)},m(t,s){m(t,n,s)},p(t,s){s&16&&e!==(e=qe(new we(t[11]).times(t[4]).toNumber())+"")&&J(n,e)},d(t){t&&d(n)}}}function ui(l){let e,n,t;function s(c,i){return c[4]?fi:ai}let r=s(l),o=r(l);return{c(){e=y("div"),e.textContent=`${l[11]}  ${l[8]}`,n=M(),t=y("div"),o.c(),w(e,"class","title"),w(t,"class","subtitle svelte-m8l3qm")},m(c,i){m(c,e,i),m(c,n,i),m(c,t,i),o.m(t,null)},p(c,i){r===(r=s(c))&&o?o.p(c,i):(o.d(1),o=r(c),o&&(o.c(),o.m(t,null)))},d(c){c&&d(e),c&&d(n),c&&d(t),o.d()}}}function _i(l){let e;return{c(){e=z("=[...]")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function pi(l){let e=qe(new we(l[5]).times(l[4]).toNumber())+"",n;return{c(){n=z(e)},m(t,s){m(t,n,s)},p(t,s){s&48&&e!==(e=qe(new we(t[5]).times(t[4]).toNumber())+"")&&J(n,e)},d(t){t&&d(n)}}}function mi(l){let e,n=(l[5]||"[...]")+"",t,s,r,o,c;function i(u,_){return u[4]?pi:_i}let a=i(l),f=a(l);return{c(){e=y("div"),t=z(n),s=M(),r=z(l[8]),o=M(),c=y("div"),f.c(),w(e,"class","title"),w(c,"class","subtitle svelte-m8l3qm")},m(u,_){m(u,e,_),v(e,t),v(e,s),v(e,r),m(u,o,_),m(u,c,_),f.m(c,null)},p(u,_){_&32&&n!==(n=(u[5]||"[...]")+"")&&J(t,n),a===(a=i(u))&&f?f.p(u,_):(f.d(1),f=a(u),f&&(f.c(),f.m(c,null)))},d(u){u&&d(e),u&&d(o),u&&d(c),f.d()}}}function di(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,b,g,k,C,P,R,D,G,B,L,O,U;return e=new Ae({props:{pops:!0,exits:!0,title:"Sending",symbol:l[8],subtitle:l[6].name}}),e.$on("close",l[19]),t=new me({props:{short:!0,key:"sender",name:"From",$$slots:{default:[li]},$$scope:{ctx:l}}}),c=new me({props:{short:!0,key:"recipient",name:"To",$$slots:{default:[ri]},$$scope:{ctx:l}}}),u=new me({props:{short:!0,key:"amount",name:"Amount",$$slots:{default:[ci]},$$scope:{ctx:l}}}),b=new me({props:{short:!0,key:"fee-review",name:"Fee",$$slots:{default:[ui]},$$scope:{ctx:l}}}),P=new me({props:{short:!0,key:"total",name:"Total",$$slots:{default:[mi]},$$scope:{ctx:l}}}),B=new vr({props:{memoPlaintext:l[0],memoCiphertext:l[2]}}),O=new ct({props:{back:!0,confirm:["Approve",l[20]]}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),r=y("hr"),o=M(),T(c.$$.fragment),i=M(),a=y("hr"),f=M(),T(u.$$.fragment),_=M(),p=y("hr"),h=M(),T(b.$$.fragment),g=M(),k=y("hr"),C=M(),T(P.$$.fragment),R=M(),D=y("hr"),G=M(),T(B.$$.fragment),L=M(),T(O.$$.fragment)},m(E,q){A(e,E,q),m(E,n,q),A(t,E,q),m(E,s,q),m(E,r,q),m(E,o,q),A(c,E,q),m(E,i,q),m(E,a,q),m(E,f,q),A(u,E,q),m(E,_,q),m(E,p,q),m(E,h,q),A(b,E,q),m(E,g,q),m(E,k,q),m(E,C,q),A(P,E,q),m(E,R,q),m(E,D,q),m(E,G,q),A(B,E,q),m(E,L,q),A(O,E,q),U=!0},p(E,q){const H={};q&64&&(H.subtitle=E[6].name),e.$set(H);const j={};q&1073741826&&(j.$$scope={dirty:q,ctx:E}),t.$set(j);const V={};q&1073741832&&(V.$$scope={dirty:q,ctx:E}),c.$set(V);const se={};q&1073741840&&(se.$$scope={dirty:q,ctx:E}),u.$set(se);const Z={};q&1073741840&&(Z.$$scope={dirty:q,ctx:E}),b.$set(Z);const ie={};q&1073741872&&(ie.$$scope={dirty:q,ctx:E}),P.$set(ie);const ue={};q&1&&(ue.memoPlaintext=E[0]),q&4&&(ue.memoCiphertext=E[2]),B.$set(ue)},i(E){U||($(e.$$.fragment,E),$(t.$$.fragment,E),$(c.$$.fragment,E),$(u.$$.fragment,E),$(b.$$.fragment,E),$(P.$$.fragment,E),$(B.$$.fragment,E),$(O.$$.fragment,E),U=!0)},o(E){S(e.$$.fragment,E),S(t.$$.fragment,E),S(c.$$.fragment,E),S(u.$$.fragment,E),S(b.$$.fragment,E),S(P.$$.fragment,E),S(B.$$.fragment,E),S(O.$$.fragment,E),U=!1},d(E){I(e,E),E&&d(n),I(t,E),E&&d(s),E&&d(r),E&&d(o),I(c,E),E&&d(i),E&&d(a),E&&d(f),I(u,E),E&&d(_),E&&d(p),E&&d(h),I(b,E),E&&d(g),E&&d(k),E&&d(C),I(P,E),E&&d(R),E&&d(D),E&&d(G),I(B,E),E&&d(L),I(O,E)}}}function hi(l){let e,n;return e=new ve({props:{debug:"SendNative",slides:!0,$$slots:{default:[di]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&1073741951&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}const Dn=20000n,gi=.25;function bi(l,e,n){let t,s,r,o,c;K(l,wt,Z=>n(24,s=Z)),K(l,tn,Z=>n(25,r=Z)),K(l,it,Z=>n(26,o=Z)),K(l,Fe,Z=>n(6,c=Z));const i=he("page"),a=chrome.runtime;let{coin:f}=e;const u=f,_=c.coins[u];let{accountRef:p}=e,h,b,{amount:g}=e;const k=g;let{recipient:C}=e;const P=C;let{encryptMemo:R=!1}=e;const D=R;let G="",B="",L="",O,{fee:U}=e;const E=U;let{memoPlaintext:q}=e,H=0;(async Z=>{const ie=_.extra?.coingecko_id||"";if(ie){const ue=await pn.coinsVersus([ie],"usd",0);n(4,H=ue[ie])}})(),(async()=>{const Z=await et.read();n(1,h=Z.at(p)),b=fe.addressFor(h.pubkey);const ie=Qe.pathForContact(P);if(O=await Qe.getContact(ie),n(3,L=O?.name||""),D){const ue=dr(q);if(ue.byteLength>nn)throw ht({title:"Invalid Memo",text:"Your memo text exceeds the character limitation for private memos"});const ce=new Uint8Array(nn);ce.set(ue,0);let ae;try{({pubkey:ae}=await o.e2eInfoFor(P))}catch(pe){throw ht({title:"Recipient Account Unpublished",error:pe})}let _e;try{({sequence:_e}=await o.e2eInfoFor(b))}catch(pe){throw ht({title:"Invalid Account for Private Memos",error:pe})}const F=await hr(`${BigInt(_e)+1n}`,`${Dn}`),X=await o.ecdhEncrypt(ae,ce,F);G=n(2,B=gr(X));{if(!B.startsWith("\u{1F512}1"))throw new Error("Failed to verify encrypted memo prefix");const pe=br(B.slice(3)),Be=await o.ecdhDecrypt(ae,pe,F),Ie=wr(Be).replace(/\0+$/,"");if(Ie!==q)throw new Error(`Simulated decrypted memo did not match original: ${Ie}`)}}})();function j(){const Z=BigInt(new we(k).shiftedBy(_.decimals).toString());a.sendMessage({type:"bankSend",value:{network:r,sender:b,recipient:P,coin:u,amount:`${Z}`,limit:`${Dn}`,price:gi,memo:G}}),i.reset(),s.activateThread(Je.HISTORY)}const V=()=>i.reset(),se=()=>j();return l.$$set=Z=>{"coin"in Z&&n(13,f=Z.coin),"accountRef"in Z&&n(14,p=Z.accountRef),"amount"in Z&&n(15,g=Z.amount),"recipient"in Z&&n(16,C=Z.recipient),"encryptMemo"in Z&&n(17,R=Z.encryptMemo),"fee"in Z&&n(18,U=Z.fee),"memoPlaintext"in Z&&n(0,q=Z.memoPlaintext)},l.$$.update=()=>{l.$$.dirty&262144&&n(5,t=new we(k).plus(U).toString())},[q,h,B,L,H,t,c,i,u,k,P,E,j,f,p,g,C,R,U,V,se]}class wi extends x{constructor(e){super(),ee(this,e,bi,hi,Q,{coin:13,accountRef:14,amount:15,recipient:16,encryptMemo:17,fee:18,memoPlaintext:0})}}var vi=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>
</svg>`;function Vn(l){let e,n,t,s,r,o,c,i,a,f,u,_,p=l[0]&&qn(l),h=l[2]&&Un(l);const b=l[9].default,g=Ut(b,l,l[8],null);let k=l[3]&&Xn(l);return{c(){e=y("div"),n=y("div"),p&&p.c(),t=M(),s=y("span"),r=z(l[1]),o=M(),h&&h.c(),c=M(),i=y("div"),g&&g.c(),a=M(),f=y("div"),k&&k.c(),w(s,"class","title svelte-19fzls0"),w(n,"class","header svelte-19fzls0"),w(i,"class","body svelte-19fzls0"),w(f,"class","actions svelte-19fzls0"),w(e,"class","notice svelte-19fzls0"),w(e,"style",l[4])},m(C,P){m(C,e,P),v(e,n),p&&p.m(n,null),v(n,t),v(n,s),v(s,r),v(n,o),h&&h.m(n,null),v(e,c),v(e,i),g&&g.m(i,null),v(e,a),v(e,f),k&&k.m(f,null),_=!0},p(C,P){C[0]?p?p.p(C,P):(p=qn(C),p.c(),p.m(n,t)):p&&(p.d(1),p=null),(!_||P&2)&&J(r,C[1]),C[2]?h?(h.p(C,P),P&4&&$(h,1)):(h=Un(C),h.c(),$(h,1),h.m(n,null)):h&&(le(),S(h,1,1,()=>{h=null}),re()),g&&g.p&&(!_||P&256)&&Xt(g,b,C,C[8],_?Wt(b,C[8],P,null):Kt(C[8]),null),C[3]?k?k.p(C,P):(k=Xn(C),k.c(),k.m(f,null)):k&&(k.d(1),k=null),(!_||P&16)&&w(e,"style",C[4])},i(C){_||($(h),$(g,C),Ke(()=>{u||(u=Ve(e,ge,{},!0)),u.run(1)}),_=!0)},o(C){S(h),S(g,C),u||(u=Ve(e,ge,{},!1)),u.run(0),_=!1},d(C){C&&d(e),p&&p.d(),h&&h.d(),g&&g.d(C),k&&k.d(),C&&u&&u.end()}}}function qn(l){let e,n=l[6][l[0]].svg+"",t;return{c(){e=y("span"),w(e,"class","global_svg-icon"),w(e,"style",t=`color:${l[6][l[0]].color};`)},m(s,r){m(s,e,r),e.innerHTML=n},p(s,r){r&1&&n!==(n=s[6][s[0]].svg+"")&&(e.innerHTML=n),r&1&&t!==(t=`color:${s[6][s[0]].color};`)&&w(e,"style",t)},d(s){s&&d(e)}}}function Un(l){let e,n,t;return n=new $r({props:{bgColor:"var(--theme-color-black)"}}),n.$on("click",l[7]),{c(){e=y("span"),T(n.$$.fragment),w(e,"class","exit svelte-19fzls0")},m(s,r){m(s,e,r),A(n,e,null),t=!0},p:N,i(s){t||($(n.$$.fragment,s),t=!0)},o(s){S(n.$$.fragment,s),t=!1},d(s){s&&d(e),I(n)}}}function Xn(l){let e,n=l[3][0]+"",t,s,r;return{c(){e=y("button"),t=z(n),w(e,"class","pill")},m(o,c){m(o,e,c),v(e,t),s||(r=te(e,"click",l[10]),s=!0)},p(o,c){c&8&&n!==(n=o[3][0]+"")&&J(t,n)},d(o){o&&d(e),s=!1,r()}}}function $i(l){let e,n,t=l[5]&&Vn(l);return{c(){t&&t.c(),e=oe()},m(s,r){t&&t.m(s,r),m(s,e,r),n=!0},p(s,[r]){s[5]?t?(t.p(s,r),r&32&&$(t,1)):(t=Vn(s),t.c(),$(t,1),t.m(e.parentNode,e)):t&&(le(),S(t,1,1,()=>{t=null}),re())},i(s){n||($(t),n=!0)},o(s){S(t),n=!1},d(s){t&&t.d(s),s&&d(e)}}}function ki(l,e,n){let{$$slots:t={},$$scope:s}=e;const r=il(),o={error:{svg:vi,color:"var(--theme-color-orange);"}};let{icon:c=""}=e,{title:i}=e,{dismissable:a=!1}=e;const f=typeof a=="string"?a:"",u=f?`notice_${f}`:"";let{action:_=null}=e,{rootStyle:p=""}=e,h=!u;(async function(){u&&await gt.get(u)!==!0&&n(5,h=!0)})();async function b(){r("dismiss"),n(5,h=!1),u&&await gt.set(u,!0)}const g=()=>_?.[1]();return l.$$set=k=>{"icon"in k&&n(0,c=k.icon),"title"in k&&n(1,i=k.title),"dismissable"in k&&n(2,a=k.dismissable),"action"in k&&n(3,_=k.action),"rootStyle"in k&&n(4,p=k.rootStyle),"$$scope"in k&&n(8,s=k.$$scope)},[c,i,a,_,p,h,o,b,s,t,g]}class Sl extends x{constructor(e){super(),ee(this,e,ki,$i,Q,{icon:0,title:1,dismissable:2,action:3,rootStyle:4})}}function Kn(l,e,n){const t=l.slice();return t[1]=e[n],t[3]=n,t}function Wn(l){let e,n;return e=new lt({props:{name:"Loading..."}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function yi(l){let e,n,t=Array(l[0]),s=[];for(let o=0;o<t.length;o+=1)s[o]=Wn(Kn(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){e=y("div");for(let o=0;o<s.length;o+=1)s[o].c();w(e,"class","rows")},m(o,c){m(o,e,c);for(let i=0;i<s.length;i+=1)s[i].m(e,null);n=!0},p(o,[c]){if(c&1){t=Array(o[0]);let i;for(i=0;i<t.length;i+=1){const a=Kn(o,t,i);s[i]?(s[i].p(a,c),$(s[i],1)):(s[i]=Wn(),s[i].c(),$(s[i],1),s[i].m(e,null))}for(le(),i=t.length;i<s.length;i+=1)r(i);re()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)$(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){o&&d(e),Me(s,o)}}}function Si(l,e,n){let{count:t=1}=e;return l.$$set=s=>{"count"in s&&n(0,t=s.count)},[t]}class Ci extends x{constructor(e){super(),ee(this,e,Si,yi,Q,{count:0})}}const Mi=l=>({label:l&2,button:l&1}),Gn=l=>({label:l[1],button:l[0]});function Ni(l){let e;const n=l[6].default,t=Ut(n,l,l[5],Gn);return{c(){t&&t.c()},m(s,r){t&&t.m(s,r),e=!0},p(s,[r]){t&&t.p&&(!e||r&35)&&Xt(t,n,s,s[5],e?Wt(n,s[5],r,Mi):Kt(s[5]),Gn)},i(s){e||($(t,s),e=!0)},o(s){S(t,s),e=!1},d(s){t&&t.d(s)}}}function Ei(l,e,n){let t,s;const r=["id","toggled","disabled"];let o=Bt(e,r),{$$slots:c={},$$scope:i}=e,{id:a="toggle"+Math.random().toString(36)}=e,{toggled:f=!0}=e,{disabled:u=!1}=e;return l.$$set=_=>{e=mt(mt({},e),cl(_)),n(7,o=Bt(e,r)),"id"in _&&n(2,a=_.id),"toggled"in _&&n(3,f=_.toggled),"disabled"in _&&n(4,u=_.disabled),"$$scope"in _&&n(5,i=_.$$scope)},l.$$.update=()=>{l.$$.dirty&4&&n(1,t={for:a}),n(0,s={...o,id:a,disabled:u,"aria-checked":f,type:"button",role:"switch"})},[s,t,a,f,u,i,c]}class Ti extends x{constructor(e){super(),ee(this,e,Ei,Ni,Q,{id:2,toggled:3,disabled:4})}}const Ai=l=>({toggled:l&1}),Yn=l=>({toggled:l[0]});function Zn(l){let e,n=(l[0]?l[5]:l[6])+"",t;return{c(){e=y("span"),t=z(n),w(e,"class","svelte-n6hnvc")},m(s,r){m(s,e,r),v(e,t)},p(s,r){r&97&&n!==(n=(s[0]?s[5]:s[6])+"")&&J(t,n)},d(s){s&&d(e)}}}function Ii(l){let e,n=l[5]&&l[6]&&Zn(l);return{c(){n&&n.c(),e=oe()},m(t,s){n&&n.m(t,s),m(t,e,s)},p(t,s){t[5]&&t[6]?n?n.p(t,s):(n=Zn(t),n.c(),n.m(e.parentNode,e)):n&&(n.d(1),n=null)},d(t){n&&n.d(t),t&&d(e)}}}function Ri(l){let e,n,t,s,r,o,c,i,a,f,u=[l[20]],_={};for(let C=0;C<u.length;C+=1)_=mt(_,u[C]);let p=[l[11],l[21],{style:o="font-size:"+l[10]+"px; color: "+l[7]+"; background-color: "+(l[0]?l[8]:l[9])+"; "+l[11].style},{disabled:l[4]}],h={};for(let C=0;C<p.length;C+=1)h=mt(h,p[C]);const b=l[12].default,g=Ut(b,l,l[18],Yn),k=g||Ii(l);return{c(){e=y("label"),n=z(l[1]),t=M(),s=y("div"),r=y("button"),c=M(),k&&k.c(),Lt(e,_),Y(e,"hideLabel",l[2]),Y(e,"svelte-n6hnvc",!0),Lt(r,h),Y(r,"small",l[3]),Y(r,"svelte-n6hnvc",!0),w(s,"class","svelte-n6hnvc")},m(C,P){m(C,e,P),v(e,n),m(C,t,P),m(C,s,P),v(s,r),r.autofocus&&r.focus(),v(s,c),k&&k.m(s,null),i=!0,a||(f=[te(r,"click",l[13]),te(r,"click",l[16]),te(r,"focus",l[14]),te(r,"blur",l[15])],a=!0)},p(C,P){(!i||P&2)&&J(n,C[1]),Lt(e,_=sn(u,[P&1048576&&C[20]])),Y(e,"hideLabel",C[2]),Y(e,"svelte-n6hnvc",!0),Lt(r,h=sn(p,[P&2048&&C[11],P&2097152&&C[21],(!i||P&3969&&o!==(o="font-size:"+C[10]+"px; color: "+C[7]+"; background-color: "+(C[0]?C[8]:C[9])+"; "+C[11].style))&&{style:o},(!i||P&16)&&{disabled:C[4]}])),Y(r,"small",C[3]),Y(r,"svelte-n6hnvc",!0),g?g.p&&(!i||P&262145)&&Xt(g,b,C,C[18],i?Wt(b,C[18],P,Ai):Kt(C[18]),Yn):k&&k.p&&(!i||P&97)&&k.p(C,i?P:-1)},i(C){i||($(k,C),i=!0)},o(C){S(k,C),i=!1},d(C){C&&d(e),C&&d(t),C&&d(s),k&&k.d(C),a=!1,nt(f)}}}function Li(l){let e,n,t;function s(o){l[17](o)}let r={$$slots:{default:[Ri,({label:o,button:c})=>({20:o,21:c}),({label:o,button:c})=>(o?1048576:0)|(c?2097152:0)]},$$scope:{ctx:l}};return l[0]!==void 0&&(r.toggled=l[0]),e=new Ti({props:r}),de.push(()=>Ne(e,"toggled",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,[c]){const i={};c&3411967&&(i.$$scope={dirty:c,ctx:o}),!n&&c&1&&(n=!0,i.toggled=o[0],Ee(()=>n=!1)),e.$set(i)},i(o){t||($(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function Oi(l,e,n){const t=["toggled","label","hideLabel","small","disabled","on","off","switchColor","toggledColor","untoggledColor","size"];let s=Bt(e,t),{$$slots:r={},$$scope:o}=e,{toggled:c=!0}=e,{label:i=""}=e,{hideLabel:a=!1}=e,{small:f=!1}=e,{disabled:u=!1}=e,{on:_=void 0}=e,{off:p=void 0}=e,{switchColor:h="var(--theme-color-black, #fff)"}=e,{toggledColor:b="var(--theme-color-primary, #0f62fe)"}=e,{untoggledColor:g="var(--theme-color-graymed, #8d8d8d)"}=e,{size:k=20}=e;const C=il();function P(L){Yt.call(this,l,L)}function R(L){Yt.call(this,l,L)}function D(L){Yt.call(this,l,L)}const G=()=>n(0,c=!c);function B(L){c=L,n(0,c)}return l.$$set=L=>{e=mt(mt({},e),cl(L)),n(11,s=Bt(e,t)),"toggled"in L&&n(0,c=L.toggled),"label"in L&&n(1,i=L.label),"hideLabel"in L&&n(2,a=L.hideLabel),"small"in L&&n(3,f=L.small),"disabled"in L&&n(4,u=L.disabled),"on"in L&&n(5,_=L.on),"off"in L&&n(6,p=L.off),"switchColor"in L&&n(7,h=L.switchColor),"toggledColor"in L&&n(8,b=L.toggledColor),"untoggledColor"in L&&n(9,g=L.untoggledColor),"size"in L&&n(10,k=L.size),"$$scope"in L&&n(18,o=L.$$scope)},l.$$.update=()=>{l.$$.dirty&1&&C("toggle",c)},[c,i,a,f,u,_,p,h,b,g,k,s,r,P,R,D,G,B,o]}class Pi extends x{constructor(e){super(),ee(this,e,Oi,Li,Q,{toggled:0,label:1,hideLabel:2,small:3,disabled:4,on:5,off:6,switchColor:7,toggledColor:8,untoggledColor:9,size:10})}}function Jn(l,e,n){const t=l.slice();return t[10]=e[n][0],t[11]=e[n][1],t}function ji(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Hi(l){let e,n,t=l[9].entries(),s=[];for(let o=0;o<t.length;o+=1)s[o]=Qn(Jn(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c&35){t=o[9].entries();let i;for(i=0;i<t.length;i+=1){const a=Jn(o,t,i);s[i]?(s[i].p(a,c),$(s[i],1)):(s[i]=Qn(a),s[i].c(),$(s[i],1),s[i].m(e.parentNode,e))}for(le(),i=t.length;i<s.length;i+=1)r(i);re()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)$(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Me(s,o),o&&d(e)}}}function zi(l){let e,n,t;function s(...r){return l[6](l[10],l[11],...r)}return e=new Pi({props:{size:20,on:"On",off:"Off",disabled:l[0],toggled:l[1][l[10]]?.enabled&&l[1][l[10]]?.published}}),e.$on("toggle",s),{c(){T(e.$$.fragment),n=M()},m(r,o){A(e,r,o),m(r,n,o),t=!0},p(r,o){l=r;const c={};o&1&&(c.disabled=l[0]),o&2&&(c.toggled=l[1][l[10]]?.enabled&&l[1][l[10]]?.published),e.$set(c)},i(r){t||($(e.$$.fragment,r),t=!0)},o(r){S(e.$$.fragment,r),t=!1},d(r){I(e,r),r&&d(n)}}}function Qn(l){let e,n;return e=new lt({props:{resource:l[11],resourcePath:l[10],$$slots:{right:[zi]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&16387&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Fi(l){let e,n;return e=new Ci({props:{count:5}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Bi(l){let e,n;return e=new ct({props:{confirm:["Done",l[7],l[0]]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&1&&(r.confirm=["Done",t[7],t[0]]),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Di(l){let e,n,t,s,r=l[2].name+"",o,c,i,a,f,u;e=new Ae({props:{plain:!0,pops:!0,account:!0,title:"Settings",subtitle:"Memos"}});let _={ctx:l,current:null,token:null,hasCatch:!1,pending:Fi,then:Hi,catch:ji,value:9,blocks:[,,,]};Le(fe.read(),_);let p=l[4]&&Bi(l);return{c(){T(e.$$.fragment),n=M(),t=y("h3"),s=z("Private Memos for "),o=z(r),c=M(),i=y("div"),_.block.c(),a=M(),p&&p.c(),f=oe(),w(i,"class","rows no-margin")},m(h,b){A(e,h,b),m(h,n,b),m(h,t,b),v(t,s),v(t,o),m(h,c,b),m(h,i,b),_.block.m(i,_.anchor=null),_.mount=()=>i,_.anchor=null,m(h,a,b),p&&p.m(h,b),m(h,f,b),u=!0},p(h,b){l=h,(!u||b&4)&&r!==(r=l[2].name+"")&&J(o,r),Oe(_,l,b),l[4]&&p.p(l,b)},i(h){u||($(e.$$.fragment,h),$(_.block),$(p),u=!0)},o(h){S(e.$$.fragment,h);for(let b=0;b<3;b+=1){const g=_.blocks[b];S(g)}S(p),u=!1},d(h){I(e,h),h&&d(n),h&&d(t),h&&d(c),h&&d(i),_.block.d(),_.token=null,_=null,h&&d(a),p&&p.d(h),h&&d(f)}}}function Vi(l){let e,n;return e=new ve({props:{debug:"SettingsMemos",$$slots:{default:[Di]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&16391&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function qi(l,e,n){let t,s;K(l,vt,_=>n(8,t=_)),K(l,yt,_=>n(2,s=_));const r=he("page"),o=he("intent")||null;let c=!1,i={};(async function(){n(1,i=await gt.get("e2e_encrypted_memos")||{})})();async function a(_,p,h){if(c)return;n(0,c=!0),n(1,i=await gt.get("e2e_encrypted_memos")||{}),i[_]||n(1,i[_]={enabled:!1,published:!1},i);const b=i[_];if(b.enabled=h,h)try{const g=await St.read();let k;for(const[C,P]of g.entries()){const R=P.chain;if(_===R){k=St.activate(P,p);break}}if(!k)throw new Error(`No network provider found for ${_}`);await k.e2eInfoFor(t),b.published=!0}catch(g){b.enabled=b.published=!1,g instanceof kr?ht({title:"Account Unpublished",text:`In order to enable private memos on ${p.name}, you must first send at least one transaction.`}):ht({title:g.constructor.name,error:g})}await gt.set("e2e_encrypted_memos",i),n(1,i),queueMicrotask(()=>{n(0,c=!1)})}return[c,i,s,r,o,a,(_,p,h)=>a(_,p,h.detail),()=>r.pop()]}class Ui extends x{constructor(e){super(),ee(this,e,qi,Vi,Q,{})}}function Xi(l){let e,n,t;function s(o){l[45](o)}let r={};return l[13]!==void 0&&(r.accountRef=l[13]),e=new Bo({props:r}),de.push(()=>Ne(e,"accountRef",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};!n&&c[0]&8192&&(n=!0,i.accountRef=o[13],Ee(()=>n=!1)),e.$set(i)},i(o){t||($(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function Ki(l){let e,n,t,s;function r(i){l[46](i)}function o(i){l[47](i)}let c={showValidation:l[4]};return l[6]!==void 0&&(c.error=l[6]),l[0]!==void 0&&(c.address=l[0]),e=new si({props:c}),de.push(()=>Ne(e,"error",r)),de.push(()=>Ne(e,"address",o)),{c(){T(e.$$.fragment)},m(i,a){A(e,i,a),s=!0},p(i,a){const f={};a[0]&16&&(f.showValidation=i[4]),!n&&a[0]&64&&(n=!0,f.error=i[6],Ee(()=>n=!1)),!t&&a[0]&1&&(t=!0,f.address=i[0],Ee(()=>t=!1)),e.$set(f)},i(i){s||($(e.$$.fragment,i),s=!0)},o(i){S(e.$$.fragment,i),s=!1},d(i){I(e,i)}}}function xn(l){let e,n,t,s;function r(c){l[48](c)}let o={id:"save-contact",$$slots:{default:[Wi]},$$scope:{ctx:l}};return l[5]!==void 0&&(o.checked=l[5]),n=new al({props:o}),de.push(()=>Ne(n,"checked",r)),{c(){e=y("div"),T(n.$$.fragment),w(e,"class","new-address svelte-1bqjv2w")},m(c,i){m(c,e,i),A(n,e,null),s=!0},p(c,i){const a={};i[2]&4096&&(a.$$scope={dirty:i,ctx:c}),!t&&i[0]&32&&(t=!0,a.checked=c[5],Ee(()=>t=!1)),n.$set(a)},i(c){s||($(n.$$.fragment,c),s=!0)},o(c){S(n.$$.fragment,c),s=!1},d(c){c&&d(e),I(n)}}}function Wi(l){let e;return{c(){e=z("Save to contacts")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function Gi(l){let e,n,t=l[21].icon+"",s,r,o=l[21].text+"",c,i,a,f,u,_=l[9]&&xn(l);return{c(){e=y("span"),n=y("span"),s=M(),r=y("span"),c=z(o),a=M(),_&&_.c(),f=oe(),w(n,"class","icon svelte-1bqjv2w"),w(r,"class","text svelte-1bqjv2w"),w(e,"class",i="status "+l[3]+" svelte-1bqjv2w")},m(p,h){m(p,e,h),v(e,n),n.innerHTML=t,v(e,s),v(e,r),v(r,c),m(p,a,h),_&&_.m(p,h),m(p,f,h),u=!0},p(p,h){(!u||h[0]&2097152)&&t!==(t=p[21].icon+"")&&(n.innerHTML=t),(!u||h[0]&2097152)&&o!==(o=p[21].text+"")&&J(c,o),(!u||h[0]&8&&i!==(i="status "+p[3]+" svelte-1bqjv2w"))&&w(e,"class",i),p[9]?_?(_.p(p,h),h[0]&512&&$(_,1)):(_=xn(p),_.c(),$(_,1),_.m(f.parentNode,f)):_&&(le(),S(_,1,1,()=>{_=null}),re())},i(p){u||($(_),u=!0)},o(p){S(_),u=!1},d(p){p&&d(e),p&&d(a),_&&_.d(p),p&&d(f)}}}function es(l){let e,n;return e=new me({props:{short:!0,slides:!0,key:"new-contact-name",name:"Contact Name",$$slots:{default:[Yi]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s[0]&256|s[2]&4096&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function ts(l){let e,n;return{c(){e=y("span"),n=z(l[8]),w(e,"class","validation-message")},m(t,s){m(t,e,s),v(e,n)},p(t,s){s[0]&256&&J(n,t[8])},d(t){t&&d(e)}}}function Yi(l){let e,n,t,s,r,o=l[8]&&ts(l);return{c(){e=y("input"),n=M(),o&&o.c(),t=oe(),w(e,"id","new-contact-name-value"),w(e,"type","text"),Y(e,"invalid",l[8])},m(c,i){m(c,e,i),m(c,n,i),o&&o.m(c,i),m(c,t,i),s||(r=te(e,"input",l[30]),s=!0)},p(c,i){i[0]&256&&Y(e,"invalid",c[8]),c[8]?o?o.p(c,i):(o=ts(c),o.c(),o.m(t.parentNode,t)):o&&(o.d(1),o=null)},d(c){c&&d(e),c&&d(n),o&&o.d(c),c&&d(t),s=!1,r()}}}function Zi(l){let e,n,t;function s(o){l[49](o)}let r={};return l[1]!==void 0&&(r.assetRef=l[1]),e=new Eo({props:r}),de.push(()=>Ne(e,"assetRef",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};!n&&c[0]&2&&(n=!0,i.assetRef=o[1],Ee(()=>n=!1)),e.$set(i)},i(o){t||($(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function Ji(l){let e,n,t,s;function r(i){l[50](i)}function o(i){l[51](i)}let c={bufferMax:l[10]?bt:0,assetRef:l[1],showValidation:l[4]};return l[7]!==void 0&&(c.error=l[7]),l[2]!==void 0&&(c.value=l[2]),e=new Oo({props:c}),de.push(()=>Ne(e,"error",r)),de.push(()=>Ne(e,"value",o)),{c(){T(e.$$.fragment)},m(i,a){A(e,i,a),s=!0},p(i,a){const f={};a[0]&1024&&(f.bufferMax=i[10]?bt:0),a[0]&2&&(f.assetRef=i[1]),a[0]&16&&(f.showValidation=i[4]),!n&&a[0]&128&&(n=!0,f.error=i[7],Ee(()=>n=!1)),!t&&a[0]&4&&(t=!0,f.value=i[2],Ee(()=>t=!1)),e.$set(f)},i(i){s||($(e.$$.fragment,i),s=!0)},o(i){S(e.$$.fragment,i),s=!1},d(i){I(e,i)}}}function ns(l){let e,n,t,s,r,o,c,i,a,f,u,_;return{c(){e=y("span"),n=y("span"),n.textContent="Balance",t=M(),s=y("span"),r=z(l[11]),o=M(),c=z(l[24]),i=M(),a=y("span"),f=y("span"),f.textContent="USE MAX",w(n,"class","label svelte-1bqjv2w"),w(s,"class","amount svelte-1bqjv2w"),w(e,"class","balance svelte-1bqjv2w"),w(f,"class","link svelte-1bqjv2w"),Y(f,"disabled",l[23]),w(a,"class","use-max")},m(p,h){m(p,e,h),v(e,n),v(e,t),v(e,s),v(s,r),v(s,o),v(s,c),m(p,i,h),m(p,a,h),v(a,f),u||(_=te(f,"click",l[52]),u=!0)},p(p,h){h[0]&2048&&J(r,p[11]),h[0]&16777216&&J(c,p[24]),h[0]&8388608&&Y(f,"disabled",p[23])},d(p){p&&d(e),p&&d(i),p&&d(a),u=!1,_()}}}function Qi(l){let e,n=l[1]&&ns(l);return{c(){e=y("span"),n&&n.c(),w(e,"class","balance-line svelte-1bqjv2w")},m(t,s){m(t,e,s),n&&n.m(e,null)},p(t,s){t[1]?n?n.p(t,s):(n=ns(t),n.c(),n.m(e,null)):n&&(n.d(1),n=null)},d(t){t&&d(e),n&&n.d()}}}function xi(l){let e,n,t,s;return{c(){e=y("div"),e.textContent=`${bt} SCRT`,n=M(),t=y("div"),s=z(l[22]),w(e,"class","fee-amount"),w(t,"class","fee-fiat svelte-1bqjv2w")},m(r,o){m(r,e,o),m(r,n,o),m(r,t,o),v(t,s)},p(r,o){o[0]&4194304&&J(s,r[22])},d(r){r&&d(e),r&&d(n),r&&d(t)}}}function ec(l){let e;return{c(){e=y("div"),w(e,"class","manual-fee svelte-1bqjv2w")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function ss(l){let e,n,t=l[14]&&l[16]&&ls(l);return{c(){t&&t.c(),e=oe()},m(s,r){t&&t.m(s,r),m(s,e,r),n=!0},p(s,r){s[14]&&s[16]?t?(t.p(s,r),r[0]&81920&&$(t,1)):(t=ls(s),t.c(),$(t,1),t.m(e.parentNode,e)):t&&(le(),S(t,1,1,()=>{t=null}),re())},i(s){n||($(t),n=!0)},o(s){S(t),n=!1},d(s){t&&t.d(s),s&&d(e)}}}function ls(l){let e,n,t;function s(o){l[53](o)}let r={containerClass:"encrypt",id:"encrypted",$$slots:{default:[tc]},$$scope:{ctx:l}};return l[18]!==void 0&&(r.checked=l[18]),e=new al({props:r}),de.push(()=>Ne(e,"checked",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};c[2]&4096&&(i.$$scope={dirty:c,ctx:o}),!n&&c[0]&262144&&(n=!0,i.checked=o[18],Ee(()=>n=!1)),e.$set(i)},i(o){t||($(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function tc(l){let e;return{c(){e=z("Private")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function rs(l){let e,n,t,s,r,o,c,i,a,f,u,_=!l[14]&&os(l);const p=[rc,lc,sc],h=[];function b(g,k){return g[16]?g[18]?2:1:0}return c=b(l),i=h[c]=p[c](l),{c(){_&&_.c(),e=M(),n=y("div"),t=y("textarea"),r=M(),o=y("div"),i.c(),w(n,"class","input svelte-1bqjv2w"),w(o,"class","submemo svelte-1bqjv2w")},m(g,k){_&&_.m(g,k),m(g,e,k),m(g,n,k),v(n,t),Te(t,l[19]),m(g,r,k),m(g,o,k),h[c].m(o,null),a=!0,f||(u=te(t,"input",l[55]),f=!0)},p(g,k){g[14]?_&&(le(),S(_,1,1,()=>{_=null}),re()):_?(_.p(g,k),k[0]&16384&&$(_,1)):(_=os(g),_.c(),$(_,1),_.m(e.parentNode,e)),k[0]&524288&&Te(t,g[19]);let C=c;c=b(g),c===C?h[c].p(g,k):(le(),S(h[C],1,1,()=>{h[C]=null}),re(),i=h[c],i?i.p(g,k):(i=h[c]=p[c](g),i.c()),$(i,1),i.m(o,null))},i(g){a||($(_),Ke(()=>{s||(s=Ve(n,ge,{duration:350},!0)),s.run(1)}),$(i),a=!0)},o(g){S(_),s||(s=Ve(n,ge,{duration:350},!1)),s.run(0),S(i),a=!1},d(g){_&&_.d(g),g&&d(e),g&&d(n),g&&s&&s.end(),g&&d(r),g&&d(o),h[c].d(),f=!1,u()}}}function os(l){let e,n;return e=new Sl({props:{dismissable:"send_encrypted_memo",title:"Make Your Memos Private",action:["Enable Private Memos",l[31]],$$slots:{default:[nc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s[2]&4096&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function nc(l){let e,n,t;return{c(){e=z(`StarShell allows you to send end-to-end encrypted memos that can only be seen by you and the recipient.
					`),n=y("br"),t=z(`
					Enable this feature to send and receive encrypted memos. You can always change this later in settings.`),ze(n,"display","block"),ze(n,"content","''"),ze(n,"margin","0.75em")},m(s,r){m(s,e,r),m(s,n,r),m(s,t,r)},p:N,d(s){s&&d(e),s&&d(n),s&&d(t)}}}function sc(l){let e,n=$n(l[19]||"").byteLength+"",t,s,r,o,c,i,a,f,u,_,p,h,b,g,k,C,P;return{c(){e=y("span"),t=z(n),s=z(" / "),r=z(nn),i=M(),a=y("span"),f=y("span"),u=M(),_=y("span"),p=z("This memo will be private, using encryption. "),h=y("span"),h.textContent="Memo Settings",w(e,"class","memo-length-indicator svelte-1bqjv2w"),w(f,"class","global_svg-icon display_inline icon-diameter_18px"),ze(f,"color","var(--theme-color-sky)"),w(h,"class","link"),w(_,"class","text vertical-align_middle svelte-1bqjv2w"),w(a,"class","disclaimer svelte-1bqjv2w")},m(R,D){m(R,e,D),v(e,t),v(e,s),v(e,r),m(R,i,D),m(R,a,D),v(a,f),f.innerHTML=kl,v(a,u),v(a,_),v(_,p),v(_,h),k=!0,C||(P=te(h,"click",l[59]),C=!0)},p(R,D){l=R,(!k||D[0]&524288)&&n!==(n=$n(l[19]||"").byteLength+"")&&J(t,n)},i(R){k||(Ke(()=>{c&&c.end(1),o=Mt(e,ge,l[25]),o.start()}),Ke(()=>{g&&g.end(1),b=Mt(a,ge,l[25]),b.start()}),k=!0)},o(R){o&&o.invalidate(),c=Nt(e,ge,l[26]),b&&b.invalidate(),g=Nt(a,ge,l[26]),k=!1},d(R){R&&d(e),R&&c&&c.end(),R&&d(i),R&&d(a),R&&g&&g.end(),C=!1,P()}}}function lc(l){let e,n,t,s;const r=[ic,oc],o=[];function c(i,a){return!i[19].length&&i[14]&&i[15]?0:1}return e=c(l),n=o[e]=r[e](l),{c(){n.c(),t=oe()},m(i,a){o[e].m(i,a),m(i,t,a),s=!0},p(i,a){let f=e;e=c(i),e===f?o[e].p(i,a):(le(),S(o[f],1,1,()=>{o[f]=null}),re(),n=o[e],n?n.p(i,a):(n=o[e]=r[e](i),n.c()),$(n,1),n.m(t.parentNode,t))},i(i){s||($(n),s=!0)},o(i){S(n),s=!1},d(i){o[e].d(i),i&&d(t)}}}function rc(l){let e,n,t,s,r,o,c,i,a,f,u;return{c(){e=y("span"),n=y("span"),t=M(),s=y("span"),r=z("Recipient isn't published, memo will be public. "),o=y("span"),o.textContent="Settings",w(n,"class","global_svg-icon display_inline icon-diameter_18px"),w(o,"class","link"),w(s,"class","text vertical-align_middle svelte-1bqjv2w"),w(e,"class","disclaimer svelte-1bqjv2w")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=$l,v(e,t),v(e,s),v(s,r),v(s,o),a=!0,f||(u=te(o,"click",l[56]),f=!0)},p(_,p){l=_},i(_){a||(Ke(()=>{i&&i.end(1),c=Mt(e,ge,l[25]),c.start()}),a=!0)},o(_){c&&c.invalidate(),i=Nt(e,ge,l[26]),a=!1},d(_){_&&d(e),_&&i&&i.end(),f=!1,u()}}}function oc(l){let e,n,t,s,r,o,c,i,a,f,u;return{c(){e=y("span"),n=y("span"),t=M(),s=y("span"),r=z("This memo will be public. "),o=y("span"),o.textContent="Memo Settings",w(n,"class","global_svg-icon display_inline icon-diameter_18px"),w(o,"class","link"),w(s,"class","text vertical-align_middle svelte-1bqjv2w"),w(e,"class","disclaimer svelte-1bqjv2w")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=$l,v(e,t),v(e,s),v(s,r),v(s,o),a=!0,f||(u=te(o,"click",l[58]),f=!0)},p(_,p){l=_},i(_){a||(Ke(()=>{i&&i.end(1),c=Mt(e,ge,l[25]),c.start()}),a=!0)},o(_){c&&c.invalidate(),i=Nt(e,ge,l[26]),a=!1},d(_){_&&d(e),_&&i&&i.end(),f=!1,u()}}}function ic(l){let e,n,t,s,r,o,c,i,a,f,u;return{c(){e=y("span"),n=y("span"),t=M(),s=y("span"),r=z("Empty memos will still appear encrypted. "),o=y("span"),o.textContent="Memo Settings",w(n,"class","global_svg-icon display_inline icon-diameter_18px"),w(o,"class","link"),w(s,"class","text vertical-align_middle svelte-1bqjv2w"),w(e,"class","disclaimer svelte-1bqjv2w")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=kl,v(e,t),v(e,s),v(s,r),v(s,o),a=!0,f||(u=te(o,"click",l[57]),f=!0)},p(_,p){l=_},i(_){a||(Ke(()=>{i&&i.end(1),c=Mt(e,ge,l[25]),c.start()}),a=!0)},o(_){c&&c.invalidate(),i=Nt(e,ge,l[26]),a=!1},d(_){_&&d(e),_&&i&&i.end(),f=!1,u()}}}function cc(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,b,g,k,C,P,R,D,G,B,L,O,U,E,q,H,j,V,se,Z,ie,ue;e=new Ae({props:{pops:!0,title:l[27]?"Transferring":"Sending",symbol:l[27]?l[27].symbol:"",subtitle:l[12]?.name||"?"}}),t=new me({props:{short:!0,key:"sender-select",name:"From",$$slots:{default:[Xi]},$$scope:{ctx:l}}}),r=new me({props:{short:!0,key:"recipient-select",name:"To",$$slots:{default:[Ki]},$$scope:{ctx:l}}}),c=new me({props:{short:!0,key:"recipient-status",name:"",$$slots:{default:[Gi]},$$scope:{ctx:l}}});let ce=l[9]&&l[5]&&es(l);_=new me({props:{short:!0,key:"asset-select",name:"Asset",$$slots:{default:[Zi]},$$scope:{ctx:l}}}),h=new me({props:{short:!0,key:"amount",name:"Amount",$$slots:{default:[Ji]},$$scope:{ctx:l}}}),g=new me({props:{short:!0,key:"balance",name:"",$$slots:{default:[Qi]},$$scope:{ctx:l}}}),R=new me({props:{short:!0,key:"fee-manual",name:"Fee",$$slots:{post:[ec],default:[xi]},$$scope:{ctx:l}}});let ae=l[17]&&ss(l),_e=l[17]&&rs(l);return se=new ct({props:{cancel:"pop",confirm:["Next",l[60],!l[20]]}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),T(c.$$.fragment),i=M(),ce&&ce.c(),a=M(),f=y("hr"),u=M(),T(_.$$.fragment),p=M(),T(h.$$.fragment),b=M(),T(g.$$.fragment),k=M(),C=y("hr"),P=M(),T(R.$$.fragment),D=M(),G=y("hr"),B=M(),L=y("div"),O=y("div"),U=y("span"),E=M(),q=y("span"),q.textContent="Add memo",H=M(),ae&&ae.c(),j=M(),_e&&_e.c(),V=M(),T(se.$$.fragment),w(U,"class","icon dropdown svelte-1bqjv2w"),w(q,"class","text svelte-1bqjv2w"),w(O,"class","title clickable svelte-1bqjv2w"),w(L,"class","memo svelte-1bqjv2w"),Y(L,"expanded",l[17])},m(F,X){A(e,F,X),m(F,n,X),A(t,F,X),m(F,s,X),A(r,F,X),m(F,o,X),A(c,F,X),m(F,i,X),ce&&ce.m(F,X),m(F,a,X),m(F,f,X),m(F,u,X),A(_,F,X),m(F,p,X),A(h,F,X),m(F,b,X),A(g,F,X),m(F,k,X),m(F,C,X),m(F,P,X),A(R,F,X),m(F,D,X),m(F,G,X),m(F,B,X),m(F,L,X),v(L,O),v(O,U),U.innerHTML=yr,v(O,E),v(O,q),v(O,H),ae&&ae.m(O,null),v(L,j),_e&&_e.m(L,null),m(F,V,X),A(se,F,X),Z=!0,ie||(ue=te(O,"click",l[54]),ie=!0)},p(F,X){const pe={};X[0]&4096&&(pe.subtitle=F[12]?.name||"?"),e.$set(pe);const Be={};X[0]&8192|X[2]&4096&&(Be.$$scope={dirty:X,ctx:F}),t.$set(Be);const Ie={};X[0]&81|X[2]&4096&&(Ie.$$scope={dirty:X,ctx:F}),r.$set(Ie);const We={};X[0]&2097704|X[2]&4096&&(We.$$scope={dirty:X,ctx:F}),c.$set(We),F[9]&&F[5]?ce?(ce.p(F,X),X[0]&544&&$(ce,1)):(ce=es(F),ce.c(),$(ce,1),ce.m(a.parentNode,a)):ce&&(le(),S(ce,1,1,()=>{ce=null}),re());const De={};X[0]&2|X[2]&4096&&(De.$$scope={dirty:X,ctx:F}),_.$set(De);const Pe={};X[0]&1174|X[2]&4096&&(Pe.$$scope={dirty:X,ctx:F}),h.$set(Pe);const je={};X[0]&25167874|X[2]&4096&&(je.$$scope={dirty:X,ctx:F}),g.$set(je);const Ue={};X[0]&4194304|X[2]&4096&&(Ue.$$scope={dirty:X,ctx:F}),R.$set(Ue),F[17]?ae?(ae.p(F,X),X[0]&131072&&$(ae,1)):(ae=ss(F),ae.c(),$(ae,1),ae.m(O,null)):ae&&(le(),S(ae,1,1,()=>{ae=null}),re()),F[17]?_e?(_e.p(F,X),X[0]&131072&&$(_e,1)):(_e=rs(F),_e.c(),$(_e,1),_e.m(L,null)):_e&&(le(),S(_e,1,1,()=>{_e=null}),re()),X[0]&131072&&Y(L,"expanded",F[17]);const Ge={};X[0]&1048576&&(Ge.confirm=["Next",F[60],!F[20]]),se.$set(Ge)},i(F){Z||($(e.$$.fragment,F),$(t.$$.fragment,F),$(r.$$.fragment,F),$(c.$$.fragment,F),$(ce),$(_.$$.fragment,F),$(h.$$.fragment,F),$(g.$$.fragment,F),$(R.$$.fragment,F),$(ae),$(_e),$(se.$$.fragment,F),Z=!0)},o(F){S(e.$$.fragment,F),S(t.$$.fragment,F),S(r.$$.fragment,F),S(c.$$.fragment,F),S(ce),S(_.$$.fragment,F),S(h.$$.fragment,F),S(g.$$.fragment,F),S(R.$$.fragment,F),S(ae),S(_e),S(se.$$.fragment,F),Z=!1},d(F){I(e,F),F&&d(n),I(t,F),F&&d(s),I(r,F),F&&d(o),I(c,F),F&&d(i),ce&&ce.d(F),F&&d(a),F&&d(f),F&&d(u),I(_,F),F&&d(p),I(h,F),F&&d(b),I(g,F),F&&d(k),F&&d(C),F&&d(P),I(R,F),F&&d(D),F&&d(G),F&&d(B),F&&d(L),ae&&ae.d(),_e&&_e.d(),F&&d(V),I(se,F),ie=!1,ue()}}}function ac(l){let e,n;return e=new ve({props:{form:!0,slides:!0,$$slots:{default:[cc]},$$scope:{ctx:l}}}),e.$on("submit",l[61]),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s[0]&33554431|s[2]&4096&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}const is="usd",bt=.01,fc=/^\S.{0,1023}$/;function uc(l,e,n){let t,s,r,o,c,i,a,f,u,_,p,h,b,g,k,C,P;K(l,it,W=>n(42,h=W)),K(l,vt,W=>n(43,b=W)),K(l,yt,W=>n(44,g=W)),K(l,Ct,W=>n(66,k=W)),K(l,Fe,W=>n(12,C=W)),K(l,pt,W=>n(67,P=W));const R={duration:350,delay:110},D={duration:150},G=he("page");let{sender:B=g}=e,L=P,{native:O=Object.keys(C.coins)[0]}=e;const U=O;let{token:E=null}=e;const q=E;let{recipient:H=""}=e,j=H,V=U?Re.holdingPathFor(b,U):"",se,Z=!1,ie=!1,ue=!1;async function ce(){const W=await gt.get("e2e_encrypted_memos")||null;if(W?.[k]){const ut=W[k];n(14,{enabled:Z,published:ie}=ut,Z,n(15,ie)),ae()}}ce(),hn({updateStore({key:W}){W==="settings"&&ce()}});function ae(){n(16,ue=!1),h.e2eInfoFor(j).then(W=>{n(16,ue=!!W.sequence)}).catch(()=>{n(18,je=!1)})}let _e=!1;async function F(W=!1){if(_e)return;_e=!0;const sr=[...(await Qe.read()).contacts()];n(36,se=Sr(sr,([lr,rr])=>({[fe.bech32(rr.address)]:lr}))),_e=!1}{const W=rl("agents",F),ut=Fe.subscribe(F);Tt(()=>{W(),ut()})}let X=null,pe="";function Be(){n(2,pe=o),t&&n(2,pe=new we(pe).minus(bt).toString()),n(4,Xe++,Xe)}let Ie=null;const We={none:{icon:"<svg></svg>",text:""},unknown:{icon:ko,text:"Determining address type..."},personal:{icon:gn,text:"Personal address"},contract:{icon:$o,text:"Contract address"}};let De="none",Pe=!1,je=!1,Ue="",Ge=!1;function ft(){if(p){if(Ge)return!1;Ge=!0,U&&G.push({creator:wi,props:{accountRef:L,coin:U,recipient:j,amount:pe,memoPlaintext:Ue,encryptMemo:(je||!Ue.length&&Z&&ie)&&ue,fee:bt+""}})}else{n(4,Xe++,Xe);return}}let Xe=0,xe=!1,rt="",Ye="",ye="";function Se(W){n(39,ye=W.target.value)}function Ce(){G.push({creator:Ui,context:{intent:{id:"send_adjust_memo_settings"}}})}function Bl(W){L=W,n(13,L)}function Dl(W){rt=W,n(6,rt)}function Vl(W){j=W,n(0,j)}function ql(W){xe=W,n(5,xe)}function Ul(W){V=W,n(1,V)}function Xl(W){Ye=W,n(7,Ye)}function Kl(W){pe=W,n(2,pe)}const Wl=()=>Be();function Gl(W){je=W,n(18,je)}const Yl=()=>n(17,Pe=!Pe);function Zl(){Ue=this.value,n(19,Ue)}const Jl=()=>Ce(),Ql=()=>Ce(),xl=()=>Ce(),er=()=>Ce(),tr=()=>ft(),nr=W=>{W.preventDefault(),ft()};return l.$$set=W=>{"sender"in W&&n(32,B=W.sender),"native"in W&&n(33,O=W.native),"token"in W&&n(34,E=W.token),"recipient"in W&&n(35,H=W.recipient)},l.$$.update=()=>{l.$$.dirty[0]&4098&&n(10,t=V&&Re.parseEntityPath(V)?.type==="holding"&&U?C.coins?.[U]:null),l.$$.dirty[0]&2&&n(41,s=V&&Re.parseEntityPath(V)?.type==="token"&&q?Re.pathFrom(q):""),l.$$.dirty[0]&1026|l.$$.dirty[1]&1024&&console.log({si_native:U,g_coin:t,p_asset:V,p_token:s,g_token:q}),l.$$.dirty[0]&2|l.$$.dirty[1]&14336&&g&&V&&(n(37,X=null),queueMicrotask(async()=>{n(11,o="[...]");const W=h.cachedBalance(b,U);W&&W.timestamp>Date.now()-5*zt&&n(37,X=new we(W.data.amount));const ut=await h.bankBalance(b,U);ut&&n(37,X=new we(ut.balance.amount))})),l.$$.dirty[0]&1024|l.$$.dirty[1]&64&&n(11,o=X?Ft(X.shiftedBy(-(t||q).decimals).toNumber()):""),l.$$.dirty[0]&2052&&n(23,c=pe===o),l.$$.dirty[0]&1024&&n(40,i=(q||t)?.extra?.coingecko_id||""),l.$$.dirty[1]&640&&i&&(async()=>{const W=await pn.coinsVersus([i],is);n(38,Ie=W[i]),typeof Ie=="number"&&qe(Ie,is)})(),l.$$.dirty[1]&128&&n(22,a=typeof Ie=="number"?qe(bt*Ie,"usd"):""),l.$$.dirty[0]&1|l.$$.dirty[1]&2048&&(j?(n(3,De="unknown"),h.isContract(j).then(W=>{W?n(3,De="contract"):n(3,De="personal")}),ae()):n(3,De="none")),l.$$.dirty[0]&8&&n(21,f=We[De]),l.$$.dirty[0]&1|l.$$.dirty[1]&32&&n(9,u=j&&se&&!(j in se)),l.$$.dirty[0]&48|l.$$.dirty[1]&256&&n(8,_=xe&&(Xe||!0)?ye?fc.test(ye)?"":ye.length>1024?"That name is way too long":"Cannot begin with space":"Enter a contact name to save new address":""),l.$$.dirty[0]&48&&xe&&!Xe&&n(8,_=""),l.$$.dirty[0]&997|l.$$.dirty[1]&256&&n(20,p=j&&pe&&!rt&&!Ye&&(!u||!xe||ye&&!_)||!1),l.$$.dirty[0]&197&&console.log({to:j,s_amount:pe,s_err_recipient:rt,s_err_amount:Ye})},n(24,r=U||q?.symbol||""),[j,V,pe,De,Xe,xe,rt,Ye,_,u,t,o,C,L,Z,ie,ue,Pe,je,Ue,p,f,a,c,r,R,D,q,Be,ft,Se,Ce,B,O,E,H,se,X,Ie,ye,i,s,h,b,g,Bl,Dl,Vl,ql,Ul,Xl,Kl,Wl,Gl,Yl,Zl,Jl,Ql,xl,er,tr,nr]}class Rt extends x{constructor(e){super(),ee(this,e,uc,ac,Q,{sender:32,native:33,token:34,recipient:35},null,[-1,-1,-1])}}function _c(l){let e;return{c(){e=y("div"),e.textContent="\xA0",w(e,"class","gap no-margin svelte-1rn5flx")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}class Cl extends x{constructor(e){super(),ee(this,e,null,_c,Q,{})}}function pc(l){let e,n,t,s,r,o;return e=new Ae({props:{pops:!0,account:!0,network:!0,title:l[3],subtitle:l[4]}}),t=new At({props:{pfp:l[2],resource:l[1]||cs||null,resourcePath:l[8],title:l[5]?`${Ft(l[5].toNumber())} ${l[3]}`:"...",subtitle:`${l[6]} (${l[7]} per ${l[0]})`,actions:l[9],circular:!0}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),r=y("div"),w(r,"class","txns no-margin")},m(c,i){A(e,c,i),m(c,n,i),A(t,c,i),m(c,s,i),m(c,r,i),o=!0},p(c,i){const a={};i&8&&(a.title=c[3]),i&16&&(a.subtitle=c[4]),e.$set(a);const f={};i&4&&(f.pfp=c[2]),i&2&&(f.resource=c[1]||cs||null),i&40&&(f.title=c[5]?`${Ft(c[5].toNumber())} ${c[3]}`:"..."),i&193&&(f.subtitle=`${c[6]} (${c[7]} per ${c[0]})`),t.$set(f)},i(c){o||($(e.$$.fragment,c),$(t.$$.fragment,c),o=!0)},o(c){S(e.$$.fragment,c),S(t.$$.fragment,c),o=!1},d(c){I(e,c),c&&d(n),I(t,c),c&&d(s),c&&d(r)}}}function mc(l){let e,n;return e=new ve({props:{debug:"HoldingView",nav:!0,slides:!0,$$slots:{default:[pc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&262399&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}let cs=null;function dc(l,e,n){let t,s,r;K(l,Fe,R=>n(13,t=R)),K(l,it,R=>n(14,s=R)),K(l,Ct,R=>n(15,r=R));const o=he("page");let{entityRef:c}=e;const i=c;let a="",f="",u=null,_="",p="",h="",b=null,g="",k="";async function C(){await Re.read();const R=Re.parseEntityPath(i);if(!R)throw new Error(`Attempted to load holding view on non-entity path "${i}"`);switch(R.type){case"holding":{n(0,a="coin"),{coin:f}=R;const D=R.chainRef,G=D===r?t:await fe.at(D);n(1,u=G.coins[f]),n(3,p=f),n(4,h=u.name),n(2,_=u.pfp);const B=s.cachedBalance(R.bech32,f);let L;B&&B.timestamp>=Date.now()-2*zt?L=B.data:{balance:L}=await s.bankBalance(R.bech32,f),n(5,b=new we(L.amount).shiftedBy(-u.decimals)),Cr(L,u).then(O=>{n(6,g=qe(O.fiat,O.versus)),n(7,k=qe(O.worth,O.versus))});break}case"token":{n(0,a="token"),(await Re.read()).tokens(R.entityRef,Re.fungibleInterfacesFor(t));debugger;break}default:throw new Error(`Unhandled entity type: "${R.type}"`)}}C();const P={send:{label:"Send",trigger(){o.push({creator:Rt,props:f?{native:f}:{}})}}};return l.$$set=R=>{"entityRef"in R&&n(10,c=R.entityRef)},[a,u,_,p,h,b,g,k,i,P,c]}class as extends x{constructor(e){super(),ee(this,e,dc,mc,Q,{entityRef:10})}}function fs(l,e,n){const t=l.slice();return t[23]=e[n][0],t[24]=e[n][1],t}function us(l,e,n){const t=l.slice();t[27]=e[n][0],t[33]=e[n][1],t[34]=e[n][2],t[35]=e[n][3];const s=Re.holdingPathFor(t[3],t[27]);t[29]=s;const r={name:t[27],pfp:t[0].pfp};t[36]=r;const o=t[35](Tr(t[34],t[33]));return t[37]=o,t}function _s(l,e,n){const t=l.slice();t[27]=e[n][0],t[28]=e[n][1];const s=Re.holdingPathFor(t[3],t[27]);return t[29]=s,t}function ps(l){let e;return{c(){e=y("div"),e.textContent="TESTNET",w(e,"class","testnet-reminder no-margin svelte-8v4b7t")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function ms(l){let e,n,t,s,r=l[0].testnet?"testnet ":"",o,c=l[1].join(" or ")+"",i,a,f,u;function _(b,g){return b[0].testnet?gc:hc}let p=_(l),h=p(l);return{c(){e=y("div"),n=y("div"),t=y("span"),t.textContent="Warning:",s=z(" you don't have any "),o=z(r),i=z(c),a=z(" to pay gas fees."),f=M(),u=y("div"),h.c(),w(t,"class","warning"),w(n,"class","message svelte-8v4b7t"),w(u,"class","buttons"),w(e,"class","no-gas text-align_center subinfo svelte-8v4b7t")},m(b,g){m(b,e,g),v(e,n),v(n,t),v(n,s),v(n,o),v(n,i),v(n,a),v(e,f),v(e,u),h.m(u,null)},p(b,g){g[0]&1&&r!==(r=b[0].testnet?"testnet ":"")&&J(o,r),g[0]&2&&c!==(c=b[1].join(" or ")+"")&&J(i,c),p===(p=_(b))&&h?h.p(b,g):(h.d(1),h=p(b),h&&(h.c(),h.m(u,null)))},d(b){b&&d(e),h.d()}}}function hc(l){let e,n,t=l[1].join(" or ")+"",s;return{c(){e=y("button"),n=z("Buy "),s=z(t),w(e,"class","pill")},m(r,o){m(r,e,o),v(e,n),v(e,s)},p(r,o){o[0]&2&&t!==(t=r[1].join(" or ")+"")&&J(s,t)},d(r){r&&d(e)}}}function gc(l){let e,n,t=l[1].join(" or ")+"",s,r,o,c;return{c(){e=y("button"),n=z("Get "),s=z(t),r=z(" from faucet"),w(e,"class","pill")},m(i,a){m(i,e,a),v(e,n),v(e,s),v(e,r),o||(c=te(e,"click",l[14]),o=!0)},p(i,a){a[0]&2&&t!==(t=i[1].join(" or ")+"")&&J(s,t)},d(i){i&&d(e),o=!1,c()}}}function ds(l){let e,n,t,s,r=l[1].length&&ms(l);return t=new st({props:{address:l[3],copyable:"icon"}}),{c(){r&&r.c(),e=M(),n=y("div"),T(t.$$.fragment),w(n,"class","owner-address subinfo svelte-8v4b7t")},m(o,c){r&&r.m(o,c),m(o,e,c),m(o,n,c),A(t,n,null),s=!0},p(o,c){o[1].length?r?r.p(o,c):(r=ms(o),r.c(),r.m(e.parentNode,e)):r&&(r.d(1),r=null);const i={};c[0]&8&&(i.address=o[3]),t.$set(i)},i(o){s||($(t.$$.fragment,o),s=!0)},o(o){S(t.$$.fragment,o),s=!1},d(o){r&&r.d(o),o&&d(e),o&&d(n),I(t)}}}function bc(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function wc(l){let e,n,t=l[32],s=[];for(let o=0;o<t.length;o+=1)s[o]=hs(us(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c[0]&777){t=o[32];let i;for(i=0;i<t.length;i+=1){const a=us(o,t,i);s[i]?(s[i].p(a,c),$(s[i],1)):(s[i]=hs(a),s[i].c(),$(s[i],1),s[i].m(e.parentNode,e))}for(le(),i=t.length;i<s.length;i+=1)r(i);re()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)$(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Me(s,o),o&&d(e)}}}function hs(l){let e,n;function t(){return l[17](l[29])}return e=new lt({props:{lockIcon:!0,detail:"Native Coin",resourcePath:l[29],resource:l[36],amount:Nr(l[34],l[33]),fiat:l[37].then(l[16])}}),e.$on("click",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r[0]&8&&(o.resourcePath=l[29]),r[0]&1&&(o.resource=l[36]),e.$set(o)},i(s){n||($(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function vc(l){let e,n,t=ke(l[0].coins),s=[];for(let o=0;o<t.length;o+=1)s[o]=gs(_s(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c[0]&265){t=ke(o[0].coins);let i;for(i=0;i<t.length;i+=1){const a=_s(o,t,i);s[i]?(s[i].p(a,c),$(s[i],1)):(s[i]=gs(a),s[i].c(),$(s[i],1),s[i].m(e.parentNode,e))}for(le(),i=t.length;i<s.length;i+=1)r(i);re()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)$(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Me(s,o),o&&d(e)}}}function gs(l){let e,n;function t(){return l[15](l[29])}return e=new lt({props:{lockIcon:!0,detail:"Native Coin",name:l[27],pfp:l[0].pfp,amount:Er()}}),e.$on("click",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r[0]&1&&(o.name=l[27]),r[0]&1&&(o.pfp=l[0].pfp),e.$set(o)},i(s){n||($(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function $c(l){return{c:N,m:N,p:N,d:N}}function kc(l){let e,n=ke(l[7](l[22])),t=[];for(let s=0;s<n.length;s+=1)t[s]=bs(fs(l,n,s));return{c(){for(let s=0;s<t.length;s+=1)t[s].c();e=oe()},m(s,r){for(let o=0;o<t.length;o+=1)t[o].m(s,r);m(s,e,r)},p(s,r){if(r[0]&129){n=ke(s[7](s[22]));let o;for(o=0;o<n.length;o+=1){const c=fs(s,n,o);t[o]?t[o].p(c,r):(t[o]=bs(c),t[o].c(),t[o].m(e.parentNode,e))}for(;o<t.length;o+=1)t[o].d(1);t.length=n.length}},d(s){Me(t,s),s&&d(e)}}}function bs(l){let e=l[24].spec+"",n;return{c(){n=z(e)},m(t,s){m(t,n,s)},p(t,s){s[0]&1&&e!==(e=t[24].spec+"")&&J(n,e)},d(t){t&&d(n)}}}function yc(l){let e;return{c(){e=z("Loading tokens...")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function ws(l){let e,n,t,s,r={ctx:l,current:null,token:null,hasCatch:!1,pending:vc,then:wc,catch:bc,value:32,blocks:[,,,]};Le(l[9](),r);let o={ctx:l,current:null,token:null,hasCatch:!1,pending:yc,then:kc,catch:$c,value:22};return Le(t=Re.readFungibleTokens(l[0]),o),{c(){e=y("div"),r.block.c(),n=M(),o.block.c(),w(e,"class","rows no-margin")},m(c,i){m(c,e,i),r.block.m(e,r.anchor=null),r.mount=()=>e,r.anchor=n,v(e,n),o.block.m(e,o.anchor=null),o.mount=()=>e,o.anchor=null,s=!0},p(c,i){l=c,Oe(r,l,i),o.ctx=l,i[0]&1&&t!==(t=Re.readFungibleTokens(l[0]))&&Le(t,o)||Oe(o,l,i)},i(c){s||($(r.block),s=!0)},o(c){for(let i=0;i<3;i+=1){const a=r.blocks[i];S(a)}s=!1},d(c){c&&d(e),r.block.d(),r.token=null,r=null,o.block.d(),o.token=null,o=null}}}function Sc(l){let e,n,t,s,r,o=l[0],c,i,a,f=l[4],u,_;e=new Ae({props:{search:!0,network:!0,account:!0}});let p=l[0].testnet&&ps();s=new At({props:{noPfp:!0,title:l[2],subtitle:l[5].name,resource:l[5],resourcePath:l[6],actions:{send:{label:"Send",trigger:l[12]},recv:{label:"Receive",trigger:l[13]}}}});let h=ds(l);i=new Cl({});let b=ws(l);return{c(){T(e.$$.fragment),n=M(),p&&p.c(),t=M(),T(s.$$.fragment),r=M(),h.c(),c=M(),T(i.$$.fragment),a=M(),b.c(),u=oe()},m(g,k){A(e,g,k),m(g,n,k),p&&p.m(g,k),m(g,t,k),A(s,g,k),m(g,r,k),h.m(g,k),m(g,c,k),A(i,g,k),m(g,a,k),b.m(g,k),m(g,u,k),_=!0},p(g,k){g[0].testnet?p||(p=ps(),p.c(),p.m(t.parentNode,t)):p&&(p.d(1),p=null);const C={};k[0]&4&&(C.title=g[2]),k[0]&32&&(C.subtitle=g[5].name),k[0]&32&&(C.resource=g[5]),k[0]&64&&(C.resourcePath=g[6]),k[0]&96&&(C.actions={send:{label:"Send",trigger:g[12]},recv:{label:"Receive",trigger:g[13]}}),s.$set(C),k[0]&1&&Q(o,o=g[0])?(le(),S(h,1,1,N),re(),h=ds(g),h.c(),$(h,1),h.m(c.parentNode,c)):h.p(g,k),k[0]&16&&Q(f,f=g[4])?(le(),S(b,1,1,N),re(),b=ws(g),b.c(),$(b,1),b.m(u.parentNode,u)):b.p(g,k)},i(g){_||($(e.$$.fragment,g),$(s.$$.fragment,g),$(h),$(i.$$.fragment,g),$(b),_=!0)},o(g){S(e.$$.fragment,g),S(s.$$.fragment,g),S(h),S(i.$$.fragment,g),S(b),_=!1},d(g){I(e,g),g&&d(n),p&&p.d(g),g&&d(t),I(s,g),g&&d(r),h.d(g),g&&d(c),I(i,g),g&&d(a),g&&d(u),b.d(g)}}}function Cc(l){let e,n;return e=new ve({props:{debug:"HoldingsHome",nav:!0,root:!0,keyed:!0,$$slots:{default:[Sc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s[0]&127|s[1]&512&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Mc(l,e,n){let t,s,r,o,c;K(l,Fe,O=>n(0,t=O)),K(l,vt,O=>n(3,s=O)),K(l,it,O=>n(4,r=O)),K(l,yt,O=>n(5,o=O)),K(l,pt,O=>n(6,c=O));const i=O=>fl(O,(U,E)=>E),a=he("page");let f=new we(0),u=0,_=[],p,h=new Promise(O=>{p=O}),b=t;function g(){if(u-=1,!u){const O=qe(f.toNumber(),"usd");p(O);const U=o;et.open(E=>E.put({...U,extra:{total_fiat_cache:O}}))}}async function k(){let O;try{O=await r.bankBalances(s)}catch(E){return ht({title:"Network Error",error:E}),[]}const U=[];for(const[E,q]of ke(t.coins)){const H=O[E];(!H||H.balance.amount==="0")&&_.push(E),u+=1,U.push([E,t.coins[E],H?.balance||{amount:"0",denom:q.denom},async j=>{const V=await j;return f=f.plus(V),g(),V}])}return U.length||(u+=1,g()),n(1,_),n(0,t),n(11,b),U}const C={"theta-testnet-001":"https://discord.com/channels/669268347736686612/953697793476821092","pulsar-2":"https://faucet.pulsar.scrttestnet.com/"},P=function(){a.push({creator:Rt,props:{from:o}})},R=function(){ul(c)},D=()=>Mr(C[t.id]),G=O=>{a.push({creator:as,props:{entityRef:O}})},B=O=>qe(O.toNumber(),"usd"),L=O=>{a.push({creator:as,props:{entityRef:O}})};return l.$$.update=()=>{l.$$.dirty[0]&2049&&t!==b&&(n(11,b=t),f=new we(0),u=0,n(2,h=new Promise(O=>{p=O})),n(1,_=[]))},[t,_,h,s,r,o,c,i,a,k,C,b,P,R,D,G,B,L]}class Nc extends x{constructor(e){super(),ee(this,e,Mc,Cc,Q,{},null,[-1,-1])}}function Ec(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Tc(l){let e,n,t,s,r,o,c,i;return e=new me({props:{key:"profile-icon",name:"Profile icon"}}),t=new me({props:{key:"account-name",name:"Name",$$slots:{default:[Ac]},$$scope:{ctx:l}}}),r=new me({props:{key:"account-address",name:"Public address",$$slots:{default:[Rc]},$$scope:{ctx:l}}}),c=new ct({props:{cancel:!l[4],back:!0,confirm:["Finish",l[6],!l[3]]}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),T(c.$$.fragment)},m(a,f){A(e,a,f),m(a,n,f),A(t,a,f),m(a,s,f),A(r,a,f),m(a,o,f),A(c,a,f),i=!0},p(a,f){const u={};f&8194&&(u.$$scope={dirty:f,ctx:a}),t.$set(u);const _={};f&8196&&(_.$$scope={dirty:f,ctx:a}),r.$set(_);const p={};f&8&&(p.confirm=["Finish",a[6],!a[3]]),c.$set(p)},i(a){i||($(e.$$.fragment,a),$(t.$$.fragment,a),$(r.$$.fragment,a),$(c.$$.fragment,a),i=!0)},o(a){S(e.$$.fragment,a),S(t.$$.fragment,a),S(r.$$.fragment,a),S(c.$$.fragment,a),i=!1},d(a){I(e,a),a&&d(n),I(t,a),a&&d(s),I(r,a),a&&d(o),I(c,a)}}}function Ac(l){let e,n,t;return{c(){e=y("input"),w(e,"id","account-name"),w(e,"type","text"),w(e,"placeholder","Satoshi")},m(s,r){m(s,e,r),Te(e,l[1]),n||(t=te(e,"input",l[9]),n=!0)},p(s,r){r&2&&e.value!==s[1]&&Te(e,s[1])},d(s){s&&d(e),n=!1,t()}}}function Ic(l){let e,n;return e=new st({props:{copyable:!0,address:l[2]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&4&&(r.address=t[2]),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Rc(l){let e,n;return e=new Gt({props:{address:!0,key:"account-address",$$slots:{default:[Ic]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&8196&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Lc(l){let e;return{c(){e=z("Loading accounts...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Oc(l){let e,n=l[0]?"Edit":"New",t,s,r,o,c,i={ctx:l,current:null,token:null,hasCatch:!1,pending:Lc,then:Tc,catch:Ec,blocks:[,,,]};return Le(l[5](),i),{c(){e=y("h3"),t=z(n),s=z(" account"),r=M(),o=oe(),i.block.c()},m(a,f){m(a,e,f),v(e,t),v(e,s),m(a,r,f),m(a,o,f),i.block.m(a,i.anchor=f),i.mount=()=>o.parentNode,i.anchor=o,c=!0},p(a,f){l=a,(!c||f&1)&&n!==(n=l[0]?"Edit":"New")&&J(t,n),Oe(i,l,f)},i(a){c||($(i.block),c=!0)},o(a){for(let f=0;f<3;f+=1){const u=i.blocks[f];S(u)}c=!1},d(a){a&&d(e),a&&d(r),a&&d(o),i.block.d(a),i.token=null,i=null}}}function Pc(l){let e,n;return e=new ve({props:{$$slots:{default:[Oc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&8207&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function jc(l,e,n){let t,s,r;K(l,pt,g=>n(10,s=g)),K(l,Fe,g=>n(8,r=g));let{account:o}=e;const c=o;let i,a="",f;const u=he("completed"),_=he("page");async function p(){const g=await et.read();n(7,i=g.at(c)),n(1,a=i.name)}async function h(){Object.assign(i,{name:a}),await et.open(g=>g.put(i)),c===s&&be(pt,s=c,s),u?u(!0):_.reset()}function b(){a=this.value,n(1,a)}return l.$$set=g=>{"account"in g&&n(0,o=g.account)},l.$$.update=()=>{l.$$.dirty&2&&n(3,t=!!a),l.$$.dirty&384&&n(2,f=i?fe.addressFor(i.pubkey,r):"")},[o,a,f,t,u,p,h,i,r,b]}class Hc extends x{constructor(e){super(),ee(this,e,jc,Pc,Q,{account:0})}}function zc(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Fc(l){let e,n;return e=new At({props:{resource:l[0],resourcePath:l[1],actions:l[3],$$slots:{subtitle:[Bc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&1&&(r.resource=t[0]),s&65&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Bc(l){let e,n;return e=new st({props:{copyable:!0,address:fe.addressFor(l[0].pubkey)}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&1&&(r.address=fe.addressFor(t[0].pubkey)),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Dc(l){let e;return{c(){e=z("Loading...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Vc(l){let e,n,t,s;e=new Ae({props:{pops:!0,search:!0,network:!0,title:"Account"}});let r={ctx:l,current:null,token:null,hasCatch:!1,pending:Dc,then:Fc,catch:zc,blocks:[,,,]};return Le(l[2](),r),{c(){T(e.$$.fragment),n=M(),t=oe(),r.block.c()},m(o,c){A(e,o,c),m(o,n,c),m(o,t,c),r.block.m(o,r.anchor=c),r.mount=()=>t.parentNode,r.anchor=t,s=!0},p(o,c){l=o,Oe(r,l,c)},i(o){s||($(e.$$.fragment,o),$(r.block),s=!0)},o(o){S(e.$$.fragment,o);for(let c=0;c<3;c+=1){const i=r.blocks[c];S(i)}s=!1},d(o){I(e,o),o&&d(n),o&&d(t),r.block.d(o),r.token=null,r=null}}}function qc(l){let e,n;return e=new ve({props:{nav:!0,$$slots:{default:[Vc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&65&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Uc(l,e,n){let{accountRef:t}=e;const s=t;let r;const o=he("page");async function c(){const a=await et.read();return n(0,r=a.at(s))}const i={send:{label:"Send",trigger(){o.push({creator:Rt,props:{from:fe.addressFor(r.pubkey)}})}},recv:{label:"Receive",trigger(){ul(s)}},edit:{label:"Edit",trigger(){o.push({creator:Hc,props:{account:s}})}}};return l.$$set=a=>{"accountRef"in a&&n(4,t=a.accountRef)},[r,s,c,i,t]}class Xc extends x{constructor(e){super(),ee(this,e,Uc,qc,Q,{accountRef:4})}}function vs(l,e,n){const t=l.slice();t[5]=e[n][0],t[6]=e[n][1];const s=fe.addressFor(t[6].pubkey);return t[7]=s,t}function Kc(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Wc(l){let e=l[1],n,t,s=ks(l);return{c(){s.c(),n=oe()},m(r,o){s.m(r,o),m(r,n,o),t=!0},p(r,o){o&2&&Q(e,e=r[1])?(le(),S(s,1,1,N),re(),s=ks(r),s.c(),$(s,1),s.m(n.parentNode,n)):s.p(r,o)},i(r){t||($(s),t=!0)},o(r){S(s),t=!1},d(r){r&&d(n),s.d(r)}}}function Gc(l){let e,n,t,s,r;return t=new st({props:{address:l[7]}}),{c(){e=y("div"),e.textContent="StarShell - - m/44'/118'/0'/0/??",n=M(),T(t.$$.fragment),s=M(),w(e,"class","hd-path")},m(o,c){m(o,e,c),m(o,n,c),A(t,o,c),m(o,s,c),r=!0},p(o,c){const i={};c&1&&(i.address=o[7]),t.$set(i)},i(o){r||($(t.$$.fragment,o),r=!0)},o(o){S(t.$$.fragment,o),r=!1},d(o){o&&d(e),o&&d(n),I(t,o),o&&d(s)}}}function $s(l){let e,n;function t(){return l[4](l[5])}return e=new lt({props:{resource:l[6],resourcePath:l[5],address:l[7],iconClass:"square pfp",$$slots:{detail:[Gc]},$$scope:{ctx:l}}}),e.$on("click",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r&1&&(o.resource=l[6]),r&1&&(o.resourcePath=l[5]),r&1&&(o.address=l[7]),r&1025&&(o.$$scope={dirty:r,ctx:l}),e.$set(o)},i(s){n||($(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function ks(l){let e,n,t=l[0],s=[];for(let o=0;o<t.length;o+=1)s[o]=$s(vs(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c&5){t=o[0];let i;for(i=0;i<t.length;i+=1){const a=vs(o,t,i);s[i]?(s[i].p(a,c),$(s[i],1)):(s[i]=$s(a),s[i].c(),$(s[i],1),s[i].m(e.parentNode,e))}for(le(),i=t.length;i<s.length;i+=1)r(i);re()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)$(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Me(s,o),o&&d(e)}}}function Yc(l){let e;return{c(){e=z("Loading...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Zc(l){let e,n,t,s,r,o;e=new Ae({props:{search:!0,network:!0,account:!0}}),t=new It({props:{title:"Accounts"}});let c={ctx:l,current:null,token:null,hasCatch:!1,pending:Yc,then:Wc,catch:Kc,blocks:[,,,]};return Le(l[3](),c),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),r=y("div"),c.block.c(),w(r,"class","rows no-margin")},m(i,a){A(e,i,a),m(i,n,a),A(t,i,a),m(i,s,a),m(i,r,a),c.block.m(r,c.anchor=null),c.mount=()=>r,c.anchor=null,o=!0},p(i,a){l=i,Oe(c,l,a)},i(i){o||($(e.$$.fragment,i),$(t.$$.fragment,i),$(c.block),o=!0)},o(i){S(e.$$.fragment,i),S(t.$$.fragment,i);for(let a=0;a<3;a+=1){const f=c.blocks[a];S(f)}o=!1},d(i){I(e,i),i&&d(n),I(t,i),i&&d(s),i&&d(r),c.block.d(),c.token=null,c=null}}}function Jc(l){let e,n;return e=new ve({props:{debug:"Accounts",nav:!0,root:!0,$$slots:{default:[Zc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&1027&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Qc(l,e,n){let t;K(l,Fe,i=>n(1,t=i));const s=he("page");let r;async function o(){const i=await et.read();return n(0,r=i.entries())}return[r,t,s,o,i=>s.push({creator:Xc,props:{accountRef:i}})]}class xc extends x{constructor(e){super(),ee(this,e,Qc,Jc,Q,{})}}var ea='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M64 224h13.5c24.7 56.5 80.9 96 146.5 96s121.8-39.5 146.5-96H384c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-13.5C345.8 39.5 289.6 0 224 0S102.2 39.5 77.5 96H64c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zm40-88c0-22.1 21.5-40 48-40h144c26.5 0 48 17.9 48 40v24c0 53-43 96-96 96h-48c-53 0-96-43-96-96v-24zm72 72l12-36 36-12-36-12-12-36-12 36-36 12 36 12 12 36zm151.6 113.4C297.7 340.7 262.2 352 224 352s-73.7-11.3-103.6-30.6C52.9 328.5 0 385 0 454.4v9.6c0 26.5 21.5 48 48 48h80v-64c0-17.7 14.3-32 32-32h128c17.7 0 32 14.3 32 32v64h80c26.5 0 48-21.5 48-48v-9.6c0-69.4-52.9-125.9-120.4-133zM272 448c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-96 0c-8.8 0-16 7.2-16 16v48h32v-48c0-8.8-7.2-16-16-16z"/></svg>';function ta(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,b,g;return e=new Ae({props:{pops:!0,title:"Not yet available"}}),{c(){T(e.$$.fragment),n=M(),t=y("h3"),t.textContent="Nothing to see here!",s=M(),r=y("p"),r.textContent="This screen has not yet been implemented.",o=M(),c=y("p"),c.textContent="Please continue exploring the beta.",i=M(),a=y("center"),f=y("span"),u=M(),_=y("div"),p=y("button"),p.textContent="Continue",w(f,"class","icon svelte-o7n71o"),w(p,"class","primary"),w(_,"class","action-line")},m(k,C){A(e,k,C),m(k,n,C),m(k,t,C),m(k,s,C),m(k,r,C),m(k,o,C),m(k,c,C),m(k,i,C),m(k,a,C),v(a,f),f.innerHTML=ea,m(k,u,C),m(k,_,C),v(_,p),h=!0,b||(g=te(p,"click",l[2]),b=!0)},p:N,i(k){h||($(e.$$.fragment,k),h=!0)},o(k){S(e.$$.fragment,k),h=!1},d(k){I(e,k),k&&d(n),k&&d(t),k&&d(s),k&&d(r),k&&d(o),k&&d(c),k&&d(i),k&&d(a),k&&d(u),k&&d(_),b=!1,g()}}}function na(l){let e,n;return e=new ve({props:{$$slots:{default:[ta]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&64&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function sa(l,e,n){let t;K(l,wt,a=>n(3,t=a));let{reset:s=!1}=e;const r=s,o=he("page");function c(){r?(o.reset(),t.activateThread(Je.TOKENS)):o.pop()}const i=()=>c();return l.$$set=a=>{"reset"in a&&n(1,s=a.reset)},[c,s,i]}class Ml extends x{constructor(e){super(),ee(this,e,sa,na,Q,{reset:1})}}function la(l){let e,n;return e=new At({props:{resource:l[0],resourcePath:l[1],actions:l[2],$$slots:{subtitle:[ia],default:[oa]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&1&&(r.resource=t[0]),s&65&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function ra(l){let e;return{c(){e=z("Loading contact...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function oa(l){let e;return{c(){e=z("address")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function ia(l){let e,n;return e=new st({props:{copyable:!0,address:fe.bech32(l[0].address)}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&1&&(r.address=fe.bech32(t[0].address)),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function ca(l){let e,n,t,s,r,o;e=new Ae({props:{pops:!0,search:!0,network:!0,account:!0}});const c=[ra,la],i=[];function a(f,u){return f[0]?1:0}return t=a(l),s=i[t]=c[t](l),{c(){T(e.$$.fragment),n=M(),s.c(),r=oe()},m(f,u){A(e,f,u),m(f,n,u),i[t].m(f,u),m(f,r,u),o=!0},p(f,u){let _=t;t=a(f),t===_?i[t].p(f,u):(le(),S(i[_],1,1,()=>{i[_]=null}),re(),s=i[t],s?s.p(f,u):(s=i[t]=c[t](f),s.c()),$(s,1),s.m(r.parentNode,r))},i(f){o||($(e.$$.fragment,f),$(s),o=!0)},o(f){S(e.$$.fragment,f),S(s),o=!1},d(f){I(e,f),f&&d(n),i[t].d(f),f&&d(r)}}}function aa(l){let e,n;return e=new ve({props:{nav:!0,slides:!0,$$slots:{default:[ca]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&65&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function fa(l,e,n){let{contactRef:t}=e;const s=t;let r;Qe.getContact(s).then(i=>n(0,r=i));const o=he("page"),c={send:{label:"Send",trigger(){o.push({creator:Rt,props:{to:fe.bech32(r.address)}})}},edit:{label:"Edit",trigger(){o.push({creator:El,props:{contactRef:s}})}},delete:{label:"Delete",trigger(){o.push({creator:Ml})}}};return l.$$set=i=>{"contactRef"in i&&n(3,t=i.contactRef)},l.$$.update=()=>{l.$$.dirty&1&&r&&fe.bech32(r.address)},[r,s,c,t]}class Nl extends x{constructor(e){super(),ee(this,e,fa,aa,Q,{contactRef:3})}}var ua=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86-3 3.87L9 13.14 6 17h12l-3.86-5.14z"/>
</svg>`;function _a(l){let e,n;return e=new ol({props:{dim:48,ref:l[0],name:l[1]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function pa(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,b,g=l[0]&&_a(l);return{c(){e=y("div"),n=y("div"),t=y("span"),g&&g.c(),s=M(),r=y("span"),o=y("div"),o.innerHTML=`<span class="warning svelte-1i7pjsy">Notice:</span> 
				<span class="info">Uploaded icons will be resized to be square. Only JPG &amp; PNG files less than 1MB allowed.</span>`,c=M(),i=y("div"),a=y("div"),f=y("span"),u=M(),_=y("span"),_.textContent="Upload Icon",w(t,"class","left svelte-1i7pjsy"),w(o,"class","disclaimer svelte-1i7pjsy"),w(f,"class","icon svelte-1i7pjsy"),w(_,"class","text svelte-1i7pjsy"),w(a,"class","upload svelte-1i7pjsy"),w(i,"class","actions svelte-1i7pjsy"),w(r,"class","right svelte-1i7pjsy"),w(n,"class","row svelte-1i7pjsy"),w(e,"class","area svelte-1i7pjsy"),Y(e,"intent-person",l[2]==="person")},m(k,C){m(k,e,C),v(e,n),v(n,t),g&&g.m(t,null),v(n,s),v(n,r),v(r,o),v(r,c),v(r,i),v(i,a),v(a,f),f.innerHTML=ua,v(a,u),v(a,_),p=!0,h||(b=te(a,"click",l[6]),h=!0)},p(k,[C]){k[0]&&g.p(k,C)},i(k){p||($(g),p=!0)},o(k){S(g),p=!1},d(k){k&&d(e),g&&g.d(),h=!1,b()}}}function ma(l,e,n){let{pfpRef:t}=e;const s=t||"";let{name:r=""}=e;const o=r;let{intent:c="token"}=e;const i=c;(async()=>s&&await Ar.at(s))();const a=()=>Ir;return l.$$set=f=>{"pfpRef"in f&&n(3,t=f.pfpRef),"name"in f&&n(4,r=f.name),"intent"in f&&n(5,c=f.intent)},[s,o,i,t,r,c,a]}class da extends x{constructor(e){super(),ee(this,e,ma,pa,Q,{pfpRef:3,name:4,intent:5})}}function ha(l){let e,n,t;function s(o){l[17](o)}let r={intent:"person",pfpRef:l[0]?.pfp};return l[1]!==void 0&&(r.name=l[1]),e=new da({props:r}),de.push(()=>Ne(e,"name",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};c&1&&(i.pfpRef=o[0]?.pfp),!n&&c&2&&(n=!0,i.name=o[1],Ee(()=>n=!1)),e.$set(i)},i(o){t||($(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function ga(l){let e,n,t,s=Dt(l[9])+"",r,o,c,i,a=ke(l[3]).filter(l[18]).map(Cs).join(", ")+"",f,u;return{c(){e=y("style"),e.textContent=`.font-family_mono {
  font-family: 'PT Mono';
  white-space: pre;
}
.hide-scrollbar {
  scrollbar-width: none;
}
.hide-scrollbar::-webkit-scrollbar {
  display: none;
}
.hide-scrollbar::-webkit-scrollbar-track {
  display: none;
}
.hide-scrollbar::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.2);
}
.title {
  font-family: Poppins;
  font-weight: 400;
  font-size: 14px;
  color: var(--theme-color-text-light);
}
.examples {
  margin-left: 0.5em;
}`,n=M(),t=y("span"),r=z(s),o=M(),c=y("span"),i=z("("),f=z(a),u=z(")"),w(e,"lang","less"),w(t,"class","title"),w(c,"class","examples")},m(_,p){m(_,e,p),m(_,n,p),m(_,t,p),v(t,r),m(_,o,p),m(_,c,p),v(c,i),v(c,f),v(c,u)},p(_,p){p&512&&s!==(s=Dt(_[9])+"")&&J(r,s),p&520&&a!==(a=ke(_[3]).filter(_[18]).map(Cs).join(", ")+"")&&J(f,a)},d(_){_&&d(e),_&&d(n),_&&d(t),_&&d(o),_&&d(c)}}}function ba(l){let e,n;return e=new Gt({props:{key:"chain-family",$$slots:{default:[ga]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&268435976&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function ys(l){let e,n;return{c(){e=y("span"),n=z(l[4]),w(e,"class","validation-message")},m(t,s){m(t,e,s),v(e,n)},p(t,s){s&16&&J(n,t[4])},d(t){t&&d(e)}}}function wa(l){let e,n,t,s,r,o=l[4]&&ys(l);return{c(){e=y("input"),n=M(),o&&o.c(),t=oe(),w(e,"type","text"),w(e,"spellcheck","false"),w(e,"placeholder","Enter a name"),Y(e,"invalid",l[4])},m(c,i){m(c,e,i),Te(e,l[1]),m(c,n,i),o&&o.m(c,i),m(c,t,i),s||(r=te(e,"input",l[19]),s=!0)},p(c,i){i&2&&e.value!==c[1]&&Te(e,c[1]),i&16&&Y(e,"invalid",c[4]),c[4]?o?o.p(c,i):(o=ys(c),o.c(),o.m(t.parentNode,t)):o&&(o.d(1),o=null)},d(c){c&&d(e),c&&d(n),o&&o.d(c),c&&d(t),s=!1,r()}}}function Ss(l){let e,n;return{c(){e=y("span"),n=z(l[5]),w(e,"class","validation-message")},m(t,s){m(t,e,s),v(e,n)},p(t,s){s&32&&J(n,t[5])},d(t){t&&d(e)}}}function va(l){let e,n,t,s,r,o,c=l[5]&&Ss(l);return{c(){e=y("input"),t=M(),c&&c.c(),s=oe(),w(e,"type","text"),w(e,"class","address"),w(e,"spellcheck","false"),w(e,"placeholder",n=l[10].bech32s.acc+"1..."),Y(e,"invalid",l[5])},m(i,a){m(i,e,a),Te(e,l[2]),m(i,t,a),c&&c.m(i,a),m(i,s,a),r||(o=te(e,"input",l[20]),r=!0)},p(i,a){a&1024&&n!==(n=i[10].bech32s.acc+"1...")&&w(e,"placeholder",n),a&4&&e.value!==i[2]&&Te(e,i[2]),a&32&&Y(e,"invalid",i[5]),i[5]?c?c.p(i,a):(c=Ss(i),c.c(),c.m(s.parentNode,s)):c&&(c.d(1),c=null)},d(i){i&&d(e),i&&d(t),c&&c.d(i),i&&d(s),r=!1,o()}}}function $a(l){let e,n,t;return{c(){e=y("textarea"),w(e,"placeholder","")},m(s,r){m(s,e,r),Te(e,l[7]),n||(t=te(e,"input",l[21]),n=!0)},p(s,r){r&128&&Te(e,s[7])},d(s){s&&d(e),n=!1,t()}}}function ka(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,b,g,k,C,P,R,D,G,B=l[12]?"Save":"Add",L,O,U,E,q;return e=new Ae({props:{plain:!0,pops:!0,title:(l[12]?"Edit":"Add New")+" Contact"}}),t=new me({props:{key:"contact-pfp",name:"Profile Icon",$$slots:{default:[ha]},$$scope:{ctx:l}}}),r=new me({props:{key:"chain-family",name:"Chain Family",$$slots:{default:[ba]},$$scope:{ctx:l}}}),c=new me({props:{key:"contact-name",name:"Name",$$slots:{default:[wa]},$$scope:{ctx:l}}}),a=new me({props:{key:"contact-address",name:"Address",$$slots:{default:[va]},$$scope:{ctx:l}}}),u=new me({props:{key:"contact-notes",name:"Secure Notes",$$slots:{default:[$a]},$$scope:{ctx:l}}}),k=new _l({props:{editable:!0,resourcePath:l[12]}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),T(c.$$.fragment),i=M(),T(a.$$.fragment),f=M(),T(u.$$.fragment),_=M(),p=y("hr"),h=M(),b=y("h3"),b.textContent=`${l[12]?"Edit":"Add"} Tags`,g=M(),T(k.$$.fragment),C=M(),P=y("div"),R=y("button"),R.textContent="Back",D=M(),G=y("button"),L=z(B),w(G,"class","primary"),w(G,"readonly",O=!l[8]),w(P,"class","action-line")},m(H,j){A(e,H,j),m(H,n,j),A(t,H,j),m(H,s,j),A(r,H,j),m(H,o,j),A(c,H,j),m(H,i,j),A(a,H,j),m(H,f,j),A(u,H,j),m(H,_,j),m(H,p,j),m(H,h,j),m(H,b,j),m(H,g,j),A(k,H,j),m(H,C,j),m(H,P,j),v(P,R),v(P,D),v(P,G),v(G,L),U=!0,E||(q=[te(R,"click",l[22]),te(G,"click",l[23])],E=!0)},p(H,j){const V={};j&268435459&&(V.$$scope={dirty:j,ctx:H}),t.$set(V);const se={};j&268435976&&(se.$$scope={dirty:j,ctx:H}),r.$set(se);const Z={};j&268435474&&(Z.$$scope={dirty:j,ctx:H}),c.$set(Z);const ie={};j&268436516&&(ie.$$scope={dirty:j,ctx:H}),a.$set(ie);const ue={};j&268435584&&(ue.$$scope={dirty:j,ctx:H}),u.$set(ue),(!U||j&256&&O!==(O=!H[8]))&&w(G,"readonly",O)},i(H){U||($(e.$$.fragment,H),$(t.$$.fragment,H),$(r.$$.fragment,H),$(c.$$.fragment,H),$(a.$$.fragment,H),$(u.$$.fragment,H),$(k.$$.fragment,H),U=!0)},o(H){S(e.$$.fragment,H),S(t.$$.fragment,H),S(r.$$.fragment,H),S(c.$$.fragment,H),S(a.$$.fragment,H),S(u.$$.fragment,H),S(k.$$.fragment,H),U=!1},d(H){I(e,H),H&&d(n),I(t,H),H&&d(s),I(r,H),H&&d(o),I(c,H),H&&d(i),I(a,H),H&&d(f),I(u,H),H&&d(_),H&&d(p),H&&d(h),H&&d(b),H&&d(g),I(k,H),H&&d(C),H&&d(P),E=!1,nt(q)}}}function ya(l){let e,n,t={leaves:!0,$$slots:{default:[ka]},$$scope:{ctx:l}};return e=new ve({props:t}),l[24](e),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,[r]){const o={};r&268437439&&(o.$$scope={dirty:r,ctx:s}),e.$set(o)},i(s){n||($(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){l[24](null),I(e,s)}}}const Cs=([,l])=>l.bech32s.acc.hrp;function Sa(l,e,n){let t,s,r,o,c,i,a,f;K(l,qt,j=>n(9,a=j)),K(l,Fe,j=>n(10,f=j));const u=he("page");let{contactRef:_=""}=e;const p=_||"";let h;p&&Qe.getContact(p).then(j=>n(0,h=j));let b={};(async function(){n(3,b=Rr((await fe.read()).entries()))})();let g="",k="";function C(j,V=!1){const se=Lr.exec(j);if(!se)return V&&n(5,k="Invalid Bech32 address"),"";const[,Z,ie]=se;let ue=null;for(const[,ce]of ke(H_CHAINS))if(ce.def.bechPrefix===Z){ue=ce;break}return V&&(ue?n(5,k=""):n(5,k=`No Cosmos SDK chains matched '${Z}'`)),n(16,s=ie)}let P=0,R;async function D(){if(i)p?(Object.assign(h,{name:t,address:s,pfp:h.pfp,agentType:c,notes:o}),u.reset()):n(0,h={name:t,family:a,address:s,pfp:h.pfp,agentType:c,notes:o,space:"acc",origin:"user",chains:{}});else{n(15,P++,P);return}try{await Qe.open(async j=>{await j.putContact(h)}),u.reset(),u.push({creator:Nl,props:{contactRef:p}})}catch{}}function G(j){t=j,n(1,t),n(0,h)}const B=([,j])=>a===j.family;function L(){t=this.value,n(1,t),n(0,h)}function O(){r=this.value,n(2,r),n(16,s),n(0,h)}function U(){o=this.value,n(7,o),n(0,h)}const E=()=>u.pop(),q=()=>D();function H(j){de[j?"unshift":"push"](()=>{R=j,n(6,R)})}return l.$$set=j=>{"contactRef"in j&&n(14,_=j.contactRef)},l.$$.update=()=>{l.$$.dirty&1&&n(1,t=h?.name||""),l.$$.dirty&1&&n(16,s=h?.address||""),l.$$.dirty&65536&&n(2,r=s?fe.bech32(s):""),l.$$.dirty&1&&n(7,o=h?.notes||""),l.$$.dirty&1&&(c=h?.agentType||ln.PERSON),l.$$.dirty&6&&n(8,i=!!(t&&C(r))),l.$$.dirty&32774&&P&&(n(4,g=t?"":"Name must not be empty"),C(r,!0))},[h,t,r,b,g,k,R,o,i,a,f,u,p,D,_,P,s,G,B,L,O,U,E,q,H]}class El extends x{constructor(e){super(),ee(this,e,Sa,ya,Q,{contactRef:14})}}var Ca=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-more-vert-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-more-vert-fg" d="M12 8C13.1 8 14 7.1 14 6C14 4.9 13.1 4 12 4C10.9 4 10 4.9 10 6C10 7.1 10.9 8 12 8ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10ZM12 16C10.9 16 10 16.9 10 18C10 19.1 10.9 20 12 20C13.1 20 14 19.1 14 18C14 16.9 13.1 16 12 16Z" fill="#FFB61A"/>
</svg>
`,Ma=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M9 16h6v-6h4l-7-7-7 7h4v6zm3-10.17L14.17 8H13v6h-2V8H9.83L12 5.83zM5 18h14v2H5z"/>
</svg>`;function Ms(l,e,n){const t=l.slice();return t[13]=e[n][0],t[14]=e[n][1],t}function Ns(l,e,n){const t=l.slice();return t[17]=e[n],t}function Na(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Ea(l){let e,n,t=l[12],s=[];for(let o=0;o<t.length;o+=1)s[o]=As(Ms(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c&63){t=o[12];let i;for(i=0;i<t.length;i+=1){const a=Ms(o,t,i);s[i]?(s[i].p(a,c),$(s[i],1)):(s[i]=As(a),s[i].c(),$(s[i],1),s[i].m(e.parentNode,e))}for(le(),i=t.length;i<s.length;i+=1)r(i);re()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)$(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Me(s,o),o&&d(e)}}}function Ta(l){let e,n,t;return e=new st({props:{address:fe.bech32(l[14].address+"")}}),{c(){T(e.$$.fragment),n=M()},m(s,r){A(e,s,r),m(s,n,r),t=!0},p:N,i(s){t||($(e.$$.fragment,s),t=!0)},o(s){S(e.$$.fragment,s),t=!1},d(s){I(e,s),s&&d(n)}}}function Aa(l){let e;return{c(){e=y("span"),w(e,"class","icon contact-type svelte-1l93agm"),w(e,"slot","prefix")},m(n,t){m(n,e,t),e.innerHTML=gn},p:N,d(n){n&&d(e)}}}function Ia(l){let e,n,t;return e=new _l({props:{collapsed:!0,rootStyle:"margin: 0px;",resourcePath:l[13],$$slots:{prefix:[Aa]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment),n=M()},m(s,r){A(e,s,r),m(s,n,r),t=!0},p(s,r){const o={};r&1048576&&(o.$$scope={dirty:r,ctx:s}),e.$set(o)},i(s){t||($(e.$$.fragment,s),t=!0)},o(s){S(e.$$.fragment,s),t=!1},d(s){I(e,s),s&&d(n)}}}function Es(l){let e,n,t,s=l[5],r=[];for(let o=0;o<s.length;o+=1)r[o]=Ts(Ns(l,s,o));return{c(){e=y("span");for(let o=0;o<r.length;o+=1)r[o].c();w(e,"class","overlay")},m(o,c){m(o,e,c);for(let i=0;i<r.length;i+=1)r[i].m(e,null);t=!0},p(o,c){if(l=o,c&36){s=l[5];let i;for(i=0;i<s.length;i+=1){const a=Ns(l,s,i);r[i]?r[i].p(a,c):(r[i]=Ts(a),r[i].c(),r[i].m(e,null))}for(;i<r.length;i+=1)r[i].d(1);r.length=s.length}},i(o){t||(Ke(()=>{n||(n=Ve(e,ge,{duration:300,easing:kn},!0)),n.run(1)}),t=!0)},o(o){n||(n=Ve(e,ge,{duration:300,easing:kn},!1)),n.run(0),t=!1},d(o){o&&d(e),Me(r,o),o&&n&&n.end()}}}function Ts(l){let e,n,t=l[17].icon+"",s,r,o=l[17].label+"",c,i,a,f;function u(..._){return l[9](l[17],l[14],..._)}return{c(){e=y("div"),n=y("span"),s=M(),r=y("span"),c=z(o),i=M(),w(n,"class","icon"),w(r,"class","text"),w(e,"class","action")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=t,v(e,s),v(e,r),v(r,c),v(e,i),a||(f=te(e,"click",u),a=!0)},p(_,p){l=_},d(_){_&&d(e),a=!1,f()}}}function Ra(l){let e,n,t,s,r,o,c=l[0]===l[13]&&Es(l);return{c(){e=y("span"),n=M(),c&&c.c(),t=M(),w(e,"class","icon more-menu"),Y(e,"active",l[0]===l[13])},m(i,a){m(i,e,a),e.innerHTML=Ca,m(i,n,a),c&&c.m(i,a),m(i,t,a),s=!0,r||(o=te(e,"click",l[4](l[13],l[14])),r=!0)},p(i,a){l=i,a&5&&Y(e,"active",l[0]===l[13]),l[0]===l[13]?c?(c.p(l,a),a&1&&$(c,1)):(c=Es(l),c.c(),$(c,1),c.m(t.parentNode,t)):c&&(le(),S(c,1,1,()=>{c=null}),re())},i(i){s||($(c),s=!0)},o(i){S(c),s=!1},d(i){i&&d(e),i&&d(n),c&&c.d(i),i&&d(t),r=!1,o()}}}function As(l){let e,n;function t(...s){return l[10](l[14],...s)}return e=new lt({props:{resource:l[14],resourcePath:l[13],$$slots:{status:[Ra],tags:[Ia],detail:[Ta]},$$scope:{ctx:l}}}),e.$on("click",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r&1048577&&(o.$$scope={dirty:r,ctx:l}),e.$set(o)},i(s){n||($(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function La(l){let e;return{c(){e=z("Loading contacts...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Oa(l){let e,n,t={ctx:l,current:null,token:null,hasCatch:!1,pending:La,then:Ea,catch:Na,value:12,blocks:[,,,]};return Le(l[2](),t),{c(){e=y("div"),t.block.c(),w(e,"class","rows svelte-1l93agm")},m(s,r){m(s,e,r),t.block.m(e,t.anchor=null),t.mount=()=>e,t.anchor=null,n=!0},p(s,[r]){l=s,Oe(t,l,r)},i(s){n||($(t.block),n=!0)},o(s){for(let r=0;r<3;r+=1){const o=t.blocks[r];S(o)}n=!1},d(s){s&&d(e),t.block.d(),t.token=null,t=null}}}function Pa(l,e,n){let t;K(l,qt,b=>n(11,t=b));const s=he("page");let{filter:r=b=>!0}=e,{sort:o=(b,g)=>b.name<g.name?-1:1}=e,{append:c=[]}=e;async function i(){return[...(await Qe.read()).contacts(t)]}const a=new WeakMap;let f="";function u(b,g){return k=>{k.stopImmediatePropagation();const C=b;if(a.get(k)?.cancelMenu===C){n(0,f="");return}n(0,f=C),window.addEventListener("click",()=>{a.set(k,{cancelMenu:f}),n(0,f="")},{capture:!0,once:!0})}}const _=[{label:"Edit",icon:Or,click(b){s.push({creator:El,props:{contact:b}})}},{label:"Send",icon:Ma,click(b){s.push({creator:Rt,props:{recipient:fe.bech32(b.address)}})}},{label:"Delete",icon:Pr,click(b){s.push({creator:Ml,props:{}})}}],p=(b,g,k)=>{k.stopPropagation(),b.click(g)},h=(b,g)=>{a.get(g)?.cancelMenu||s.push({creator:Nl,props:{contact:b}})};return l.$$set=b=>{"filter"in b&&n(6,r=b.filter),"sort"in b&&n(7,o=b.sort),"append"in b&&n(8,c=b.append)},[f,s,i,a,u,_,r,o,c,p,h]}class bn extends x{constructor(e){super(),ee(this,e,Pa,Oa,Q,{filter:6,sort:7,append:8})}}function ja(l){let e;return{c(){e=z("All")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function Ha(l){let e;return{c(){e=z("Humans")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function za(l){let e;return{c(){e=z("Contracts")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function Fa(l){let e,n,t,s,r,o;return e=new Jt({props:{$$slots:{default:[ja]},$$scope:{ctx:l}}}),t=new Jt({props:{$$slots:{default:[Ha]},$$scope:{ctx:l}}}),r=new Jt({props:{$$slots:{default:[za]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment)},m(c,i){A(e,c,i),m(c,n,i),A(t,c,i),m(c,s,i),A(r,c,i),o=!0},p(c,i){const a={};i&8&&(a.$$scope={dirty:i,ctx:c}),e.$set(a);const f={};i&8&&(f.$$scope={dirty:i,ctx:c}),t.$set(f);const u={};i&8&&(u.$$scope={dirty:i,ctx:c}),r.$set(u)},i(c){o||($(e.$$.fragment,c),$(t.$$.fragment,c),$(r.$$.fragment,c),o=!0)},o(c){S(e.$$.fragment,c),S(t.$$.fragment,c),S(r.$$.fragment,c),o=!1},d(c){I(e,c),c&&d(n),I(t,c),c&&d(s),I(r,c)}}}function Ba(l){let e,n;return e=new bn({}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Da(l){let e,n;return e=new bn({props:{filter:l[0]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Va(l){let e,n;return e=new bn({props:{filter:l[1]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function qa(l){let e,n,t,s,r,o,c,i;return e=new Hr({props:{$$slots:{default:[Fa]},$$scope:{ctx:l}}}),t=new Zt({props:{$$slots:{default:[Ba]},$$scope:{ctx:l}}}),r=new Zt({props:{$$slots:{default:[Da]},$$scope:{ctx:l}}}),c=new Zt({props:{$$slots:{default:[Va]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),T(c.$$.fragment)},m(a,f){A(e,a,f),m(a,n,f),A(t,a,f),m(a,s,f),A(r,a,f),m(a,o,f),A(c,a,f),i=!0},p(a,f){const u={};f&8&&(u.$$scope={dirty:f,ctx:a}),e.$set(u);const _={};f&8&&(_.$$scope={dirty:f,ctx:a}),t.$set(_);const p={};f&8&&(p.$$scope={dirty:f,ctx:a}),r.$set(p);const h={};f&8&&(h.$$scope={dirty:f,ctx:a}),c.$set(h)},i(a){i||($(e.$$.fragment,a),$(t.$$.fragment,a),$(r.$$.fragment,a),$(c.$$.fragment,a),i=!0)},o(a){S(e.$$.fragment,a),S(t.$$.fragment,a),S(r.$$.fragment,a),S(c.$$.fragment,a),i=!1},d(a){I(e,a),a&&d(n),I(t,a),a&&d(s),I(r,a),a&&d(o),I(c,a)}}}function Ua(l){let e,n,t,s,r,o;return e=new Ae({props:{search:!0,network:!0,account:!0}}),t=new It({props:{title:"Contacts"}}),r=new jr({props:{$$slots:{default:[qa]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment)},m(c,i){A(e,c,i),m(c,n,i),A(t,c,i),m(c,s,i),A(r,c,i),o=!0},p(c,i){const a={};i&8&&(a.$$scope={dirty:i,ctx:c}),r.$set(a)},i(c){o||($(e.$$.fragment,c),$(t.$$.fragment,c),$(r.$$.fragment,c),o=!0)},o(c){S(e.$$.fragment,c),S(t.$$.fragment,c),S(r.$$.fragment,c),o=!1},d(c){I(e,c),c&&d(n),I(t,c),c&&d(s),I(r,c)}}}function Xa(l){let e,n;return e=new ve({props:{nav:!0,root:!0,classNames:"contacts",$$slots:{default:[Ua]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&8&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Ka(l){return he("page"),[t=>ln.PERSON===t.agentType,t=>ln.CONTRACT===t.agentType]}class Wa extends x{constructor(e){super(),ee(this,e,Ka,Xa,Q,{})}}function Is(l,e,n){const t=l.slice();return t[4]=e[n][0],t[5]=e[n][1],t}function Ga(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Ya(l){let e,n,t=l[3],s=[];for(let o=0;o<t.length;o+=1)s[o]=Rs(Is(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c&3){t=o[3];let i;for(i=0;i<t.length;i+=1){const a=Is(o,t,i);s[i]?(s[i].p(a,c),$(s[i],1)):(s[i]=Rs(a),s[i].c(),$(s[i],1),s[i].m(e.parentNode,e))}for(le(),i=t.length;i<s.length;i+=1)r(i);re()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)$(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Me(s,o),o&&d(e)}}}function Rs(l){let e,n;return e=new lt({props:{pfp:l[5].pfp,name:l[5].host,resourcePath:l[4],iconClass:"square pfp"}}),e.$on("click",l[2]),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Za(l){let e;return{c(){e=z("Loading...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Ja(l){let e,n,t,s,r,o;e=new Ae({props:{search:!0,network:!0,account:!0}}),t=new It({props:{bare:!0,title:"Sites / Apps"}});let c={ctx:l,current:null,token:null,hasCatch:!1,pending:Za,then:Ya,catch:Ga,value:3,blocks:[,,,]};return Le(l[1](),c),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),r=y("div"),c.block.c(),w(r,"class","rows no-margin")},m(i,a){A(e,i,a),m(i,n,a),A(t,i,a),m(i,s,a),m(i,r,a),c.block.m(r,c.anchor=null),c.mount=()=>r,c.anchor=null,o=!0},p(i,a){l=i,Oe(c,l,a)},i(i){o||($(e.$$.fragment,i),$(t.$$.fragment,i),$(c.block),o=!0)},o(i){S(e.$$.fragment,i),S(t.$$.fragment,i);for(let a=0;a<3;a+=1){const f=c.blocks[a];S(f)}o=!1},d(i){I(e,i),i&&d(n),I(t,i),i&&d(s),i&&d(r),c.block.d(),c.token=null,c=null}}}function Qa(l){let e,n;return e=new ve({props:{debug:"SitesHome",nav:!0,root:!0,$$slots:{default:[Ja]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&256&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function xa(l){const e=he("page");async function n(){return(await pl.read()).entries()}return[e,n,()=>{e.push({})}]}class ef extends x{constructor(e){super(),ee(this,e,xa,Qa,Q,{})}}function tf(l){let e,n,t,s,r,o;e=new At({props:{resource:l[0],resourcePath:l[2],actions:l[3],$$slots:{subtitle:[lf],default:[sf]},$$scope:{ctx:l}}}),t=new me({props:{name:"gRPC-web URL",key:"grpc-web",$$slots:{default:[of]},$$scope:{ctx:l}}});let c=l[0].rpcHost&&Ls(l);return{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),c&&c.c(),r=oe()},m(i,a){A(e,i,a),m(i,n,a),A(t,i,a),m(i,s,a),c&&c.m(i,a),m(i,r,a),o=!0},p(i,a){const f={};a&1&&(f.resource=i[0]),a&130&&(f.$$scope={dirty:a,ctx:i}),e.$set(f);const u={};a&129&&(u.$$scope={dirty:a,ctx:i}),t.$set(u),i[0].rpcHost?c?(c.p(i,a),a&1&&$(c,1)):(c=Ls(i),c.c(),$(c,1),c.m(r.parentNode,r)):c&&(le(),S(c,1,1,()=>{c=null}),re())},i(i){o||($(e.$$.fragment,i),$(t.$$.fragment,i),$(c),o=!0)},o(i){S(e.$$.fragment,i),S(t.$$.fragment,i),S(c),o=!1},d(i){I(e,i),i&&d(n),I(t,i),i&&d(s),c&&c.d(i),i&&d(r)}}}function nf(l){let e;return{c(){e=z("Loading network...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function sf(l){let e;return{c(){e=z("address")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function lf(l){let e,n=l[1].name+"",t,s,r=l[1].id+"",o,c;return{c(){e=y("span"),t=z(n),s=z(" ("),o=z(r),c=z(")"),w(e,"class","font-family_mono svelte-yy3tbl")},m(i,a){m(i,e,a),v(e,t),v(e,s),v(e,o),v(e,c)},p(i,a){a&2&&n!==(n=i[1].name+"")&&J(t,n),a&2&&r!==(r=i[1].id+"")&&J(o,r)},d(i){i&&d(e)}}}function rf(l){let e=l[0].grpcWebUrl+"",n;return{c(){n=z(e)},m(t,s){m(t,n,s)},p(t,s){s&1&&e!==(e=t[0].grpcWebUrl+"")&&J(n,e)},d(t){t&&d(n)}}}function of(l){let e,n;return e=new Gt({props:{key:"grpc-web-value",$$slots:{default:[rf]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&129&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Ls(l){let e,n;return e=new me({props:{name:"RPC Host",key:"rpc",$$slots:{default:[af]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&129&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function cf(l){let e=l[0].rpcHost+"",n;return{c(){n=z(e)},m(t,s){m(t,n,s)},p(t,s){s&1&&e!==(e=t[0].rpcHost+"")&&J(n,e)},d(t){t&&d(n)}}}function af(l){let e,n;return e=new Gt({props:{key:"rpc-value",$$slots:{default:[cf]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&129&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function ff(l){let e,n,t,s,r,o,c;e=new Ae({props:{pops:!0,search:!0,network:!0,account:!0}});const i=[nf,tf],a=[];function f(u,_){return u[1]?1:0}return t=f(l),s=a[t]=i[t](l),o=new Cl({}),{c(){T(e.$$.fragment),n=M(),s.c(),r=M(),T(o.$$.fragment)},m(u,_){A(e,u,_),m(u,n,_),a[t].m(u,_),m(u,r,_),A(o,u,_),c=!0},p(u,_){let p=t;t=f(u),t===p?a[t].p(u,_):(le(),S(a[p],1,1,()=>{a[p]=null}),re(),s=a[t],s?s.p(u,_):(s=a[t]=i[t](u),s.c()),$(s,1),s.m(r.parentNode,r))},i(u){c||($(e.$$.fragment,u),$(s),$(o.$$.fragment,u),c=!0)},o(u){S(e.$$.fragment,u),S(s),S(o.$$.fragment,u),c=!1},d(u){I(e,u),u&&d(n),a[t].d(u),u&&d(r),I(o,u)}}}function uf(l){let e,n;return e=new ve({props:{nav:!0,slides:!0,$$slots:{default:[ff]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&131&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function _f(l,e,n){let t,{networkRef:s}=e;const r=s;let o;St.at(r).then(a=>n(0,o=a));let c;he("page");const i={};return l.$$set=a=>{"networkRef"in a&&n(4,s=a.networkRef)},l.$$.update=()=>{l.$$.dirty&1&&n(5,t=o?.chain),l.$$.dirty&32&&t&&fe.at(t).then(a=>n(1,c=a))},[o,c,r,i,s,t]}class pf extends x{constructor(e){super(),ee(this,e,_f,uf,Q,{networkRef:4})}}function Os(l,e,n){const t=l.slice();t[6]=e[n][0],t[7]=e[n][1];const s=t[0].at(t[7].chain);return t[8]=s,t}function mf(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function df(l){let e,n,t=l[5],s=[];for(let o=0;o<t.length;o+=1)s[o]=Ps(Os(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c&7){t=o[5];let i;for(i=0;i<t.length;i+=1){const a=Os(o,t,i);s[i]?(s[i].p(a,c),$(s[i],1)):(s[i]=Ps(a),s[i].c(),$(s[i],1),s[i].m(e.parentNode,e))}for(le(),i=t.length;i<s.length;i+=1)r(i);re()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)$(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Me(s,o),o&&d(e)}}}function Ps(l){let e,n;function t(){return l[3](l[6])}return e=new lt({props:{resource:l[7],resourcePath:l[6],iconClass:"square pfp",detail:`${l[8]?.name} (${l[8]?.id})`}}),e.$on("click",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r&1&&(o.detail=`${l[8]?.name} (${l[8]?.id})`),e.$set(o)},i(s){n||($(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function hf(l){let e;return{c(){e=z("Loading...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function gf(l){let e,n,t,s,r,o;e=new Ae({props:{search:!0,network:!0,account:!0}}),t=new It({props:{bare:!0,title:"Networks"}});let c={ctx:l,current:null,token:null,hasCatch:!1,pending:hf,then:df,catch:mf,value:5,blocks:[,,,]};return Le(l[2](),c),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),r=y("div"),c.block.c(),w(r,"class","rows no-margin")},m(i,a){A(e,i,a),m(i,n,a),A(t,i,a),m(i,s,a),m(i,r,a),c.block.m(r,c.anchor=null),c.mount=()=>r,c.anchor=null,o=!0},p(i,a){l=i,Oe(c,l,a)},i(i){o||($(e.$$.fragment,i),$(t.$$.fragment,i),$(c.block),o=!0)},o(i){S(e.$$.fragment,i),S(t.$$.fragment,i);for(let a=0;a<3;a+=1){const f=c.blocks[a];S(f)}o=!1},d(i){I(e,i),i&&d(n),I(t,i),i&&d(s),i&&d(r),c.block.d(),c.token=null,c=null}}}function bf(l){let e,n;return e=new ve({props:{debug:"NetworksHome",nav:!0,root:!0,$$slots:{default:[gf]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&2049&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function wf(l,e,n){const t=he("page");let s,r;async function o(){return n(0,[s,r]=await Promise.all([fe.read(),St.read()]),s),r.entries()}return[s,t,o,i=>{t.push({creator:pf,props:{networkRef:i}})}]}class vf extends x{constructor(e){super(),ee(this,e,wf,bf,Q,{})}}function $f(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function kf(l){let e,n;return e=new Fr({props:{incidents:l[5]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function yf(l){let e;return{c(){e=z("Loading history...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function js(l){let e,n,t={ctx:l,current:null,token:null,hasCatch:!1,pending:yf,then:kf,catch:$f,value:5,blocks:[,,,]};return Le(l[1](),t),{c(){e=oe(),t.block.c()},m(s,r){m(s,e,r),t.block.m(s,t.anchor=r),t.mount=()=>e.parentNode,t.anchor=e,n=!0},p(s,r){l=s,Oe(t,l,r)},i(s){n||($(t.block),n=!0)},o(s){for(let r=0;r<3;r+=1){const o=t.blocks[r];S(o)}n=!1},d(s){s&&d(e),t.block.d(s),t.token=null,t=null}}}function Sf(l){let e,n,t,s,r=l[0],o,c;e=new Ae({props:{search:!0,network:!0,account:!0}}),t=new It({props:{title:"History",bare:!0}});let i=js(l);return{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),i.c(),o=oe()},m(a,f){A(e,a,f),m(a,n,f),A(t,a,f),m(a,s,f),i.m(a,f),m(a,o,f),c=!0},p(a,f){f&1&&Q(r,r=a[0])?(le(),S(i,1,1,N),re(),i=js(a),i.c(),$(i,1),i.m(o.parentNode,o)):i.p(a,f)},i(a){c||($(e.$$.fragment,a),$(t.$$.fragment,a),$(i),c=!0)},o(a){S(e.$$.fragment,a),S(t.$$.fragment,a),S(i),c=!1},d(a){I(e,a),a&&d(n),I(t,a),a&&d(s),a&&d(o),i.d(a)}}}function Cf(l){let e,n;return e=new ve({props:{nav:!0,root:!0,$$slots:{default:[Sf]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&65&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Mf(l,e,n){let t,s;K(l,vt,i=>n(2,t=i)),K(l,it,i=>n(3,s=i));let r=1;const o=hn({updateStore({key:i}){i==="events"&&n(0,r++,r)}});Tt(()=>{o()});async function c(){return await s.synchronizeAll(t),[...await zr.filter()]}return[r,c]}class Nf extends x{constructor(e){super(),ee(this,e,Mf,Cf,Q,{})}}var Je=(l=>(l.DEFAULT="default",l.INIT="init",l.SEARCH="search",l.TOKENS="tokens",l.NFTS="nfts",l.CONTACTS="contacts",l.HISTORY="history",l.NETWORKS="networks",l.ACCOUNTS="accounts",l.TAGS="tags",l.SITES="sites",l))(Je||{});const Tl={default:hl,init:vl,tokens:Nc,contacts:Wa,history:Nf,networks:vf,accounts:xc,sites:ef};function Ef(l){let e,n,t,s,r,o;return{c(){e=kt("svg"),n=kt("style"),t=z(`.overscroll .bg {
  fill: var(--theme-color-text-light);
}
.overscroll .ring {
  fill: transparent;
  stroke: #c4c4c4;
}
.overscroll .progress {
  fill: transparent;
  stroke: black;
}
`),s=kt("circle"),r=kt("circle"),o=kt("circle"),w(n,"lang","less"),w(s,"cx","16"),w(s,"cy","16"),w(s,"r","16"),w(s,"class","bg"),w(r,"cx","16"),w(r,"cy","16"),w(r,"r","10"),w(r,"class","ring"),w(r,"stroke-width","3"),ze(r,"opacity","0.2"),w(o,"cx","16"),w(o,"cy","16"),w(o,"r","10"),w(o,"class","progress svelte-1u2i3kk"),w(o,"stroke-width","3"),ze(o,"stroke-dashoffset",62-l[1]*62),w(e,"width","32"),w(e,"height","32"),w(e,"viewBox","0 0 32 32"),w(e,"xmlns","http://www.w3.org/2000/svg"),w(e,"class","overscroll svelte-1u2i3kk")},m(c,i){m(c,e,i),v(e,n),v(n,t),v(e,s),v(e,r),v(e,o),l[2](o)},p(c,[i]){i&2&&ze(o,"stroke-dashoffset",62-c[1]*62)},i:N,o:N,d(c){c&&d(e),l[2](null)}}}function Tf(l,e,n){let t;K(l,Br,o=>n(1,t=o));let s;function r(o){de[o?"unshift":"push"](()=>{s=o,n(0,s)})}return[s,t,r]}class Af extends x{constructor(e){super(),ee(this,e,Tf,Ef,Q,{})}}function If(l){let e,n,t,s,r,o;var c=l[0];function i(a){return{}}return c&&(t=new c(i())),{c(){e=y("div"),n=y("section"),t&&T(t.$$.fragment),w(n,"class","screen content svelte-rtd9ps"),w(e,"class","popup svelte-rtd9ps"),Y(e,"showing",l[0]!==null)},m(a,f){m(a,e,f),v(e,n),t&&A(t,n,null),s=!0,r||(o=[te(n,"click",Rf),te(e,"click",l[1])],r=!0)},p(a,[f]){if(c!==(c=a[0])){if(t){le();const u=t;S(u.$$.fragment,1,0,()=>{I(u,1)}),re()}c?(t=new c(i()),T(t.$$.fragment),$(t.$$.fragment,1),A(t,n,null)):t=null}f&1&&Y(e,"showing",a[0]!==null)},i(a){s||(t&&$(t.$$.fragment,a),s=!0)},o(a){t&&S(t.$$.fragment,a),s=!1},d(a){a&&d(e),t&&I(t),r=!1,nt(o)}}}const Rf=l=>l.stopPropagation();function Lf(l,e,n){let t;return K(l,yn,r=>n(0,t=r)),[t,()=>be(yn,t=null,t)]}class Of extends x{constructor(e){super(),ee(this,e,Lf,If,Q,{})}}var Pf=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M12 16L18 10L16.59 8.59L12 13.17L7.41 8.59L6 10L12 16Z" />
</svg>
`,jf=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8Zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6ZM3 12a5.99 5.99 0 0 1 4-5.65V4.26C3.55 5.15 1 8.27 1 12c0 3.73 2.55 6.85 6 7.74v-2.09A5.99 5.99 0 0 1 3 12Z" />
</svg>
`,Hf=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M13 3a9 9 0 0 0-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42A8.954 8.954 0 0 0 13 21a9 9 0 0 0 0-18Zm-1 5v5l4.25 2.52.77-1.28-3.52-2.09V8H12Z" />
</svg>
`,zf=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-menu-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-menu-fg" d="M4 19h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1Zm0-6h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1ZM3 6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1Z" />
</svg>
`;function Hs(l,e,n){const t=l.slice();return t[17]=e[n][0],t[18]=e[n][1],t}function Ff(l){let e,n,t,s=l[18].svg+"",r,o,c,i,a=l[18].label+"",f,u,_,p;function h(){return l[9](l[17])}return{c(){e=y("li"),n=y("div"),t=new ml(!1),r=M(),o=y("span"),c=M(),i=y("div"),f=z(a),u=M(),t.a=r,w(o,"class","notification svelte-1ylq4j5"),Y(o,"display_none",!l[1].includes(l[17])),w(n,"class","icon svelte-1ylq4j5"),w(i,"class","label svelte-1ylq4j5"),w(e,"class","button "+l[17]+" svelte-1ylq4j5"),Y(e,"active",l[0]===l[17])},m(b,g){m(b,e,g),v(e,n),t.m(s,n),v(n,r),v(n,o),v(e,c),v(e,i),v(i,f),v(e,u),_||(p=te(e,"click",h),_=!0)},p(b,g){l=b,g&18&&Y(o,"display_none",!l[1].includes(l[17])),g&17&&Y(e,"active",l[0]===l[17])},d(b){b&&d(e),_=!1,p()}}}function Bf(l){let e,n,t,s=l[18].svg+"",r,o,c,i,a=l[18].label+"",f,u;return{c(){e=y("li"),n=y("div"),t=new ml(!1),r=M(),o=y("span"),c=M(),i=y("div"),f=z(a),u=M(),t.a=r,w(o,"class","notification svelte-1ylq4j5"),Y(o,"display_none",!l[1].includes(l[17])),w(n,"class","icon svelte-1ylq4j5"),w(i,"class","label svelte-1ylq4j5"),w(e,"class","button "+l[17]+" svelte-1ylq4j5"),ze(e,"opacity","0.5"),Y(e,"active",l[0]===l[17])},m(_,p){m(_,e,p),v(e,n),t.m(s,n),v(n,r),v(n,o),v(e,c),v(e,i),v(i,f),v(e,u)},p(_,p){p&18&&Y(o,"display_none",!_[1].includes(_[17])),p&17&&Y(e,"active",_[0]===_[17])},d(_){_&&d(e)}}}function zs(l){let e;function n(r,o){return r[18].disabled?Bf:Ff}let s=n(l)(l);return{c(){s.c(),e=oe()},m(r,o){s.m(r,o),m(r,e,o)},p(r,o){s.p(r,o)},d(r){s.d(r),r&&d(e)}}}function Df(l){let e,n,t,s,r,o,c=ke(l[4]),i=[];for(let a=0;a<c.length;a+=1)i[a]=zs(Hs(l,c,a));return{c(){e=y("nav"),n=y("div"),t=M(),s=y("ul");for(let a=0;a<i.length;a+=1)i[a].c();w(n,"class","collapse icon svelte-1ylq4j5"),w(s,"class","bar svelte-1ylq4j5"),w(e,"class","svelte-1ylq4j5"),Y(e,"collapsed",l[2]),Y(e,"visible",l[3])},m(a,f){m(a,e,f),v(e,n),n.innerHTML=Pf,v(e,t),v(e,s);for(let u=0;u<i.length;u+=1)i[u].m(s,null);r||(o=te(n,"click",l[8]),r=!0)},p(a,[f]){if(f&83){c=ke(a[4]);let u;for(u=0;u<c.length;u+=1){const _=Hs(a,c,u);i[u]?i[u].p(_,f):(i[u]=zs(_),i[u].c(),i[u].m(s,null))}for(;u<i.length;u+=1)i[u].d(1);i.length=c.length}f&4&&Y(e,"collapsed",a[2]),f&8&&Y(e,"visible",a[3])},i:N,o:N,d(a){a&&d(e),Me(i,a),r=!1,o()}}}function Vf(l,e,n){let t,s,r,o,c,i,a,f,u,_;K(l,wt,R=>n(10,t=R)),K(l,Pt,R=>n(11,s=R)),K(l,jt,R=>n(7,r=R)),K(l,dt,R=>n(12,o=R)),K(l,Sn,R=>n(13,c=R)),K(l,Cn,R=>n(14,i=R)),K(l,Mn,R=>n(15,a=R)),K(l,Nn,R=>n(1,f=R)),K(l,En,R=>n(2,u=R)),K(l,Dr,R=>n(3,_=R));const p={[Je.TOKENS]:{svg:jf,label:"Tokens"},[Je.CONTACTS]:{svg:gn,label:"Contacts",disabled:!0},[Je.HISTORY]:{svg:Hf,label:"History"},menu:{svg:zf,label:"Menu"}},h=new Map(mn(Tl,(R,D)=>[D,R]));let b="";function g(){be(En,u=!u,u)}function k(R){switch(be(Nn,f=f.filter(D=>R!==D),f),a&&be(Mn,a=!1,a),i&&be(Cn,i=!1,i),c&&be(Sn,c=!1,c),R){case"menu":{be(dt,o=!0,o);break}case b:{t.activePage.dom.scrollTo({top:0,left:0,behavior:"smooth"});break}case s.id:{const D=r.peak();D&&h.get(D.creator)===s.id?r.pop():r.reset();break}default:{t.activateThread(R);break}}}const C=()=>g(),P=R=>k(R);return l.$$.update=()=>{l.$$.dirty&128&&n(0,b=r&&h.get(r.creator)||"")},[b,f,u,_,p,g,k,r,C,P]}class qf extends x{constructor(e){super(),ee(this,e,Vf,Df,Q,{})}}function tt(l){return Array.isArray?Array.isArray(l):Rl(l)==="[object Array]"}const Uf=1/0;function Xf(l){if(typeof l=="string")return l;let e=l+"";return e=="0"&&1/l==-Uf?"-0":e}function Kf(l){return l==null?"":Xf(l)}function Ze(l){return typeof l=="string"}function Al(l){return typeof l=="number"}function Wf(l){return l===!0||l===!1||Gf(l)&&Rl(l)=="[object Boolean]"}function Il(l){return typeof l=="object"}function Gf(l){return Il(l)&&l!==null}function He(l){return l!=null}function en(l){return!l.trim().length}function Rl(l){return l==null?l===void 0?"[object Undefined]":"[object Null]":Object.prototype.toString.call(l)}const Yf="Incorrect 'index' type",Zf=l=>`Invalid value for key ${l}`,Jf=l=>`Pattern length exceeds max of ${l}.`,Qf=l=>`Missing ${l} property in key`,xf=l=>`Property 'weight' in key '${l}' must be a positive integer`,Fs=Object.prototype.hasOwnProperty;class eu{constructor(e){this._keys=[],this._keyMap={};let n=0;e.forEach(t=>{let s=Ll(t);n+=s.weight,this._keys.push(s),this._keyMap[s.id]=s,n+=s.weight}),this._keys.forEach(t=>{t.weight/=n})}get(e){return this._keyMap[e]}keys(){return this._keys}toJSON(){return JSON.stringify(this._keys)}}function Ll(l){let e=null,n=null,t=null,s=1,r=null;if(Ze(l)||tt(l))t=l,e=Bs(l),n=rn(l);else{if(!Fs.call(l,"name"))throw new Error(Qf("name"));const o=l.name;if(t=o,Fs.call(l,"weight")&&(s=l.weight,s<=0))throw new Error(xf(o));e=Bs(o),n=rn(o),r=l.getFn}return{path:e,id:n,weight:s,src:t,getFn:r}}function Bs(l){return tt(l)?l:l.split(".")}function rn(l){return tt(l)?l.join("."):l}function tu(l,e){let n=[],t=!1;const s=(r,o,c)=>{if(!!He(r))if(!o[c])n.push(r);else{let i=o[c];const a=r[i];if(!He(a))return;if(c===o.length-1&&(Ze(a)||Al(a)||Wf(a)))n.push(Kf(a));else if(tt(a)){t=!0;for(let f=0,u=a.length;f<u;f+=1)s(a[f],o,c+1)}else o.length&&s(a,o,c+1)}};return s(l,Ze(e)?e.split("."):e,0),t?n:n[0]}const nu={includeMatches:!1,findAllMatches:!1,minMatchCharLength:1},su={isCaseSensitive:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:(l,e)=>l.score===e.score?l.idx<e.idx?-1:1:l.score<e.score?-1:1},lu={location:0,threshold:.6,distance:100},ru={useExtendedSearch:!1,getFn:tu,ignoreLocation:!1,ignoreFieldNorm:!1,fieldNormWeight:1};var ne={...su,...nu,...lu,...ru};const ou=/[^ ]+/g;function iu(l=1,e=3){const n=new Map,t=Math.pow(10,e);return{get(s){const r=s.match(ou).length;if(n.has(r))return n.get(r);const o=1/Math.pow(r,.5*l),c=parseFloat(Math.round(o*t)/t);return n.set(r,c),c},clear(){n.clear()}}}class wn{constructor({getFn:e=ne.getFn,fieldNormWeight:n=ne.fieldNormWeight}={}){this.norm=iu(n,3),this.getFn=e,this.isCreated=!1,this.setIndexRecords()}setSources(e=[]){this.docs=e}setIndexRecords(e=[]){this.records=e}setKeys(e=[]){this.keys=e,this._keysMap={},e.forEach((n,t)=>{this._keysMap[n.id]=t})}create(){this.isCreated||!this.docs.length||(this.isCreated=!0,Ze(this.docs[0])?this.docs.forEach((e,n)=>{this._addString(e,n)}):this.docs.forEach((e,n)=>{this._addObject(e,n)}),this.norm.clear())}add(e){const n=this.size();Ze(e)?this._addString(e,n):this._addObject(e,n)}removeAt(e){this.records.splice(e,1);for(let n=e,t=this.size();n<t;n+=1)this.records[n].i-=1}getValueForItemAtKeyId(e,n){return e[this._keysMap[n]]}size(){return this.records.length}_addString(e,n){if(!He(e)||en(e))return;let t={v:e,i:n,n:this.norm.get(e)};this.records.push(t)}_addObject(e,n){let t={i:n,$:{}};this.keys.forEach((s,r)=>{let o=s.getFn?s.getFn(e):this.getFn(e,s.path);if(!!He(o)){if(tt(o)){let c=[];const i=[{nestedArrIndex:-1,value:o}];for(;i.length;){const{nestedArrIndex:a,value:f}=i.pop();if(!!He(f))if(Ze(f)&&!en(f)){let u={v:f,i:a,n:this.norm.get(f)};c.push(u)}else tt(f)&&f.forEach((u,_)=>{i.push({nestedArrIndex:_,value:u})})}t.$[r]=c}else if(Ze(o)&&!en(o)){let c={v:o,n:this.norm.get(o)};t.$[r]=c}}}),this.records.push(t)}toJSON(){return{keys:this.keys,records:this.records}}}function Ol(l,e,{getFn:n=ne.getFn,fieldNormWeight:t=ne.fieldNormWeight}={}){const s=new wn({getFn:n,fieldNormWeight:t});return s.setKeys(l.map(Ll)),s.setSources(e),s.create(),s}function cu(l,{getFn:e=ne.getFn,fieldNormWeight:n=ne.fieldNormWeight}={}){const{keys:t,records:s}=l,r=new wn({getFn:e,fieldNormWeight:n});return r.setKeys(t),r.setIndexRecords(s),r}function Ot(l,{errors:e=0,currentLocation:n=0,expectedLocation:t=0,distance:s=ne.distance,ignoreLocation:r=ne.ignoreLocation}={}){const o=e/l.length;if(r)return o;const c=Math.abs(t-n);return s?o+c/s:c?1:o}function au(l=[],e=ne.minMatchCharLength){let n=[],t=-1,s=-1,r=0;for(let o=l.length;r<o;r+=1){let c=l[r];c&&t===-1?t=r:!c&&t!==-1&&(s=r-1,s-t+1>=e&&n.push([t,s]),t=-1)}return l[r-1]&&r-t>=e&&n.push([t,r-1]),n}const _t=32;function fu(l,e,n,{location:t=ne.location,distance:s=ne.distance,threshold:r=ne.threshold,findAllMatches:o=ne.findAllMatches,minMatchCharLength:c=ne.minMatchCharLength,includeMatches:i=ne.includeMatches,ignoreLocation:a=ne.ignoreLocation}={}){if(e.length>_t)throw new Error(Jf(_t));const f=e.length,u=l.length,_=Math.max(0,Math.min(t,u));let p=r,h=_;const b=c>1||i,g=b?Array(u):[];let k;for(;(k=l.indexOf(e,h))>-1;){let B=Ot(e,{currentLocation:k,expectedLocation:_,distance:s,ignoreLocation:a});if(p=Math.min(B,p),h=k+f,b){let L=0;for(;L<f;)g[k+L]=1,L+=1}}h=-1;let C=[],P=1,R=f+u;const D=1<<f-1;for(let B=0;B<f;B+=1){let L=0,O=R;for(;L<O;)Ot(e,{errors:B,currentLocation:_+O,expectedLocation:_,distance:s,ignoreLocation:a})<=p?L=O:R=O,O=Math.floor((R-L)/2+L);R=O;let U=Math.max(1,_-O+1),E=o?u:Math.min(_+O,u)+f,q=Array(E+2);q[E+1]=(1<<B)-1;for(let j=E;j>=U;j-=1){let V=j-1,se=n[l.charAt(V)];if(b&&(g[V]=+!!se),q[j]=(q[j+1]<<1|1)&se,B&&(q[j]|=(C[j+1]|C[j])<<1|1|C[j+1]),q[j]&D&&(P=Ot(e,{errors:B,currentLocation:V,expectedLocation:_,distance:s,ignoreLocation:a}),P<=p)){if(p=P,h=V,h<=_)break;U=Math.max(1,2*_-h)}}if(Ot(e,{errors:B+1,currentLocation:_,expectedLocation:_,distance:s,ignoreLocation:a})>p)break;C=q}const G={isMatch:h>=0,score:Math.max(.001,P)};if(b){const B=au(g,c);B.length?i&&(G.indices=B):G.isMatch=!1}return G}function uu(l){let e={};for(let n=0,t=l.length;n<t;n+=1){const s=l.charAt(n);e[s]=(e[s]||0)|1<<t-n-1}return e}class Pl{constructor(e,{location:n=ne.location,threshold:t=ne.threshold,distance:s=ne.distance,includeMatches:r=ne.includeMatches,findAllMatches:o=ne.findAllMatches,minMatchCharLength:c=ne.minMatchCharLength,isCaseSensitive:i=ne.isCaseSensitive,ignoreLocation:a=ne.ignoreLocation}={}){if(this.options={location:n,threshold:t,distance:s,includeMatches:r,findAllMatches:o,minMatchCharLength:c,isCaseSensitive:i,ignoreLocation:a},this.pattern=i?e:e.toLowerCase(),this.chunks=[],!this.pattern.length)return;const f=(_,p)=>{this.chunks.push({pattern:_,alphabet:uu(_),startIndex:p})},u=this.pattern.length;if(u>_t){let _=0;const p=u%_t,h=u-p;for(;_<h;)f(this.pattern.substr(_,_t),_),_+=_t;if(p){const b=u-_t;f(this.pattern.substr(b),b)}}else f(this.pattern,0)}searchIn(e){const{isCaseSensitive:n,includeMatches:t}=this.options;if(n||(e=e.toLowerCase()),this.pattern===e){let h={isMatch:!0,score:0};return t&&(h.indices=[[0,e.length-1]]),h}const{location:s,distance:r,threshold:o,findAllMatches:c,minMatchCharLength:i,ignoreLocation:a}=this.options;let f=[],u=0,_=!1;this.chunks.forEach(({pattern:h,alphabet:b,startIndex:g})=>{const{isMatch:k,score:C,indices:P}=fu(e,h,b,{location:s+g,distance:r,threshold:o,findAllMatches:c,minMatchCharLength:i,includeMatches:t,ignoreLocation:a});k&&(_=!0),u+=C,k&&P&&(f=[...f,...P])});let p={isMatch:_,score:_?u/this.chunks.length:1};return _&&t&&(p.indices=f),p}}class at{constructor(e){this.pattern=e}static isMultiMatch(e){return Ds(e,this.multiRegex)}static isSingleMatch(e){return Ds(e,this.singleRegex)}search(){}}function Ds(l,e){const n=l.match(e);return n?n[1]:null}class _u extends at{constructor(e){super(e)}static get type(){return"exact"}static get multiRegex(){return/^="(.*)"$/}static get singleRegex(){return/^=(.*)$/}search(e){const n=e===this.pattern;return{isMatch:n,score:n?0:1,indices:[0,this.pattern.length-1]}}}class pu extends at{constructor(e){super(e)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.*)"$/}static get singleRegex(){return/^!(.*)$/}search(e){const t=e.indexOf(this.pattern)===-1;return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}class mu extends at{constructor(e){super(e)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.*)"$/}static get singleRegex(){return/^\^(.*)$/}search(e){const n=e.startsWith(this.pattern);return{isMatch:n,score:n?0:1,indices:[0,this.pattern.length-1]}}}class du extends at{constructor(e){super(e)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.*)"$/}static get singleRegex(){return/^!\^(.*)$/}search(e){const n=!e.startsWith(this.pattern);return{isMatch:n,score:n?0:1,indices:[0,e.length-1]}}}class hu extends at{constructor(e){super(e)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.*)"\$$/}static get singleRegex(){return/^(.*)\$$/}search(e){const n=e.endsWith(this.pattern);return{isMatch:n,score:n?0:1,indices:[e.length-this.pattern.length,e.length-1]}}}class gu extends at{constructor(e){super(e)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.*)"\$$/}static get singleRegex(){return/^!(.*)\$$/}search(e){const n=!e.endsWith(this.pattern);return{isMatch:n,score:n?0:1,indices:[0,e.length-1]}}}class jl extends at{constructor(e,{location:n=ne.location,threshold:t=ne.threshold,distance:s=ne.distance,includeMatches:r=ne.includeMatches,findAllMatches:o=ne.findAllMatches,minMatchCharLength:c=ne.minMatchCharLength,isCaseSensitive:i=ne.isCaseSensitive,ignoreLocation:a=ne.ignoreLocation}={}){super(e),this._bitapSearch=new Pl(e,{location:n,threshold:t,distance:s,includeMatches:r,findAllMatches:o,minMatchCharLength:c,isCaseSensitive:i,ignoreLocation:a})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.*)"$/}static get singleRegex(){return/^(.*)$/}search(e){return this._bitapSearch.searchIn(e)}}class Hl extends at{constructor(e){super(e)}static get type(){return"include"}static get multiRegex(){return/^'"(.*)"$/}static get singleRegex(){return/^'(.*)$/}search(e){let n=0,t;const s=[],r=this.pattern.length;for(;(t=e.indexOf(this.pattern,n))>-1;)n=t+r,s.push([t,n-1]);const o=!!s.length;return{isMatch:o,score:o?0:1,indices:s}}}const on=[_u,Hl,mu,du,gu,hu,pu,jl],Vs=on.length,bu=/ +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,wu="|";function vu(l,e={}){return l.split(wu).map(n=>{let t=n.trim().split(bu).filter(r=>r&&!!r.trim()),s=[];for(let r=0,o=t.length;r<o;r+=1){const c=t[r];let i=!1,a=-1;for(;!i&&++a<Vs;){const f=on[a];let u=f.isMultiMatch(c);u&&(s.push(new f(u,e)),i=!0)}if(!i)for(a=-1;++a<Vs;){const f=on[a];let u=f.isSingleMatch(c);if(u){s.push(new f(u,e));break}}}return s})}const $u=new Set([jl.type,Hl.type]);class ku{constructor(e,{isCaseSensitive:n=ne.isCaseSensitive,includeMatches:t=ne.includeMatches,minMatchCharLength:s=ne.minMatchCharLength,ignoreLocation:r=ne.ignoreLocation,findAllMatches:o=ne.findAllMatches,location:c=ne.location,threshold:i=ne.threshold,distance:a=ne.distance}={}){this.query=null,this.options={isCaseSensitive:n,includeMatches:t,minMatchCharLength:s,findAllMatches:o,ignoreLocation:r,location:c,threshold:i,distance:a},this.pattern=n?e:e.toLowerCase(),this.query=vu(this.pattern,this.options)}static condition(e,n){return n.useExtendedSearch}searchIn(e){const n=this.query;if(!n)return{isMatch:!1,score:1};const{includeMatches:t,isCaseSensitive:s}=this.options;e=s?e:e.toLowerCase();let r=0,o=[],c=0;for(let i=0,a=n.length;i<a;i+=1){const f=n[i];o.length=0,r=0;for(let u=0,_=f.length;u<_;u+=1){const p=f[u],{isMatch:h,indices:b,score:g}=p.search(e);if(h){if(r+=1,c+=g,t){const k=p.constructor.type;$u.has(k)?o=[...o,...b]:o.push(b)}}else{c=0,r=0,o.length=0;break}}if(r){let u={isMatch:!0,score:c/r};return t&&(u.indices=o),u}}return{isMatch:!1,score:1}}}const cn=[];function yu(...l){cn.push(...l)}function an(l,e){for(let n=0,t=cn.length;n<t;n+=1){let s=cn[n];if(s.condition(l,e))return new s(l,e)}return new Pl(l,e)}const Vt={AND:"$and",OR:"$or"},fn={PATH:"$path",PATTERN:"$val"},un=l=>!!(l[Vt.AND]||l[Vt.OR]),Su=l=>!!l[fn.PATH],Cu=l=>!tt(l)&&Il(l)&&!un(l),qs=l=>({[Vt.AND]:Object.keys(l).map(e=>({[e]:l[e]}))});function zl(l,e,{auto:n=!0}={}){const t=s=>{let r=Object.keys(s);const o=Su(s);if(!o&&r.length>1&&!un(s))return t(qs(s));if(Cu(s)){const i=o?s[fn.PATH]:r[0],a=o?s[fn.PATTERN]:s[i];if(!Ze(a))throw new Error(Zf(i));const f={keyId:rn(i),pattern:a};return n&&(f.searcher=an(a,e)),f}let c={children:[],operator:r[0]};return r.forEach(i=>{const a=s[i];tt(a)&&a.forEach(f=>{c.children.push(t(f))})}),c};return un(l)||(l=qs(l)),t(l)}function Mu(l,{ignoreFieldNorm:e=ne.ignoreFieldNorm}){l.forEach(n=>{let t=1;n.matches.forEach(({key:s,norm:r,score:o})=>{const c=s?s.weight:null;t*=Math.pow(o===0&&c?Number.EPSILON:o,(c||1)*(e?1:r))}),n.score=t})}function Nu(l,e){const n=l.matches;e.matches=[],He(n)&&n.forEach(t=>{if(!He(t.indices)||!t.indices.length)return;const{indices:s,value:r}=t;let o={indices:s,value:r};t.key&&(o.key=t.key.src),t.idx>-1&&(o.refIndex=t.idx),e.matches.push(o)})}function Eu(l,e){e.score=l.score}function Tu(l,e,{includeMatches:n=ne.includeMatches,includeScore:t=ne.includeScore}={}){const s=[];return n&&s.push(Nu),t&&s.push(Eu),l.map(r=>{const{idx:o}=r,c={item:e[o],refIndex:o};return s.length&&s.forEach(i=>{i(r,c)}),c})}class $t{constructor(e,n={},t){this.options={...ne,...n},this.options.useExtendedSearch,this._keyStore=new eu(this.options.keys),this.setCollection(e,t)}setCollection(e,n){if(this._docs=e,n&&!(n instanceof wn))throw new Error(Yf);this._myIndex=n||Ol(this.options.keys,this._docs,{getFn:this.options.getFn,fieldNormWeight:this.options.fieldNormWeight})}add(e){!He(e)||(this._docs.push(e),this._myIndex.add(e))}remove(e=()=>!1){const n=[];for(let t=0,s=this._docs.length;t<s;t+=1){const r=this._docs[t];e(r,t)&&(this.removeAt(t),t-=1,s-=1,n.push(r))}return n}removeAt(e){this._docs.splice(e,1),this._myIndex.removeAt(e)}getIndex(){return this._myIndex}search(e,{limit:n=-1}={}){const{includeMatches:t,includeScore:s,shouldSort:r,sortFn:o,ignoreFieldNorm:c}=this.options;let i=Ze(e)?Ze(this._docs[0])?this._searchStringList(e):this._searchObjectList(e):this._searchLogical(e);return Mu(i,{ignoreFieldNorm:c}),r&&i.sort(o),Al(n)&&n>-1&&(i=i.slice(0,n)),Tu(i,this._docs,{includeMatches:t,includeScore:s})}_searchStringList(e){const n=an(e,this.options),{records:t}=this._myIndex,s=[];return t.forEach(({v:r,i:o,n:c})=>{if(!He(r))return;const{isMatch:i,score:a,indices:f}=n.searchIn(r);i&&s.push({item:r,idx:o,matches:[{score:a,value:r,norm:c,indices:f}]})}),s}_searchLogical(e){const n=zl(e,this.options),t=(c,i,a)=>{if(!c.children){const{keyId:u,searcher:_}=c,p=this._findMatches({key:this._keyStore.get(u),value:this._myIndex.getValueForItemAtKeyId(i,u),searcher:_});return p&&p.length?[{idx:a,item:i,matches:p}]:[]}const f=[];for(let u=0,_=c.children.length;u<_;u+=1){const p=c.children[u],h=t(p,i,a);if(h.length)f.push(...h);else if(c.operator===Vt.AND)return[]}return f},s=this._myIndex.records,r={},o=[];return s.forEach(({$:c,i})=>{if(He(c)){let a=t(n,c,i);a.length&&(r[i]||(r[i]={idx:i,item:c,matches:[]},o.push(r[i])),a.forEach(({matches:f})=>{r[i].matches.push(...f)}))}}),o}_searchObjectList(e){const n=an(e,this.options),{keys:t,records:s}=this._myIndex,r=[];return s.forEach(({$:o,i:c})=>{if(!He(o))return;let i=[];t.forEach((a,f)=>{i.push(...this._findMatches({key:a,value:o[f],searcher:n}))}),i.length&&r.push({idx:c,item:o,matches:i})}),r}_findMatches({key:e,value:n,searcher:t}){if(!He(n))return[];let s=[];if(tt(n))n.forEach(({v:r,i:o,n:c})=>{if(!He(r))return;const{isMatch:i,score:a,indices:f}=t.searchIn(r);i&&s.push({score:a,key:e,value:r,idx:o,norm:c,indices:f})});else{const{v:r,n:o}=n,{isMatch:c,score:i,indices:a}=t.searchIn(r);c&&s.push({score:i,key:e,value:r,norm:o,indices:a})}return s}}$t.version="6.6.2";$t.createIndex=Ol;$t.parseIndex=cu;$t.config=ne;$t.parseQuery=zl;yu(ku);function Us(l,e,n){const t=l.slice();return t[9]=e[n],t}function Xs(l){let e,n;return e=new GenericRow({props:{item:l[9]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Au(l){let e,n,t,s,r,o,c;const i=[{network:!0},{account:!0},{search:!0},{isSearchScreen:!0},l[2]||{}];let a={};for(let p=0;p<i.length;p+=1)a=mt(a,i[p]);e=new Ae({props:a}),e.$on("search",l[5]);let f=l[3],u=[];for(let p=0;p<f.length;p+=1)u[p]=Xs(Us(l,f,p));const _=p=>S(u[p],1,1,()=>{u[p]=null});return{c(){T(e.$$.fragment),n=M(),t=y("p"),t.innerHTML=`<span style="color:var(--theme-color-caution);">Disclaimer:</span>
			This temporary search interface does not represent the look and function of the actual search interface currently under development for beta.`,s=M(),r=y("div");for(let p=0;p<u.length;p+=1)u[p].c();o=oe(),ze(t,"font-size","12px"),w(r,"class","results no-margin")},m(p,h){A(e,p,h),m(p,n,h),m(p,t,h),m(p,s,h),m(p,r,h);for(let b=0;b<u.length;b+=1)u[b].m(r,null);v(r,o),l[6](r),c=!0},p(p,h){const b=h&4?sn(i,[i[0],i[1],i[2],i[3],Ur(p[2]||{})]):{};if(e.$set(b),h&8){f=p[3];let g;for(g=0;g<f.length;g+=1){const k=Us(p,f,g);u[g]?(u[g].p(k,h),$(u[g],1)):(u[g]=Xs(k),u[g].c(),$(u[g],1),u[g].m(o.parentNode,o))}for(le(),g=f.length;g<u.length;g+=1)_(g);re()}},i(p){if(!c){$(e.$$.fragment,p);for(let h=0;h<f.length;h+=1)$(u[h]);c=!0}},o(p){S(e.$$.fragment,p),u=u.filter(Boolean);for(let h=0;h<u.length;h+=1)S(u[h]);c=!1},d(p){I(e,p),p&&d(n),p&&d(t),p&&d(s),p&&d(r),Me(u,p),l[6](null)}}}function Iu(l){let e,n,t;return n=new ve({props:{debug:"Search",root:!0,$$slots:{default:[Au]},$$scope:{ctx:l}}}),{c(){e=y("div"),T(n.$$.fragment),w(e,"class","search svelte-5f3tva"),Y(e,"display_none",!l[0])},m(s,r){m(s,e,r),A(n,e,null),t=!0},p(s,[r]){const o={};r&4102&&(o.$$scope={dirty:r,ctx:s}),n.$set(o),r&1&&Y(e,"display_none",!s[0])},i(s){t||($(n.$$.fragment,s),t=!0)},o(s){S(n.$$.fragment,s),t=!1},d(s){s&&d(e),I(n)}}}var ot;(function(l){l.UNKNOWN="unknown",l.FAMILY="family",l.CHAIN="chain",l.NETWORK="network",l.ACCOUNT="account",l.CONTACT="contact",l.CONTRACT="contract",l.TOKEN="token",l.HOLDING="holding",l.APP="app",l.COIN="coin",l.TAG="tag",l.ICON="icon",l.IBCT="ibct",l.SNIP721="snip721",l.TXN="txn",l.OTHER="other"})(ot||(ot={}));function Ru(l,e,n){let t,s;K(l,Vr,_=>n(0,t=_)),K(l,qr,_=>n(2,s=_));let r;const o=[];let c=[];const i=(_,p)=>new $t(_,{includeScore:!0,includeMatches:!0,keys:["label",...p.map(h=>`details.${h}`)]});(async()=>{const _=await fe.read();c=[(()=>i(_.entries().map(([p,h])=>({class:ot.CHAIN,name:h.name,resourcePath:p,resource:h,details:{name:h.name,id:h.id}})),["id"]))(),(()=>i(_.entries().flatMap(([p,h])=>mn(h.coins,(b,g)=>({class:ot.COIN,name:Dt(g.extra?.coingecko_id||"Unknown"),postname:b,resourcePath:`${p}/coin.${b}`,resource:{name:Dt(g.extra?.coingecko_id||"Unknown"),pfp:h.pfp,...g},details:{symbol:b,denom:g.denom,coingecko:g.extra?.coingecko_id||""}}))),["symbol","denom"]))(),...await Promise.all([(async()=>{const p=await et.read();return i(p.entries().map(([h,b])=>{const g=[],k=new Set;for(const[,C]of _)k.add(fe.addressFor(b.pubkey,C));return g.push(...k),{class:ot.ACCOUNT,name:b.name,resourcePath:h,resource:b,details:{name:b.name,addresses:g}}}),["addresses"])})(),(async()=>{const p=await Qe.read();return i([...p.contacts()].map(([h,b])=>({class:ot.CONTACT,name:b.name,resourcePath:h,resource:b,details:{name:b.name,notes:b.notes,addresses:[..._.inFamily(b.family)].map(([,g])=>fe.bech32(b.address,g))}})),["notes"])})(),(async()=>{const p=await pl.read();return i(p.entries().map(([h,b])=>({class:ot.APP,name:b.host,resourcePath:h,resource:b,details:{host:b.host}})),[])})(),(async()=>{const p=[];for(const[,h]of _.entries())for(const[b,g]of ke(await Re.readFungibleTokens(h)))for(const[k,C]of ke(g))p.push({class:ot.TOKEN,name:C.name,resourcePath:k,resource:C,details:{spec:b,name:C.name,symbol:C.symbol,bech32:C.bech32,codehash:C.hash}});return i(p,["spec","symbol","bech32","codehash"])})()])]})();function a(_){const p=[],h=[];let b=0;for(const g of c){const k=g.search(_);k.length&&(b+=h.length,h.push(...k),p.push({top:k[0].score,hits:k}))}h.sort((g,k)=>k.score-g.score),n(1,r.innerHTML="",r),console.log(h);for(const g of h)new lt({target:r,props:{...g.item,pfpDim:32}})}const f=_=>a(_.detail);function u(_){de[_?"unshift":"push"](()=>{r=_,n(1,r)})}return l.$$.update=()=>{l.$$.dirty&1&&t&&a(t)},[t,r,s,o,a,f,u]}class Lu extends x{constructor(e){super(),ee(this,e,Ru,Iu,Q,{})}}function Ou(l){let e,n,t,s,r,o=(l[0][0]||l[0][1])+"",c,i,a=l[0][1]+"",f;return{c(){e=y("div"),n=y("div"),t=M(),s=y("div"),r=z("Step "),c=z(o),i=z(" of "),f=z(a),w(n,"class","bar svelte-1hwu1hf"),ze(n,"width",l[1]+"%"),w(e,"class","progress svelte-1hwu1hf"),Y(e,"visible",l[0][0]>0),w(s,"class","step svelte-1hwu1hf"),Y(s,"visible",l[0][0]>0)},m(u,_){m(u,e,_),v(e,n),m(u,t,_),m(u,s,_),v(s,r),v(s,c),v(s,i),v(s,f)},p(u,[_]){_&2&&ze(n,"width",u[1]+"%"),_&1&&Y(e,"visible",u[0][0]>0),_&1&&o!==(o=(u[0][0]||u[0][1])+"")&&J(c,o),_&1&&a!==(a=u[0][1]+"")&&J(f,a),_&1&&Y(s,"visible",u[0][0]>0)},i:N,o:N,d(u){u&&d(e),u&&d(t),u&&d(s)}}}function Pu(l,e,n){let t,s;return K(l,Xr,r=>n(0,s=r)),l.$$.update=()=>{l.$$.dirty&1&&n(1,t=s[0]/s[1]*100)},[s,t]}class ju extends x{constructor(e){super(),ee(this,e,Pu,Ou,Q,{})}}var Hu=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="m18 16 4-4-4-4v3h-5.06A8.974 8.974 0 0 0 8 3.95 3.005 3.005 0 0 0 5 1C3.34 1 2 2.34 2 4s1.34 3 3 3c.95 0 1.78-.45 2.33-1.14C9.23 6.9 10.6 8.77 10.92 11h-3.1C7.4 9.84 6.3 9 5 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c1.3 0 2.4-.84 2.82-2h3.1c-.32 2.23-1.69 4.1-3.58 5.14C6.78 17.45 5.95 17 5 17c-1.66 0-3 1.34-3 3s1.34 3 3 3a2.99 2.99 0 0 0 2.99-2.95A8.974 8.974 0 0 0 12.93 13H18v3z"/>
</svg>`,zu=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33A7.95 7.95 0 0 1 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z"/>
</svg>`,Fu=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M18 4v16H6V4h12m0-2H6c-1.1 0-2 .9-2 2v18h16V4c0-1.1-.9-2-2-2zm-2.5 8.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5S17 12.83 17 12s-.67-1.5-1.5-1.5z"/>
</svg>`;function Ks(l,e,n){const t=l.slice();return t[10]=e[n],t}function Ws(l,e,n){const t=l.slice();return t[10]=e[n],t}function Gs(l){let e,n,t=l[10].icon+"",s,r,o=l[10].label+"",c,i,a,f;function u(){return l[5](l[10])}return{c(){e=y("li"),n=y("span"),s=M(),r=y("span"),c=z(o),i=M(),w(n,"class","icon svelte-fhv297"),w(r,"class","text svelte-fhv297"),w(e,"class","svelte-fhv297")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=t,v(e,s),v(e,r),v(r,c),v(e,i),a||(f=te(e,"click",u),a=!0)},p(_,p){l=_},d(_){_&&d(e),a=!1,f()}}}function Ys(l){let e,n,t=l[10].icon+"",s,r,o=l[10].label+"",c,i,a,f;function u(){return l[6](l[10])}return{c(){e=y("li"),n=y("span"),s=M(),r=y("span"),c=z(o),i=M(),w(n,"class","icon svelte-fhv297"),w(r,"class","text svelte-fhv297"),w(e,"class"," svelte-fhv297")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=t,v(e,s),v(e,r),v(r,c),v(e,i),a||(f=te(e,"click",u),a=!0)},p(_,p){l=_},d(_){_&&d(e),a=!1,f()}}}function Bu(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,b,g,k=l[2],C=[];for(let D=0;D<k.length;D+=1)C[D]=Gs(Ws(l,k,D));let P=l[1],R=[];for(let D=0;D<P.length;D+=1)R[D]=Ys(Ks(l,P,D));return{c(){e=y("div"),n=y("div"),t=M(),s=y("div"),r=y("div"),o=M(),c=y("div"),i=y("div"),a=y("ul");for(let D=0;D<C.length;D+=1)C[D].c();f=M(),u=y("hr"),_=M(),p=y("div"),h=y("ul");for(let D=0;D<R.length;D+=1)R[D].c();w(n,"class","backdrop svelte-fhv297"),w(r,"class","close icon svelte-fhv297"),w(a,"class","session svelte-fhv297"),w(u,"class","svelte-fhv297"),w(i,"class","top svelte-fhv297"),w(h,"class","items svelte-fhv297"),w(p,"class","main svelte-fhv297"),w(c,"class","menu svelte-fhv297"),w(s,"class","bar svelte-fhv297"),w(e,"class","side-menu svelte-fhv297"),Y(e,"collapsed",!l[0])},m(D,G){m(D,e,G),v(e,n),v(e,t),v(e,s),v(s,r),r.innerHTML=Kr,v(s,o),v(s,c),v(c,i),v(i,a);for(let B=0;B<C.length;B+=1)C[B].m(a,null);v(i,f),v(i,u),v(c,_),v(c,p),v(p,h);for(let B=0;B<R.length;B+=1)R[B].m(h,null);b||(g=[te(n,"click",l[3]),te(r,"click",l[4])],b=!0)},p(D,[G]){if(G&4){k=D[2];let B;for(B=0;B<k.length;B+=1){const L=Ws(D,k,B);C[B]?C[B].p(L,G):(C[B]=Gs(L),C[B].c(),C[B].m(a,null))}for(;B<C.length;B+=1)C[B].d(1);C.length=k.length}if(G&2){P=D[1];let B;for(B=0;B<P.length;B+=1){const L=Ks(D,P,B);R[B]?R[B].p(L,G):(R[B]=Ys(L),R[B].c(),R[B].m(h,null))}for(;B<R.length;B+=1)R[B].d(1);R.length=P.length}G&1&&Y(e,"collapsed",!D[0])},i:N,o:N,d(D){D&&d(e),Me(C,D),Me(R,D),b=!1,nt(g)}}}function Du(l,e,n){let t,s;K(l,wt,_=>n(7,t=_)),K(l,dt,_=>n(0,s=_)),he("page");function r(_){be(dt,s=!1,s),_===t.activeThread.id?t.activeThread.reset():t.activateThread(_)}return[s,[{label:"Accounts",icon:zu,click(){r(Je.ACCOUNTS)}},{label:"Networks",icon:Hu,click(){r(Je.NETWORKS)}}],[{label:"Log out",icon:Fu,async click(){await Wr(),globalThis.close()}}],()=>be(dt,s=!1,s),()=>be(dt,s=!1,s),_=>_.click(),_=>_.click()]}class Vu extends x{constructor(e){super(),ee(this,e,Du,Bu,Q,{})}}function qu(l){let e;return{c(){e=z("[...]")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function Uu(l){let e=(l[1]/1e3).toFixed(2)+"",n,t;return{c(){n=z(e),t=z(" seconds")},m(s,r){m(s,n,r),m(s,t,r)},p(s,r){r&2&&e!==(e=(s[1]/1e3).toFixed(2)+"")&&J(n,e)},d(s){s&&d(n),s&&d(t)}}}function Xu(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,b,g,k,C,P,R,D,G,B,L,O,U,E,q,H,j,V,se,Z,ie,ue,ce,ae,_e,F,X,pe,Be,Ie,We,De,Pe,je,Ue,Ge,ft,Xe,xe;function rt(Se,Ce){return Se[1]?Uu:qu}let Ye=rt(l),ye=Ye(l);return{c(){e=y("div"),n=y("div"),t=M(),s=y("div"),r=y("div"),o=M(),c=y("div"),i=y("div"),a=y("div"),f=y("div"),u=M(),_=y("div"),_.textContent=`v${Gr}`,p=M(),h=y("div"),b=y("div"),b.textContent="Network Status",g=M(),k=y("div"),C=z(l[2]),P=M(),R=y("div"),D=y("div"),D.textContent="Chain Id",G=M(),B=y("div"),L=y("span"),O=z(l[4]),U=M(),E=y("div"),q=y("div"),q.textContent="Current Provider",H=M(),j=y("div"),V=y("span"),se=z(l[3]),Z=M(),ie=y("div"),ue=y("div"),ue.textContent="Current Block Height",ce=M(),ae=y("div"),_e=z("#"),F=z(l[0]),X=M(),pe=y("div"),Be=y("div"),Be.textContent="Average Block Time",Ie=M(),We=y("div"),ye.c(),De=M(),Pe=y("div"),je=y("div"),je.textContent="Last Block Seen",Ue=M(),Ge=y("div"),ft=z(l[5]),w(n,"class","backdrop svelte-1y4wjl5"),w(r,"class","close icon svelte-1y4wjl5"),w(a,"class","app svelte-1y4wjl5"),w(b,"class","name svelte-1y4wjl5"),w(k,"class","value svelte-1y4wjl5"),w(h,"class","info svelte-1y4wjl5"),w(D,"class","name svelte-1y4wjl5"),w(L,"class","font-family_mono svelte-1y4wjl5"),w(B,"class","value svelte-1y4wjl5"),w(R,"class","info svelte-1y4wjl5"),w(q,"class","name svelte-1y4wjl5"),w(V,"class","font-family_mono svelte-1y4wjl5"),w(j,"class","value svelte-1y4wjl5"),w(E,"class","info svelte-1y4wjl5"),w(ue,"class","name svelte-1y4wjl5"),w(ae,"class","value svelte-1y4wjl5"),w(ie,"class","info svelte-1y4wjl5"),w(Be,"class","name svelte-1y4wjl5"),w(We,"class","value svelte-1y4wjl5"),w(pe,"class","info svelte-1y4wjl5"),w(je,"class","name svelte-1y4wjl5"),w(Ge,"class","value svelte-1y4wjl5"),w(Pe,"class","info svelte-1y4wjl5"),w(i,"class","main svelte-1y4wjl5"),w(c,"class","menu svelte-1y4wjl5"),w(s,"class","bar svelte-1y4wjl5"),w(e,"class","vendor-menu svelte-1y4wjl5"),Y(e,"collapsed",!l[6])},m(Se,Ce){m(Se,e,Ce),v(e,n),v(e,t),v(e,s),v(s,r),v(s,o),v(s,c),v(c,i),v(i,a),v(a,f),v(a,u),v(a,_),v(i,p),v(i,h),v(h,b),v(h,g),v(h,k),v(k,C),v(i,P),v(i,R),v(R,D),v(R,G),v(R,B),v(B,L),v(L,O),v(i,U),v(i,E),v(E,q),v(E,H),v(E,j),v(j,V),v(V,se),v(i,Z),v(i,ie),v(ie,ue),v(ie,ce),v(ie,ae),v(ae,_e),v(ae,F),v(i,X),v(i,pe),v(pe,Be),v(pe,Ie),v(pe,We),ye.m(We,null),v(i,De),v(i,Pe),v(Pe,je),v(Pe,Ue),v(Pe,Ge),v(Ge,ft),Xe||(xe=[te(n,"click",l[8]),te(r,"click",l[9])],Xe=!0)},p(Se,[Ce]){Ce&4&&J(C,Se[2]),Ce&16&&J(O,Se[4]),Ce&8&&J(se,Se[3]),Ce&1&&J(F,Se[0]),Ye===(Ye=rt(Se))&&ye?ye.p(Se,Ce):(ye.d(1),ye=Ye(Se),ye&&(ye.c(),ye.m(We,null))),Ce&32&&J(ft,Se[5]),Ce&64&&Y(e,"collapsed",!Se[6])},i:N,o:N,d(Se){Se&&d(e),ye.d(),Xe=!1,nt(xe)}}}function Ku(l,e,n){let t,s,r;K(l,Ct,g=>n(11,t=g)),K(l,Yr,g=>n(7,s=g)),K(l,Qt,g=>n(6,r=g));let o="",c=0,i=0,a="Loading",f="",u="";hn({blockInfo(g){if(t===g.chain){n(2,a="Online"),n(4,u=g.header.chain_id),n(0,o=g.header.height),c=Date.now();const k=g.recents;if(k.length>1){const C=[];for(let P=1;P<k.length;P++)C.push(k[P]-k[P-1]);n(1,i=C.reduce((P,R)=>P+R,0)/C.length)}}}});let _="[...]";const p=window.setInterval(()=>{if(c>0){const g=Date.now()-c;n(5,_=`${Math.round(g/1e3)} seconds ago`)}},500);Tt(()=>{clearInterval(p)});const h=()=>be(Qt,r=!1,r),b=()=>be(Qt,r=!1,r);return l.$$.update=()=>{l.$$.dirty&128&&s&&(n(0,o="[...]"),c=0,n(1,i=0),n(2,a="Connecting"),n(3,f=new URL(s.grpcWebUrl).host),n(4,u=""))},[o,i,a,f,u,_,r,s,h,b]}class Wu extends x{constructor(e){super(),ee(this,e,Ku,Xu,Q,{})}}function Zs(l,e,n){const t=l.slice();return t[4]=e[n],t[6]=n,t}function Gu(l){let e,n,t=l[4].error?.stack+"",s;return{c(){e=y("pre"),n=y("code"),s=z(t),w(e,"class","error-stack svelte-1k68c03")},m(r,o){m(r,e,o),v(e,n),v(n,s)},p(r,o){o&1&&t!==(t=r[4].error?.stack+"")&&J(s,t)},d(r){r&&d(e)}}}function Yu(l){let e=l[4].text+"",n;return{c(){n=z(e)},m(t,s){m(t,n,s)},p(t,s){s&1&&e!==(e=t[4].text+"")&&J(n,e)},d(t){t&&d(n)}}}function Zu(l){let e;function n(r,o){return r[4].text?Yu:Gu}let t=n(l),s=t(l);return{c(){s.c(),e=M()},m(r,o){s.m(r,o),m(r,e,o)},p(r,o){t===(t=n(r))&&s?s.p(r,o):(s.d(1),s=t(r),s&&(s.c(),s.m(e.parentNode,e)))},d(r){s.d(r),r&&d(e)}}}function Js(l){let e,n;function t(){return l[2](l[4])}return e=new Sl({props:{icon:"error",title:l[4].title,dismissable:!0,rootStyle:`
				position: absolute;
				width: calc(100% - 40px);
				box-sizing: border-box;
				margin-left: 20px;
				margin-right: 20px;
				bottom: ${l[6]*60+20}px;
				box-shadow: 0 0 40px #000;
			`,$$slots:{default:[Zu]},$$scope:{ctx:l}}}),e.$on("dismiss",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r&1&&(o.title=l[4].title),r&129&&(o.$$scope={dirty:r,ctx:l}),e.$set(o)},i(s){n||($(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function Ju(l){let e,n,t,s,r=l[0],o=[];for(let i=0;i<r.length;i+=1)o[i]=Js(Zs(l,r,i));const c=i=>S(o[i],1,1,()=>{o[i]=null});return{c(){e=y("div"),n=y("div"),t=M();for(let i=0;i<o.length;i+=1)o[i].c();w(n,"class","backdrop svelte-1k68c03"),w(e,"class","notifications svelte-1k68c03"),Y(e,"hidden",!l[0].length)},m(i,a){m(i,e,a),v(e,n),v(e,t);for(let f=0;f<o.length;f+=1)o[f].m(e,null);s=!0},p(i,[a]){if(a&3){r=i[0];let f;for(f=0;f<r.length;f+=1){const u=Zs(i,r,f);o[f]?(o[f].p(u,a),$(o[f],1)):(o[f]=Js(u),o[f].c(),$(o[f],1),o[f].m(e,null))}for(le(),f=r.length;f<o.length;f+=1)c(f);re()}a&1&&Y(e,"hidden",!i[0].length)},i(i){if(!s){for(let a=0;a<r.length;a+=1)$(o[a]);s=!0}},o(i){o=o.filter(Boolean);for(let a=0;a<o.length;a+=1)S(o[a]);s=!1},d(i){i&&d(e),Me(o,i)}}}function Qu(l,e,n){let t=[];const s=Zr(c=>{t.push(c),n(0,t)});function r(c){const i=t.indexOf(c);i!==-1&&(t.splice(i,1),n(0,t))}return Tt(()=>{s()}),[t,r,c=>r(c)]}class xu extends x{constructor(e){super(),ee(this,e,Qu,Ju,Q,{})}}class _n{constructor(e,n){$e(this,"_dc_creator");$e(this,"_yc_component");$e(this,"_h_props");$e(this,"_h_context");$e(this,"_dm_page");$e(this,"_si_page");$e(this,"_h_events",{});$e(this,"_sr_path");$e(this,"_sx_pattern");this._kt_parent=n,{creator:this._dc_creator,props:this._h_props={},context:this._h_context={}}=e,this._si_page=crypto.randomUUID();const t=Et("div"),s=new Map(ke({...this._h_context,page:this}));if(this._yc_component=new this._dc_creator({target:t,props:{...this._h_props,k_page:this},context:s}),e.events)for(const[o,c]of ke(e.events))this._yc_component.$on(o,c);const r=t.firstElementChild;if(!r)throw new Error(`No DOM element was created during page component spawning using: ${JSON.stringify(e)}`);this._dm_page=r}get id(){return this._si_page}get index(){return this.thread.history.length}get thread(){return this._kt_parent}get creator(){return this._dc_creator}get component(){return this._yc_component}get props(){return this._h_props}get dom(){return this._dm_page}equivalent(e){return e.creator===this.creator&&!dl(e.props||{},this.props)}peak(){return this._kt_parent.peak()}push(e){return this._kt_parent.push(e,this)}pop(e){return this._kt_parent.pop(e||{},this)}jump(e,n){return this._kt_parent.jump(e,n||{},this)}on(e){for(const[n,t]of ke(e))t&&(this._h_events[n]=this._h_events[n]||[]).push(t)}async fire(e,n){const t=this._h_events[e];t&&await Promise.all(t.map(s=>s(...n||[])))}destroy(){this._yc_component.$destroy()}reset(){this._kt_parent.reset()}}class e_{constructor(e,n,t){$e(this,"_dm_thread");$e(this,"_a_history",[]);this._si_thread=e,this._gc_default=n,this._k_navigator=t,this._dm_thread=Et("div",{class:"thread","data-thread-id":this._si_thread,style:"z-index: 100;"})}get id(){return this._si_thread}get default(){return this._gc_default}get history(){return this._a_history}get page(){return this._a_history[0]}get dom(){return this._dm_thread}_place(e){const n=new _n({...e,context:{...this._k_navigator.context,...e.context}},this);return this._dm_thread.appendChild(n.dom),this._a_history.unshift(n),n}reset(e=this.default,n){const{keepTop:t}=n||{},s=this._a_history;for(let o=t?1:0;o<s.length;o++)s[o].component.$destroy();s.length=0;const r=this._place(e);return this._k_navigator.after_reset(this,r,n||{}),r}peak(){return this._a_history[1]}push(e,n){if(n!==this.page)throw new Error("Prevented inactive page from pushing new screen");if(!this._k_navigator.before_push(e,n,this))throw new Error("Prevented inactive thread from pushing new screen");const t=this._place(e);return this._k_navigator.after_push(this,n,t),t}pop(e,n){if(n!==this.page)throw new Error("Prevented inactive page from popping active screen");if(this._a_history.length<2)throw new Error("Failed to pop empty history");if(!this._k_navigator.before_pop(e,this._a_history[1],n,this))throw new Error("Prevented inactive thread from popping active screen");this._a_history.shift();const t=this.page;return this._k_navigator.after_pop(this,n,t,e),t}jump(e,n,t){if(t!==this.page)throw new Error("Prevented inactive page from jumping to screen");if(!this._k_navigator.before_jump(n,e,t,this))throw new Error("Prevented inactive thread from jumping to screen");const s=this._a_history[1];if(!n.force&&s?.equivalent(e))return this.pop({},t);const r=new _n(e,this);return this.reset(),Fl(r.dom,t.dom,1),this._k_navigator.after_jump(this,t,r,n).then(()=>{try{t.destroy()}catch{console.warn(`Failed to destroy stale component belonging to page: ${t.creator.name+""}`),t.dom.remove()}}),r}hide(){this._dm_thread.style.display="none"}show(){this._dm_thread.style.display="initial"}}function Fl(l,e,n){const t=+l.style.zIndex,s=t+n;l.style.zIndex=t+"",e.style.zIndex=s+""}class t_{constructor(e){$e(this,"_h_threads",{});$e(this,"_h_thread_spawners");$e(this,"_dm_threads");$e(this,"_dm_buffer",Et("div"));$e(this,"_g_hooks");$e(this,"_h_context");$e(this,"_si_thread",Je.DEFAULT);$e(this,"_c_thread_z",200);this._gc_navigator=e,{container:this._dm_threads,threads:this._h_thread_spawners,hooks:this._g_hooks,context:this._h_context={}}=e,this._new_thread(Je.DEFAULT)}get context(){return this._h_context}_new_thread(e,n={},t={}){const s=this._h_thread_spawners[e];if(!s)throw new Error(`Navigator has no such thread registered: '${e}'`);const r=new e_(e,s(n,t),this);return this._h_threads[e]=r,this._dm_threads.appendChild(r.dom),r.reset({...r.default,props:{...r.default.props,...n}}),r}get activeThread(){return this._h_threads[this._si_thread]}get activePage(){return this.activeThread.page}before_push(e,n,t){return!(this.activeThread!==t||this._g_hooks.before_change?.(t,n,"push")===!1||this._g_hooks.before_push?.(t,n,e)===!1)}before_pop(e,n,t,s){return!(this.activeThread!==s||this._g_hooks.before_change?.(s,t,"pop")===!1||this._g_hooks.before_pop?.(s,t,n,e)===!1)}before_jump(e,n,t,s){return!(this.activeThread!==s||this._g_hooks.before_change?.(s,t,"jump")===!1||this._g_hooks.before_jump?.(s,t,n,e)===!1)}async before_switch(e,n){if(this._g_hooks.before_change?.(e,e.page,"switch")===!1)throw new Error("Cannot stop thread switch");await this._g_hooks.before_switch?.(e,n)}async after_push(e,n,t){const s=await this._g_hooks.after_push?.(e,n,t);await this._g_hooks.after_change?.(e,n,t,"push",s||{})}async after_pop(e,n,t,s){const r=await this._g_hooks.after_pop?.(e,n,t,s);await this._g_hooks.after_change?.(e,n,t,"pop",r||{})}async after_jump(e,n,t,s){const r=await this._g_hooks.after_jump?.(e,n,t,s);await this._g_hooks.after_change?.(e,n,t,"jump",r||{})}async after_reset(e,n,t){const s=await this._g_hooks.after_reset?.(e,n,t);await this._g_hooks.after_change?.(e,null,n,"reset",s||{})}async after_switch(e,n){await this._g_hooks.after_switch?.(e,n)}async activateThread(e,n={}){const t=this.activeThread,s=this.activePage;let r=this._h_threads[e];if(e!==this._si_thread){if(await this.before_switch(t,e),this._si_thread,!r)r=this._new_thread(e,n);else if(dl(r.default.props||{},n)){const o=new _n({...r.default,props:n,context:this._h_context},r);r.reset(o,{keepTop:!0}),Fl(s.dom,o.dom,-1)}return this._si_thread=e,this.activeThread.show(),this.activeThread.dom.style.zIndex=this._c_thread_z+++"",await this.after_switch(t,r),!0}return!1}}function n_(l){let e,n,t={ctx:l,current:null,token:null,hasCatch:!1,pending:o_,then:l_,catch:s_,value:25,blocks:[,,,]};return Le(Ht.getRootKey(),t),{c(){e=oe(),t.block.c()},m(s,r){m(s,e,r),t.block.m(s,t.anchor=r),t.mount=()=>e.parentNode,t.anchor=e,n=!0},p(s,r){l=s,Oe(t,l,r)},i(s){n||($(t.block),n=!0)},o(s){for(let r=0;r<3;r+=1){const o=t.blocks[r];S(o)}n=!1},d(s){s&&d(e),t.block.d(s),t.token=null,t=null}}}function s_(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function l_(l){let e,n,t=l[25]&&r_();return{c(){t&&t.c(),e=oe()},m(s,r){t&&t.m(s,r),m(s,e,r),n=!0},p:N,i(s){n||($(t),n=!0)},o(s){S(t),n=!1},d(s){t&&t.d(s),s&&d(e)}}}function r_(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h;return e=new Af({}),t=new qf({}),r=new Lu({}),c=new Wu({}),a=new Vu({}),u=new Of({}),p=new xu({}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),T(c.$$.fragment),i=M(),T(a.$$.fragment),f=M(),T(u.$$.fragment),_=M(),T(p.$$.fragment)},m(b,g){A(e,b,g),m(b,n,g),A(t,b,g),m(b,s,g),A(r,b,g),m(b,o,g),A(c,b,g),m(b,i,g),A(a,b,g),m(b,f,g),A(u,b,g),m(b,_,g),A(p,b,g),h=!0},i(b){h||($(e.$$.fragment,b),$(t.$$.fragment,b),$(r.$$.fragment,b),$(c.$$.fragment,b),$(a.$$.fragment,b),$(u.$$.fragment,b),$(p.$$.fragment,b),h=!0)},o(b){S(e.$$.fragment,b),S(t.$$.fragment,b),S(r.$$.fragment,b),S(c.$$.fragment,b),S(a.$$.fragment,b),S(u.$$.fragment,b),S(p.$$.fragment,b),h=!1},d(b){I(e,b),b&&d(n),I(t,b),b&&d(s),I(r,b),b&&d(o),I(c,b),b&&d(i),I(a,b),b&&d(f),I(u,b),b&&d(_),I(p,b)}}}function o_(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function i_(l){let e,n,t,s,r,o,c,i,a;const f=l[7].default,u=Ut(f,l,l[6],null);c=new ju({});let _=l[3]&&n_(l);return{c(){e=y("main"),n=y("div"),t=M(),s=y("div"),r=M(),u&&u.c(),o=M(),T(c.$$.fragment),i=M(),_&&_.c(),w(n,"class","content threads svelte-m1b0zj"),w(s,"class","content exitting svelte-m1b0zj"),w(e,"class","viewport svelte-m1b0zj")},m(p,h){m(p,e,h),v(e,n),l[8](n),v(e,t),v(e,s),l[9](s),v(e,r),u&&u.m(e,null),v(e,o),A(c,e,null),v(e,i),_&&_.m(e,null),l[10](e),a=!0},p(p,[h]){u&&u.p&&(!a||h&64)&&Xt(u,f,p,p[6],a?Wt(f,p[6],h,null):Kt(p[6]),null),p[3]&&_.p(p,h)},i(p){a||($(u,p),$(c.$$.fragment,p),$(_),a=!0)},o(p){S(u,p),S(c.$$.fragment,p),S(_),a=!1},d(p){p&&d(e),l[8](null),l[9](null),u&&u.d(p),I(c),_&&_.d(),l[10](null)}}}function c_(l,e,n){let t,s,r,o,c,i,a,f,u;K(l,wt,E=>n(11,t=E)),K(l,Pt,E=>n(12,s=E)),K(l,jt,E=>n(13,r=E)),K(l,pt,E=>n(14,o=E)),K(l,yt,E=>n(15,c=E)),K(l,tn,E=>n(16,i=E)),K(l,it,E=>n(17,a=E)),K(l,Ct,E=>n(18,f=E)),K(l,Fe,E=>n(19,u=E));let{$$slots:_={},$$scope:p}=e,{page:h}=e;const b=h;let{mode:g}=e;const k=g==="flow",C=g==="app";let P,R,D;const G=Object.fromEntries(Jr().entries());async function B(E,q=!1){return await xr(0),new Promise(H=>{E.addEventListener("transitionend",function(V){V.propertyName==="transform"&&(E.classList.add("slid"),H())}),E.style.transform=`translateX(${q?"0px":"var(--app-window-width)"})`})}Qr(async()=>{const E={container:R,context:G,threads:{default:()=>({creator:hl})},hooks:{before_change(H,j,V){j.fire("blur")},after_push(H,j,V){Tn().then(()=>{B(V.dom,!0)})},after_pop(H,j,V,se){V.fire("restore"),se.bypassAnimation||(j.dom.style.transform="translateX(var(--app-window-width))")},after_change(H,j,V,se,Z={}){be(jt,r=V,r),be(Pt,s=H,s),V.fire("focus")},async before_switch(){try{await Promise.all([u||xt(Fe,!0),fe.read().then(H=>be(Ct,f=ke(H.raw)[0][0],f)),a||xt(it,!0),St.read().then(H=>be(tn,i=ke(H.raw)[0][0],i)),c||xt(yt,!0),et.read().then(H=>be(pt,o=ke(H.raw)[0][0],o))]),delete this.before_switch}catch{}},async after_switch(H,j){be(jt,r=j.page,r),be(Pt,s=j,s),j.page.fire("focus"),await Tn(),await B(j.page.dom,!0)}}};k?E.threads={default:()=>b}:C&&(E.threads=fl(Tl,(H,j)=>({[H]:V=>({creator:j,props:V})})),E.threads.init=(H,j)=>({...b,props:{...b.props,...H},context:{...b.context,...j}}));const q=new t_(E);be(wt,t=q,t)});function L(E){de[E?"unshift":"push"](()=>{R=E,n(1,R)})}function O(E){de[E?"unshift":"push"](()=>{D=E,n(2,D)})}function U(E){de[E?"unshift":"push"](()=>{P=E,n(0,P)})}return l.$$set=E=>{"page"in E&&n(4,h=E.page),"mode"in E&&n(5,g=E.mode),"$$scope"in E&&n(6,p=E.$$scope)},[P,R,D,C,h,g,p,_,L,O,U]}class v_ extends x{constructor(e){super(),ee(this,e,c_,i_,Q,{page:4,mode:5})}}function Qs(l){let e,n,t,s;return{c(){e=y("div"),n=z(l[1]),w(e,"class","validation-message")},m(r,o){m(r,e,o),v(e,n),s=!0},p(r,o){(!s||o&2)&&J(n,r[1])},i(r){s||(Ke(()=>{t||(t=Ve(e,ge,{duration:300},!0)),t.run(1)}),s=!0)},o(r){t||(t=Ve(e,ge,{duration:300},!1)),t.run(0),s=!1},d(r){r&&d(e),r&&t&&t.end()}}}function a_(l){let e,n,t,s,r,o,c=l[1]&&Qs(l);return{c(){e=y("input"),n=M(),c&&c.c(),t=oe(),w(e,"type","password"),w(e,"name","password"),e.autofocus=!0,w(e,"placeholder","Password"),Y(e,"invalid",l[1])},m(i,a){m(i,e,a),Te(e,l[0]),m(i,n,a),c&&c.m(i,a),m(i,t,a),s=!0,e.focus(),r||(o=te(e,"input",l[4]),r=!0)},p(i,a){a&1&&e.value!==i[0]&&Te(e,i[0]),a&2&&Y(e,"invalid",i[1]),i[1]?c?(c.p(i,a),a&2&&$(c,1)):(c=Qs(i),c.c(),$(c,1),c.m(t.parentNode,t)):c&&(le(),S(c,1,1,()=>{c=null}),re())},i(i){s||($(c),s=!0)},o(i){S(c),s=!1},d(i){i&&d(e),i&&d(n),c&&c.d(i),i&&d(t),r=!1,o()}}}function f_(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h;i=new me({props:{key:"password",name:"",$$slots:{default:[a_]},$$scope:{ctx:l}}}),f=new ct({props:{confirm:["Unlock",l[3]]}});function b(k){l[5](k)}let g={hide:!0};return l[2].items!==void 0&&(g.items=l[2].items),_=new bl({props:g}),de.push(()=>Ne(_,"items",b)),{c(){e=y("div"),e.innerHTML='<img width="96" src="/media/vendor/logo-96px.png" srcset="/media/vendor/logo-96px.png 1x, /media/vendor/logo-192px.png 2x" alt="StarShell"/>',n=M(),t=y("div"),t.innerHTML='<img src="/media/vendor/title.svg" alt=""/>',s=M(),r=y("div"),r.textContent="\xA0",o=M(),c=y("div"),T(i.$$.fragment),a=M(),T(f.$$.fragment),u=M(),T(_.$$.fragment),w(e,"class","logo"),w(t,"class","title"),w(r,"class","line svelte-wsweyo"),w(c,"class","form flex-rows")},m(k,C){m(k,e,C),m(k,n,C),m(k,t,C),m(k,s,C),m(k,r,C),m(k,o,C),m(k,c,C),A(i,c,null),m(k,a,C),A(f,k,C),m(k,u,C),A(_,k,C),h=!0},p(k,C){const P={};C&1027&&(P.$$scope={dirty:C,ctx:k}),i.$set(P);const R={};!p&&C&4&&(p=!0,R.items=k[2].items,Ee(()=>p=!1)),_.$set(R)},i(k){h||($(i.$$.fragment,k),$(f.$$.fragment,k),$(_.$$.fragment,k),h=!0)},o(k){S(i.$$.fragment,k),S(f.$$.fragment,k),S(_.$$.fragment,k),h=!1},d(k){k&&d(e),k&&d(n),k&&d(t),k&&d(s),k&&d(r),k&&d(o),k&&d(c),I(i),k&&d(a),I(f,k),k&&d(u),I(_,k)}}}function u_(l){let e,n,t;return n=new ve({props:{debug:"Authenticate",classNames:"welcome",$$slots:{default:[f_]},$$scope:{ctx:l}}}),{c(){e=M(),T(n.$$.fragment)},m(s,r){m(s,e,r),A(n,s,r),t=!0},p(s,[r]){const o={};r&1031&&(o.$$scope={dirty:r,ctx:s}),n.$set(o)},i(s){t||($(n.$$.fragment,s),t=!0)},o(s){S(n.$$.fragment,s),t=!1},d(s){s&&d(e),I(n,s)}}}function __(l,e,n){const t=he("completed");let s="",r="",o=!1,c=0,i=new gl;function a(p){n(2,i=i.event(p,Date.now()-c))}async function f(p=!1){if(o)return 1;o=!0;const h=()=>(o=!1,1);n(1,r=""),c=Date.now(),a("Estimating time to complete");{const b=window.performance.now();await Ht.deriveRootBits(el,tl,1/50);const k=window.performance.now()-b,C=2*(k*50);a(`About ${(C/1e3).toFixed(1)} seconds`)}try{await sl(s,p,a)}catch(b){if(b instanceof eo)n(1,r="No accounts detected");else if(b instanceof nl)n(1,r="Invalid passphrase");else{if(b instanceof to)return n(1,r="Vault is partially corrupted; attempting recovery..."),await f(!0);p?n(1,r=`Recovery failed. Vault may be irreparably corrupted.
${b.message}`):b instanceof no?n(1,r=`Vault appears to be irreparably corrupted.
${b.message}`):n(1,r=`Unknown error occurred: ${b.stack||b.message}`)}return h()}return t&&t(!0),h()}function u(){s=this.value,n(0,s)}function _(p){l.$$.not_equal(i.items,p)&&(i.items=p,n(2,i))}return[s,r,i,f,u,_]}class $_ extends x{constructor(e){super(),ee(this,e,__,u_,Q,{})}}const k_=dn(document,"section#dom-log"),p_=dn(document,"#dom-log-list");function y_(l){console.log(l),p_?.append(Et("li",{},[Et("pre",{},[l])]))}function m_(l){let e,n="&nbsp;";return{c(){e=y("div"),w(e,"class","no-margin horizon svelte-12kmiz9")},m(t,s){m(t,e,s),e.innerHTML=n},p:N,i:N,o:N,d(t){t&&d(e)}}}class d_ extends x{constructor(e){super(),ee(this,e,null,m_,Q,{})}}function h_(l){let e,n,t,s,r,o,c,i,a,f,u,_;return e=new xs({props:{dim:96}}),t=new wl({}),r=new d_({}),u=new ct({props:{confirm:["Get Started"],contd:{creator:vl}}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),c=y("div"),c.innerHTML=`<div>Welcome to the beta program.</div> 
		<div>Thank for you being a tester!</div>`,i=M(),a=y("p"),f=M(),T(u.$$.fragment),w(c,"class","large")},m(p,h){A(e,p,h),m(p,n,h),A(t,p,h),m(p,s,h),A(r,p,h),m(p,o,h),m(p,c,h),m(p,i,h),m(p,a,h),m(p,f,h),A(u,p,h),_=!0},p:N,i(p){_||($(e.$$.fragment,p),$(t.$$.fragment,p),$(r.$$.fragment,p),$(u.$$.fragment,p),_=!0)},o(p){S(e.$$.fragment,p),S(t.$$.fragment,p),S(r.$$.fragment,p),S(u.$$.fragment,p),_=!1},d(p){I(e,p),p&&d(n),I(t,p),p&&d(s),I(r,p),p&&d(o),p&&d(c),p&&d(i),p&&d(a),p&&d(f),I(u,p)}}}function g_(l){let e,n;return e=new ve({props:{root:!0,classNames:"preregister",$$slots:{default:[h_]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&1&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||($(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}class S_ extends x{constructor(e){super(),ee(this,e,null,g_,Q,{})}}export{Hc as A,hl as B,d_ as H,S_ as P,wl as S,Je as T,v_ as a,y_ as b,$_ as c,k_ as d};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
