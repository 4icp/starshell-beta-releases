import{b as u,d as Z,a as G,P as Q,c as Y}from"../../PreRegister.9bd8cc11.js";import{S as H,i as P,s as O,a as B,c as v,m as y,t as k,b as S,d as C,bs as D,ag as ee,w as b,h as A,j as g,k as p,T as $,a9 as V,ah as te,n as d,ac as ne,W as se,b_ as oe,b$ as ae,c0 as ie,z as m,a7 as re,U as le,x as R,Z as ce,_ as w,A as E,c1 as fe,V as M,L as ue}from"../../web-resource-cache.a5955fee.js";function W(n,e,s){const t=n.slice();return t[12]=e[s],t}function pe(n){return{c:m,m,p:m,d:m}}function de(n){let e,s=n[11],t=[];for(let o=0;o<s.length;o+=1)t[o]=j(W(n,s,o));return{c(){for(let o=0;o<t.length;o+=1)t[o].c();e=re()},m(o,i){for(let a=0;a<t.length;a+=1)t[a].m(o,i);p(o,e,i)},p(o,i){if(i&16){s=o[11];let a;for(a=0;a<s.length;a+=1){const r=W(o,s,a);t[a]?t[a].p(r,i):(t[a]=j(r),t[a].c(),t[a].m(e.parentNode,e))}for(;a<t.length;a+=1)t[a].d(1);t.length=s.length}},d(o){le(t,o),o&&d(e)}}}function j(n){let e,s,t,o,i=n[12]+"",a,r;return{c(){e=g("div"),s=g("input"),t=b(" Always allow "),o=g("code"),a=b(i),r=b(` to see StarShell.
			`),R(s,"type","checkbox")},m(c,_){p(c,e,_),$(e,s),$(e,t),$(e,o),$(o,a),$(e,r)},p:m,d(c){c&&d(e)}}}function me(n){return{c:m,m,p:m,d:m}}function _e(n){let e,s=n[2].host+"",t,o,i,a,r,c,_,q,I,L,h={ctx:n,current:null,token:null,hasCatch:!1,pending:me,then:de,catch:pe,value:11};return ee(n[4](),h),{c(){e=b("Allow "),t=b(s),o=b(` to see you have StarShell installed?

	`),h.block.c(),i=A(),a=g("button"),r=b("Allow"),c=A(),_=g("button"),q=b("Cancel"),a.disabled=n[1],_.disabled=n[1]},m(l,f){p(l,e,f),p(l,t,f),p(l,o,f),h.block.m(l,h.anchor=f),h.mount=()=>i.parentNode,h.anchor=i,p(l,i,f),p(l,a,f),$(a,r),p(l,c,f),p(l,_,f),$(_,q),I||(L=[V(a,"click",n[7]),V(_,"click",n[8])],I=!0)},p(l,f){n=l,te(h,n,f),f&2&&(a.disabled=n[1]),f&2&&(_.disabled=n[1])},d(l){l&&d(e),l&&d(t),l&&d(o),h.block.d(l),h.token=null,h=null,l&&d(i),l&&d(a),l&&d(c),l&&d(_),I=!1,ne(L)}}}function he(n){let e,s;return e=new B({props:{$$slots:{default:[_e]},$$scope:{ctx:n}}}),{c(){v(e.$$.fragment)},m(t,o){y(e,t,o),s=!0},p(t,[o]){const i={};o&32771&&(i.$$scope={dirty:o,ctx:t}),e.$set(i)},i(t){s||(k(e.$$.fragment,t),s=!0)},o(t){S(e.$$.fragment,t),s=!1},d(t){C(e,t)}}}function ge(n,e,s){let{k_page:t}=e,{completed:o}=e,{app:i}=e;const a=i,r=D.pathFrom(a),c=a.host;let _=!1;async function q(){if(_)return 1;s(1,_=!0);const l=()=>(s(1,_=!1),1);return await D.open(async f=>{await f.put(f.at(r)||a)}),o(!0),l()}async function I(){await se.get(oe);let l="";const f=[];if(ae.test(c))f.push(c);else if(a.scheme==="https"&&(f.push(c),!ie.test(c))){const X=c.replace(/^.*(:.+)$/,"$1"),T=c.replace(/:.+$/,"").split(".");for(let x=T.length-1;x>0;x--){const J=T.slice(x).join(".");if(!T.includes(J)){l=J;break}}f.push("*."+l+X)}return f}const L=()=>q(),h=()=>o(!1);return n.$$set=l=>{"k_page"in l&&s(5,t=l.k_page),"completed"in l&&s(0,o=l.completed),"app"in l&&s(6,i=l.app)},[o,_,a,q,I,t,i,L,h]}class $e extends H{constructor(e){super(),P(this,e,ge,he,O,{k_page:5,completed:0,app:6})}}function we(n){let e,s,t;return{c(){e=g("div"),s=g("img"),ce(s.src,t=n[0].image)||R(s,"src",t),R(s,"alt",n[0].text||""),R(e,"class","img")},m(o,i){p(o,e,i),$(e,s)},p:m,d(o){o&&d(e)}}}function be(n){let e;return{c(){e=g("div"),e.textContent=`${n[0].text}`,R(e,"class","text svelte-1rfq4uw")},m(s,t){p(s,e,t)},p:m,d(s){s&&d(e)}}}function ve(n){let e,s,t=n[0].image&&we(n),o=n[0].text&&be(n);return{c(){e=g("div"),t&&t.c(),s=A(),o&&o.c(),R(e,"class","backdrop svelte-1rfq4uw")},m(i,a){p(i,e,a),t&&t.m(e,null),$(e,s),o&&o.m(e,null)},p(i,[a]){i[0].image&&t.p(i,a),i[0].text&&o.p(i,a)},i:m,o:m,d(i){i&&d(e),t&&t.d(),o&&o.d()}}}function ye(n,e,s){let{display:t}=e;const o=t;let{exits:i=!1}=e;return n.$$set=a=>{"display"in a&&s(1,t=a.display),"exits"in a&&s(2,i=a.exits)},[o,t,i]}class K extends H{constructor(e){super(),P(this,e,ye,ve,O,{display:1,exits:2})}}function ke(n){let e,s,t,o,i,a;return e=new K({props:{exits:!0,display:{image:n[0],text:n[1].host}}}),i=new E({props:{back:!0,confirm:["Connect",n[2]]}}),{c(){v(e.$$.fragment),s=A(),t=g("center"),t.innerHTML=`<h3>Review permissions</h3> 

		<h4>Allow this site to:</h4>`,o=A(),v(i.$$.fragment)},m(r,c){y(e,r,c),p(r,s,c),p(r,t,c),p(r,o,c),y(i,r,c),a=!0},p:m,i(r){a||(k(e.$$.fragment,r),k(i.$$.fragment,r),a=!0)},o(r){S(e.$$.fragment,r),S(i.$$.fragment,r),a=!1},d(r){C(e,r),r&&d(s),r&&d(t),r&&d(o),C(i,r)}}}function Se(n){let e,s;return e=new B({props:{$$slots:{default:[ke]},$$scope:{ctx:n}}}),{c(){v(e.$$.fragment)},m(t,o){y(e,t,o),s=!0},p(t,[o]){const i={};o&32&&(i.$$scope={dirty:o,ctx:t}),e.$set(i)},i(t){s||(k(e.$$.fragment,t),s=!0)},o(t){S(e.$$.fragment,t),s=!1},d(t){C(e,t)}}}function Ce(n){const e=w("completed"),s=w("faviconSrc"),t=w("app");w("chains");function o(){e(!0)}return[s,t,o]}class Ae extends H{constructor(e){super(),P(this,e,Ce,Se,O,{})}}function Re(n){let e,s,t,o,i,a;return e=new K({props:{display:{image:n[2],text:n[1].host}}}),i=new E({props:{cancel:n[4],contd:{creator:Ae,props:{accounts:n[3]}}}}),{c(){v(e.$$.fragment),s=A(),t=g("center"),t.innerHTML=`<h3>Connect to StarShell</h3> 

		<h4>Select account(s)</h4>`,o=A(),v(i.$$.fragment)},m(r,c){y(e,r,c),p(r,s,c),p(r,t,c),p(r,o,c),y(i,r,c),a=!0},p:m,i(r){a||(k(e.$$.fragment,r),k(i.$$.fragment,r),a=!0)},o(r){S(e.$$.fragment,r),S(i.$$.fragment,r),a=!1},d(r){C(e,r),r&&d(s),r&&d(t),r&&d(o),C(i,r)}}}function qe(n){let e,s;return e=new B({props:{$$slots:{default:[Re]},$$scope:{ctx:n}}}),{c(){v(e.$$.fragment)},m(t,o){y(e,t,o),s=!0},p(t,[o]){const i={};o&256&&(i.$$scope={dirty:o,ctx:t}),e.$set(i)},i(t){s||(k(e.$$.fragment,t),s=!0)},o(t){S(e.$$.fragment,t),s=!1},d(t){C(e,t)}}}function Ie(n){const e=w("completed"),s=w("app"),t=w("faviconSrc"),o=w("chains"),i=w("chainIndex")||0;return o[i],[e,s,t,[],()=>e(!1)]}class Le extends H{constructor(e){super(),P(this,e,Ie,qe,O,{})}}async function z(){await fe("flow")}addEventListener("beforeunload",z);function N(n,e,s){try{Z.style.display="none"}catch{}new G({target:document.body,props:{mode:"flow",page:{creator:n,props:s||{}}},context:new Map(ue(e))})}async function U(n){if(u("Handling 'authenticate'."),await M.getRootKey()){u("Vault is already unlocked."),n(!0);return}await M.getBase()?(u("Root found. Prompting login."),N(Y,{completed:n})):(u("No root found. Prompting registration."),N(Q,{completed(){U(n)}}))}const Ne={requestAdvertisement(n,e){u(`Handling 'requestAdvertisement' on ${JSON.stringify(n)}`),N($e,{},{completed:e,app:n.app})},requestConnection(n,e){u(`Handling 'requestConnection' on ${JSON.stringify(n)}`),N(Le,{completed:e,app:n.app,chains:n.chains})},signTransaction(n){}};async function F(n,e){if(n.type==="authenticate")return u(`Calling built-in handler for '${n.type}'`),void U(o=>{e(o,n.page)});const s=Ne[n.type];if(!s)return u(`No such handler registered for '${n.type}'`);if(!await M.getRootKey())return u("Vault is locked. Redirecting to login."),void U(()=>{F(n,e)});u(`Calling registered handler for '${n.type}'`),s(n.value,o=>{e(o,n.page)})}async function He(n){let e;try{e=await chrome.tabs.get(n.tabId)}catch{}if(!(!e||!e.url)&&n.href===e.url)return new Promise(s=>{})}(function(){u("Flow script init");const n=new URLSearchParams(location.search.slice(1)),e=n.get("headless");if(e){if(e==="info")return chrome.storage.session.set({display_info:{width:screen.width,height:screen.height,availHeight:screen.availHeight,availWidth:screen.availWidth,orientation:screen.orientation,devicePixelRatio}}).then(()=>{window.close()});window.close()}if(n.get("comm")==="broadcast"){u("Using broadcast comm");const s=n.get("name");if(typeof s!="string"||!s)return u("Invalid or missing channel name");u(`Channel name: '${s}'`);const t=new BroadcastChannel(s),o=(a,r)=>{t.postMessage({type:"completeFlow",value:{answer:a}}),setTimeout(async()=>{r&&await He(r),await z(),window.close()},200)};t.onmessage=function(a){const r=a.data;if(u(`Received => ${JSON.stringify(r)}`),!r||!r.type)return u("Invalid message");sessionStorage.setItem(s,JSON.stringify(r)),t.postMessage({type:"acknowledgeReceipt",value:r}),F(r,o)},u("Listening for message...");const i=sessionStorage.getItem(s);if(i){u("Attempting to restore message after reload...");let a;try{a=JSON.parse(i)}catch{return u("Failed to parse message from session storage")}F(a,o)}}else u(`Unknown comm '${n.get("comm")||"(null | undefined)"}'`)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
