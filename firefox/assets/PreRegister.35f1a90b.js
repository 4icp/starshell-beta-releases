var Ql=Object.defineProperty;var xl=(l,e,t)=>e in l?Ql(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var we=(l,e,t)=>(xl(l,typeof e!="symbol"?e+"":e,t),t);import{S as J,i as Q,s as Z,h as $,M as Ue,j as m,x as C,l as d,N as rt,g as N,w as g,O as Y,Q as v,R as x,T as ot,U as it,Y as ct,t as b,Z as fe,a as y,_ as ue,$ as Qe,b as X,a0 as sn,a1 as Tt,a2 as er,a3 as ge,a4 as sl,a5 as Gt,r as _e,a6 as ll,e as de,a7 as rl,v as B,a8 as ee,a9 as tr,aa as Nt,ab as Sn,ac as Mt,ad as Et,ae as bt,af as je,ag as $t,ah as wt,ai as At,y as xe,aj as oe,ak as mn,al as It,c as R,m as I,am as dn,an as hn,d as L,f as Ce,k as Ne,ao as nr,ap as ye,D as Yt,aq as Te,ar as me,as as Le,u as Ze,at as Oe,au as tt,A as dt,av as Cn,aw as he,ax as sr,ay as lr,V as Ut,az as ol,aA as il,J as rr,aB as or,aC as cl,K as al,aD as ht,aE as ze,aF as Fe,aG as Zt,aH as ir,I as ve,aI as Ie,aJ as fl,aK as mt,aL as be,aM as qt,aN as Lt,aO as Xt,aP as gn,aQ as Jt,aR as ul,aS as Ot,aT as Je,aU as nt,aV as cr,H as yt,aW as Nn,aX as ar,aY as Dt,q as Mn,aZ as fr,E as _l,a_ as Ke,a$ as ur,b0 as _r,b1 as pr,b2 as En,C as pl,b3 as Pt,b4 as ml,b5 as dl,B as mr,b6 as dr,b7 as Qt,b8 as Ht,b9 as hr,ba as gr,bb as Ft,bc as ln,bd as br,L as wr,be as kr,bf as rn,bg as vr,bh as hl,bi as Kt,bj as $r,bk as yr,bl as Tn,bm as gl,bn,F as bl,bo as Sr,bp as Ct,bq as Cr,br as An,bs as Vt,bt as kt,bu as Rn,bv as In,bw as wl,bx as Nr,by as Mr,bz as Er,bA as Tr,z as Ar,bB as Rr,bC as Rt,bD as kl,bE as Ir,bF as Ln,bG as xt,bH as Lr,bI as Or,bJ as Pr,bK as Hr}from"./web-resource-cache.b2a4c857.js";function jr(l){let e;return{c(){e=$("span"),Ue(e,"display","none")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}class vl extends J{constructor(e){super(),Q(this,e,null,jr,Z,{})}}const zr=l=>({}),On=l=>({});function Pn(l){let e,t;const n=l[21].help,s=rt(n,l,l[20],On);return{c(){e=$("div"),s&&s.c(),g(e,"class","display_none")},m(r,o){m(r,e,o),s&&s.m(e,null),l[23](e),t=!0},p(r,o){s&&s.p&&(!t||o&1048576)&&ot(s,n,r,r[20],t?ct(n,r[20],o,zr):it(r[20]),On)},i(r){t||(b(s,r),t=!0)},o(r){y(s,r),t=!1},d(r){r&&d(e),s&&s.d(r),l[23](null)}}}function Fr(l){let e,t,n,s,r,o,c;const i=l[21].default,a=rt(i,l,l[20],null);let f="help"in l[10]&&Pn(l);return{c(){e=$("div"),t=$("form"),a&&a.c(),n=N(),f&&f.c(),g(t,"class",s="screen "+l[1]+" svelte-re7ihy"),g(t,"data-s2-exit",l[9]),g(t,"style",l[3]),g(t,"autocomplete","off"),Y(t,"flex",!0),Y(t,"scroll",!0),Y(t,"nav",l[7]),Y(t,"progress",l[0]),Y(t,"transparent",l[2]),Y(t,"sublimate",!1),Y(t,"blur",l[6]),g(e,"class","bounds svelte-re7ihy"),Y(e,"slides",l[8])},m(u,_){m(u,e,_),v(e,t),a&&a.m(t,null),v(t,n),f&&f.m(t,null),l[24](t),r=!0,o||(c=[x(t,"submit",Br),x(t,"submit",l[22])],o=!0)},p(u,[_]){a&&a.p&&(!r||_&1048576)&&ot(a,i,u,u[20],r?ct(i,u[20],_,null):it(u[20]),null),"help"in u[10]?f?(f.p(u,_),_&1024&&b(f,1)):(f=Pn(u),f.c(),b(f,1),f.m(t,null)):f&&(fe(),y(f,1,1,()=>{f=null}),ue()),(!r||_&2&&s!==(s="screen "+u[1]+" svelte-re7ihy"))&&g(t,"class",s),(!r||_&8)&&g(t,"style",u[3]),_&2&&Y(t,"flex",!0),_&2&&Y(t,"scroll",!0),_&130&&Y(t,"nav",u[7]),_&3&&Y(t,"progress",u[0]),_&6&&Y(t,"transparent",u[2]),_&2&&Y(t,"sublimate",!1),_&66&&Y(t,"blur",u[6])},i(u){r||(b(a,u),b(f),r=!0)},o(u){y(a,u),y(f),r=!1},d(u){u&&d(e),a&&a.d(u),f&&f.d(),l[24](null),o=!1,Qe(c)}}}const Br=l=>{debugger;l.preventDefault()};function Dr(l,e,t){let n,s;X(l,sn,A=>t(25,n=A)),X(l,Tt,A=>t(6,s=A));let{$$slots:r={},$$scope:o}=e;const c=er(r);let{nav:i=!1}=e;const a=i;let{debug:f=""}=e,{progress:u=null}=e,{full:_=!1}=e,{keyed:p=!1}=e,{classNames:h=""}=e;const S=ge("page");let{leaves:k=!1}=e,{swipes:w=!1}=e,{root:E=S.index===0}=e,{slides:D=!k&&!w&&!E}=e;const O=D;let{form:F=!1}=e,{transparent:K=!1}=e,H,j=null;const T=k?"leaves":w?"swipes":"";sl(),Gt(()=>{if(S?S.on({focus(){_e(sn,n=a,n)}}):console.warn(`${f||"unknown"} Screen missing page context`),p){let A=0;new MutationObserver(async V=>{if(V[0]?.addedNodes.length)try{A=H.scrollTop}catch{}else V[0]?.removedNodes.length&&H&&t(4,H.scrollTop=A,H)}).observe(H,{childList:!0})}});let{style:q=""}=e;function M(A){ll.call(this,l,A)}function U(A){de[A?"unshift":"push"](()=>{j=A,t(5,j)})}function P(A){de[A?"unshift":"push"](()=>{H=A,t(4,H)})}return l.$$set=A=>{"nav"in A&&t(11,i=A.nav),"debug"in A&&t(12,f=A.debug),"progress"in A&&t(0,u=A.progress),"full"in A&&t(13,_=A.full),"keyed"in A&&t(14,p=A.keyed),"classNames"in A&&t(1,h=A.classNames),"leaves"in A&&t(15,k=A.leaves),"swipes"in A&&t(16,w=A.swipes),"root"in A&&t(17,E=A.root),"slides"in A&&t(18,D=A.slides),"form"in A&&t(19,F=A.form),"transparent"in A&&t(2,K=A.transparent),"style"in A&&t(3,q=A.style),"$$scope"in A&&t(20,o=A.$$scope)},[u,h,K,q,H,j,s,a,O,T,c,i,f,_,p,k,w,E,D,F,o,r,M,U,P]}class ke extends J{constructor(e){super(),Q(this,e,Dr,Fr,Z,{nav:11,debug:12,progress:0,full:13,keyed:14,classNames:1,leaves:15,swipes:16,root:17,slides:18,form:19,transparent:2,style:3})}}function Vr(l){let e,t,n,s,r,o,c;return{c(){e=$("picture"),t=$("source"),n=N(),s=$("img"),g(t,"srcset",l[3]),g(t,"media","(min-resolution: 2dppx)"),g(s,"alt",l[1]),rl(s.src,r=l[2])||g(s,"src",r),g(s,"class","svelte-5d3u97"),g(e,"class","no-margin logo svelte-5d3u97"),Ue(e,"width",l[0]+"px"),Ue(e,"height",l[0]+"px")},m(i,a){m(i,e,a),v(e,t),v(e,n),v(e,s),o||(c=x(e,"click",l[6]),o=!0)},p:C,i:C,o:C,d(i){i&&d(e),o=!1,c()}}}function Ur(l,e,t){let{dim:n}=e;const s=n;let{alt:r="StarShell logo"}=e;const o=r,c=u=>`/media/vendor/logo-${u}px.png`,i=c(s),a=c(s*2);function f(u){ll.call(this,l,u)}return l.$$set=u=>{"dim"in u&&t(4,n=u.dim),"alt"in u&&t(5,r=u.alt)},[s,o,i,a,n,r,f]}class wn extends J{constructor(e){super(),Q(this,e,Ur,Vr,Z,{dim:4,alt:5})}}const qr=l=>({}),Hn=l=>({});function Xr(l){let e,t,n,s,r,o,c,i,a,f,u;const _=l[4].rows,p=rt(_,l,l[3],Hn);return{c(){e=$("div"),t=$("div"),n=$("div"),s=$("h3"),r=B(l[1]),o=N(),c=$("div"),p&&p.c(),g(s,"class","svelte-1f5uzt4"),g(n,"class","top svelte-1f5uzt4"),g(c,"class","rows svelte-1f5uzt4"),g(t,"class","overlay select svelte-1f5uzt4"),g(e,"class","cancel svelte-1f5uzt4"),Y(e,"showing",l[2])},m(h,S){m(h,e,S),v(e,t),v(t,n),v(n,s),v(s,r),v(t,o),v(t,c),p&&p.m(c,null),a=!0,f||(u=x(e,"click",l[5]),f=!0)},p(h,[S]){(!a||S&2)&&ee(r,h[1]),p&&p.p&&(!a||S&8)&&ot(p,_,h,h[3],a?ct(_,h[3],S,qr):it(h[3]),Hn),S&4&&Y(e,"showing",h[2])},i(h){a||(b(p,h),i&&i.end(1),a=!0)},o(h){y(p,h),i=tr(t,Kr,{}),a=!1},d(h){h&&d(e),p&&p.d(h),h&&i&&i.end(),f=!1,u()}}}function Kr(l,e){return{duration:200}}function Wr(l,e,t){let n;X(l,Tt,f=>t(6,n=f));let{$$slots:s={},$$scope:r}=e,{title:o}=e,{open:c=!0}=e,i=!1;setTimeout(()=>{t(2,i=!0)},10);const a=()=>{t(2,i=!1),t(0,c=!1)};return l.$$set=f=>{"title"in f&&t(1,o=f.title),"open"in f&&t(0,c=f.open),"$$scope"in f&&t(3,r=f.$$scope)},l.$$.update=()=>{l.$$.dirty&1&&_e(Tt,n=c,n)},[c,o,i,r,s,a]}class $l extends J{constructor(e){super(),Q(this,e,Wr,Xr,Z,{title:1,open:0})}}var Gr=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-arrow-left-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-arrow-left-fg" d="M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z"/>
</svg>
`,Yr=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-search-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-search-fg" d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
</svg>
`,yl=`<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
	<style type="text/css">
		.s2r-checked-circle-fg {
			fill: var(--svg-color-fg, currentColor);
		}
		.s2r-checked-circle-bg {
			fill: var(--svg-color-bg, black);
		}
	</style>
	<circle class="s2r-checked-circle-bg" cx="10" cy="10" r="8" />
	<path class="s2r-checked-circle-fg" d="M10.0003 1.6665C5.40033 1.6665 1.66699 5.39984 1.66699 9.99984C1.66699 14.5998 5.40033 18.3332 10.0003 18.3332C14.6003 18.3332 18.3337 14.5998 18.3337 9.99984C18.3337 5.39984 14.6003 1.6665 10.0003 1.6665ZM8.33366 14.1665L4.16699 9.99984L5.34199 8.82484L8.33366 11.8082L14.6587 5.48317L15.8337 6.6665L8.33366 14.1665Z" />
</svg>
`;function jn(l,e,t){const n=l.slice();return n[50]=e[t][0],n[51]=e[t][1],n}function zn(l,e,t){const n=l.slice();return n[55]=e[t][0],n[56]=e[t][1],n}function Zr(l){let e,t;return e=new wn({props:{dim:48,alt:"Click to view general status"}}),e.$on("click",l[35]),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p:C,i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Jr(l){let e,t,n;return{c(){e=$("span"),g(e,"class","back svelte-1fcz7ql")},m(s,r){m(s,e,r),e.innerHTML=Gr,t||(n=x(e,"click",l[34]),t=!0)},p:C,i:C,o:C,d(s){s&&d(e),t=!1,n()}}}function Qr(l){let e,t,n,s=l[18]&&xr(l);return{c(){e=$("span"),e.textContent=`${l[17]}`,t=N(),s&&s.c(),n=oe(),g(e,"class","name svelte-1fcz7ql")},m(r,o){m(r,e,o),m(r,t,o),s&&s.m(r,o),m(r,n,o)},p(r,o){r[18]&&s.p(r,o)},d(r){r&&d(e),r&&d(t),s&&s.d(r),r&&d(n)}}}function xr(l){let e;return{c(){e=$("span"),e.textContent=`- ${l[18]}`,g(e,"class","symbol svelte-1fcz7ql")},m(t,n){m(t,e,n)},p:C,d(t){t&&d(e)}}}function eo(l){let e,t=l[6],n,s,r,o,c,i=Fn(l),a=l[5]&&Bn(l);return{c(){e=$("span"),i.c(),n=N(),a&&a.c(),s=oe(),g(e,"class","network svelte-1fcz7ql")},m(f,u){m(f,e,u),i.m(e,null),m(f,n,u),a&&a.m(f,u),m(f,s,u),r=!0,o||(c=x(e,"click",l[36]),o=!0)},p(f,u){u[0]&64&&Z(t,t=f[6])?(fe(),y(i,1,1,C),ue(),i=Fn(f),i.c(),b(i,1),i.m(e,null)):i.p(f,u),f[5]?a?(a.p(f,u),u[0]&32&&b(a,1)):(a=Bn(f),a.c(),b(a,1),a.m(s.parentNode,s)):a&&(fe(),y(a,1,1,()=>{a=null}),ue())},i(f){r||(b(i),b(a),r=!0)},o(f){y(i),y(a),r=!1},d(f){f&&d(e),i.d(f),f&&d(n),a&&a.d(f),f&&d(s),o=!1,c()}}}function Fn(l){let e,t;const n=[{resource:l[6]},l[21](!1)];let s={};for(let r=0;r<n.length;r+=1)s=mn(s,n[r]);return e=new It({props:s}),{c(){R(e.$$.fragment)},m(r,o){I(e,r,o),t=!0},p(r,o){const c=o[0]&2097216?dn(n,[o[0]&64&&{resource:r[6]},o[0]&2097152&&hn(r[21](!1))]):{};e.$set(c)},i(r){t||(b(e.$$.fragment,r),t=!0)},o(r){y(e.$$.fragment,r),t=!1},d(r){L(e,r)}}}function Bn(l){let e,t,n;function s(o){l[38](o)}let r={title:"Switch Network",$$slots:{rows:[ro]},$$scope:{ctx:l}};return l[5]!==void 0&&(r.open=l[5]),e=new $l({props:r}),de.push(()=>Ce(e,"open",s)),{c(){R(e.$$.fragment)},m(o,c){I(e,o,c),n=!0},p(o,c){const i={};c[0]&160|c[1]&268435456&&(i.$$scope={dirty:c,ctx:o}),!t&&c[0]&32&&(t=!0,i.open=o[5],Ne(()=>t=!1)),e.$set(i)},i(o){n||(b(e.$$.fragment,o),n=!0)},o(o){y(e.$$.fragment,o),n=!1},d(o){L(e,o)}}}function to(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function no(l){let e,t,n=l[54].entries(),s=[];for(let o=0;o<n.length;o+=1)s[o]=Vn(zn(l,n,o));const r=o=>y(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),t=!0},p(o,c){if(c[0]&160){n=o[54].entries();let i;for(i=0;i<n.length;i+=1){const a=zn(o,n,i);s[i]?(s[i].p(a,c),b(s[i],1)):(s[i]=Vn(a),s[i].c(),b(s[i],1),s[i].m(e.parentNode,e))}for(fe(),i=n.length;i<s.length;i+=1)r(i);ue()}},i(o){if(!t){for(let c=0;c<n.length;c+=1)b(s[c]);t=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)y(s[c]);t=!1},d(o){Oe(s,o),o&&d(e)}}}function Dn(l){let e;return{c(){e=$("span"),g(e,"class","overlay-select icon svelte-1fcz7ql"),Ue(e,"--icon-color","var(--theme-color-primary)")},m(t,n){m(t,e,n),e.innerHTML=yl},p:C,d(t){t&&d(e)}}}function so(l){let e,t=l[7]===l[55]&&Dn();return{c(){t&&t.c(),e=N()},m(n,s){t&&t.m(n,s),m(n,e,s)},p(n,s){n[7]===n[55]?t?t.p(n,s):(t=Dn(),t.c(),t.m(e.parentNode,e)):t&&(t.d(1),t=null)},d(n){t&&t.d(n),n&&d(e)}}}function Vn(l){let e,t;function n(){return l[37](l[55])}return e=new tt({props:{resource:l[56],detail:"Default Provider",$$slots:{right:[so]},$$scope:{ctx:l}}}),e.$on("click",n),{c(){R(e.$$.fragment)},m(s,r){I(e,s,r),t=!0},p(s,r){l=s;const o={};r[0]&128|r[1]&268435456&&(o.$$scope={dirty:r,ctx:l}),e.$set(o)},i(s){t||(b(e.$$.fragment,s),t=!0)},o(s){y(e.$$.fragment,s),t=!1},d(s){L(e,s)}}}function lo(l){let e;return{c(){e=B("...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function ro(l){let e,t,n={ctx:l,current:null,token:null,hasCatch:!1,pending:lo,then:no,catch:to,value:54,blocks:[,,,]};return Te(me.read(),n),{c(){e=oe(),n.block.c()},m(s,r){m(s,e,r),n.block.m(s,n.anchor=r),n.mount=()=>e.parentNode,n.anchor=e,t=!0},p(s,r){l=s,Le(n,l,r)},i(s){t||(b(n.block),t=!0)},o(s){for(let r=0;r<3;r+=1){const o=n.blocks[r];y(o)}t=!1},d(s){s&&d(e),n.block.d(s),n.token=null,n=null}}}function oo(l){let e,t=l[9],n,s,r,o,c,i=Un(l),a=l[8]&&qn(l);return{c(){e=$("span"),i.c(),n=N(),a&&a.c(),s=oe(),g(e,"class","account svelte-1fcz7ql")},m(f,u){m(f,e,u),i.m(e,null),m(f,n,u),a&&a.m(f,u),m(f,s,u),r=!0,o||(c=x(e,"click",l[39]),o=!0)},p(f,u){u[0]&512&&Z(t,t=f[9])?(fe(),y(i,1,1,C),ue(),i=Un(f),i.c(),b(i,1),i.m(e,null)):i.p(f,u),f[8]?a?(a.p(f,u),u[0]&256&&b(a,1)):(a=qn(f),a.c(),b(a,1),a.m(s.parentNode,s)):a&&(fe(),y(a,1,1,()=>{a=null}),ue())},i(f){r||(b(i),b(a),r=!0)},o(f){y(i),y(a),r=!1},d(f){f&&d(e),i.d(f),f&&d(n),a&&a.d(f),f&&d(s),o=!1,c()}}}function Un(l){let e,t;const n=[{resource:l[9]},l[21](!0)];let s={};for(let r=0;r<n.length;r+=1)s=mn(s,n[r]);return e=new It({props:s}),{c(){R(e.$$.fragment)},m(r,o){I(e,r,o),t=!0},p(r,o){const c=o[0]&2097664?dn(n,[o[0]&512&&{resource:r[9]},o[0]&2097152&&hn(r[21](!0))]):{};e.$set(c)},i(r){t||(b(e.$$.fragment,r),t=!0)},o(r){y(e.$$.fragment,r),t=!1},d(r){L(e,r)}}}function qn(l){let e,t,n;function s(o){l[41](o)}let r={title:"Switch Account",$$slots:{rows:[_o]},$$scope:{ctx:l}};return l[8]!==void 0&&(r.open=l[8]),e=new $l({props:r}),de.push(()=>Ce(e,"open",s)),{c(){R(e.$$.fragment)},m(o,c){I(e,o,c),n=!0},p(o,c){const i={};c[0]&1280|c[1]&268435456&&(i.$$scope={dirty:c,ctx:o}),!t&&c[0]&256&&(t=!0,i.open=o[8],Ne(()=>t=!1)),e.$set(i)},i(o){n||(b(e.$$.fragment,o),n=!0)},o(o){y(e.$$.fragment,o),n=!1},d(o){L(e,o)}}}function io(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function co(l){let e,t,n=l[49].entries(),s=[];for(let o=0;o<n.length;o+=1)s[o]=Kn(jn(l,n,o));const r=o=>y(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),t=!0},p(o,c){if(c[0]&1280){n=o[49].entries();let i;for(i=0;i<n.length;i+=1){const a=jn(o,n,i);s[i]?(s[i].p(a,c),b(s[i],1)):(s[i]=Kn(a),s[i].c(),b(s[i],1),s[i].m(e.parentNode,e))}for(fe(),i=n.length;i<s.length;i+=1)r(i);ue()}},i(o){if(!t){for(let c=0;c<n.length;c+=1)b(s[c]);t=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)y(s[c]);t=!1},d(o){Oe(s,o),o&&d(e)}}}function Xn(l){let e;return{c(){e=$("span"),g(e,"class","overlay-select icon svelte-1fcz7ql"),Ue(e,"--icon-color","var(--theme-color-primary)")},m(t,n){m(t,e,n),e.innerHTML=yl},p:C,d(t){t&&d(e)}}}function ao(l){let e,t=l[10]===l[50]&&Xn();return{c(){t&&t.c(),e=N()},m(n,s){t&&t.m(n,s),m(n,e,s)},p(n,s){n[10]===n[50]?t?t.p(n,s):(t=Xn(),t.c(),t.m(e.parentNode,e)):t&&(t.d(1),t=null)},d(n){t&&t.d(n),n&&d(e)}}}function fo(l){let e,t,n;return e=new It({props:{dim:32,resource:l[51]}}),{c(){R(e.$$.fragment),t=N()},m(s,r){I(e,s,r),m(s,t,r),n=!0},p:C,i(s){n||(b(e.$$.fragment,s),n=!0)},o(s){y(e.$$.fragment,s),n=!1},d(s){L(e,s),s&&d(t)}}}function Kn(l){let e,t;function n(){return l[40](l[50])}return e=new tt({props:{resource:l[51],resourcePath:l[50],detail:l[51].extra?.total_fiat_cache??"(?)",$$slots:{icon:[fo],right:[ao]},$$scope:{ctx:l}}}),e.$on("click",n),{c(){R(e.$$.fragment)},m(s,r){I(e,s,r),t=!0},p(s,r){l=s;const o={};r[0]&1024|r[1]&268435456&&(o.$$scope={dirty:r,ctx:l}),e.$set(o)},i(s){t||(b(e.$$.fragment,s),t=!0)},o(s){y(e.$$.fragment,s),t=!1},d(s){L(e,s)}}}function uo(l){let e;return{c(){e=B("...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function _o(l){let e,t,n={ctx:l,current:null,token:null,hasCatch:!1,pending:uo,then:co,catch:io,value:49,blocks:[,,,]};return Te(Ze.read(),n),{c(){e=oe(),n.block.c()},m(s,r){m(s,e,r),n.block.m(s,n.anchor=r),n.mount=()=>e.parentNode,n.anchor=e,t=!0},p(s,r){l=s,Le(n,l,r)},i(s){t||(b(n.block),t=!0)},o(s){for(let r=0;r<3;r+=1){const o=n.blocks[r];y(o)}t=!1},d(s){s&&d(e),n.block.d(s),n.token=null,n=null}}}function po(l){let e,t;return e=new nr({}),e.$on("click",l[42]),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p:C,i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function mo(l){let e,t,n,s,r,o;return{c(){e=$("div"),t=$("input"),n=N(),s=$("span"),g(t,"type","text"),t.autofocus=l[0],g(t,"placeholder","Search anything: token, account, contact, txn..."),g(s,"class","action svelte-1fcz7ql"),g(e,"class","search svelte-1fcz7ql")},m(c,i){m(c,e,i),v(e,t),ye(t,l[3]),l[44](t),v(e,n),v(e,s),s.innerHTML=Yr,l[0]&&t.focus(),r||(o=[x(t,"input",l[43]),x(t,"input",l[23])],r=!0)},p(c,i){i[0]&1&&(t.autofocus=c[0]),i[0]&8&&t.value!==c[3]&&ye(t,c[3])},d(c){c&&d(e),l[44](null),r=!1,Qe(o)}}}function ho(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h,S,k;const w=[Jr,Zr],E=[];function D(T,q){return T[11]?0:!T[12]&&!T[13]?1:-1}~(n=D(l))&&(s=E[n]=w[n](l));let O=l[17]&&Qr(l),F=l[15]&&eo(l),K=l[14]&&oo(l),H=l[12]&&po(l),j=l[16]&&mo(l);return{c(){e=$("div"),t=$("div"),s&&s.c(),r=N(),o=$("span"),c=$("div"),O&&O.c(),i=N(),a=$("div"),a.textContent=`${l[19]}`,f=N(),u=$("span"),_=$("span"),F&&F.c(),p=N(),K&&K.c(),h=N(),H&&H.c(),S=N(),j&&j.c(),g(c,"class","title svelte-1fcz7ql"),g(a,"class","subtitle svelte-1fcz7ql"),g(o,"class","main svelte-1fcz7ql"),g(_,"class","cluster svelte-1fcz7ql"),g(u,"class","right svelte-1fcz7ql"),Y(u,"heightless",!l[15]&&l[12]),g(t,"class","top svelte-1fcz7ql"),g(e,"class","header svelte-1fcz7ql")},m(T,q){m(T,e,q),v(e,t),~n&&E[n].m(t,null),v(t,r),v(t,o),v(o,c),O&&O.m(c,null),v(o,i),v(o,a),v(t,f),v(t,u),v(u,_),F&&F.m(_,null),v(_,p),K&&K.m(_,null),v(u,h),H&&H.m(u,null),v(e,S),j&&j.m(e,null),l[45](e),k=!0},p(T,q){s&&s.p(T,q),T[17]&&O.p(T,q),T[15]&&F.p(T,q),T[14]&&K.p(T,q),T[12]&&H.p(T,q),T[16]&&j.p(T,q)},i(T){k||(b(s),b(F),b(K),b(H),k=!0)},o(T){y(s),y(F),y(K),y(H),k=!1},d(T){T&&d(e),~n&&E[n].d(),O&&O.d(),F&&F.d(),K&&K.d(),H&&H.d(),j&&j.d(),l[45](null)}}}function go(l,e,t){let n,s,r,o,c,i,a,f,u,_;X(l,Nt,W=>t(46,n=W)),X(l,Sn,W=>t(47,s=W)),X(l,Mt,W=>t(48,r=W)),X(l,Et,W=>t(4,o=W)),X(l,bt,W=>t(5,c=W)),X(l,je,W=>t(6,i=W)),X(l,$t,W=>t(7,a=W)),X(l,wt,W=>t(8,f=W)),X(l,At,W=>t(9,u=W)),X(l,xe,W=>t(10,_=W));let{pops:p=!1}=e;const h=p;let{exits:S=!1}=e;const k=S;let{plain:w=!1}=e;const E=w;let{account:D=!1}=e;const O=D;let{network:F=!1}=e;const K=F;let{search:H=!1}=e;const j=H;let{title:T=""}=e;const q=T;let{symbol:M=""}=e;const U=M;let{subtitle:P=""}=e;const A=P,V=sl(),se=(W=!1)=>({dim:21,bg:"satin",genStyle:"font-size:21px; outline:none;",rootStyle:`
			padding: 5px 6px;
			border: 2px solid var(--theme-color-border);
			border-radius: ${W?"0 4px 4px 0":"4px 0 0 4px"};
		`.replace(/\s+/g," ")}),pe=ge("page");let ie,le,{isSearchScreen:ce=!1}=e,{search_input:ae=""}=e,re=n;Nt.subscribe(W=>{ce&&W?(console.log("search screen and search text"),t(3,re=W),le&&setTimeout(()=>{le.focus()},0)):W||t(3,re="")});function z(W){if(ce)re?V("search",re):(_e(Nt,n="",n),s());else if(re){r.id;const _t=Yt(ie,":focus");_t&&_t.blur(),_e(Sn,s=()=>{t(3,re=""),console.log("stealing focus for cancel search"),le.focus()},s),_e(Nt,n=re,n)}}const G=()=>pe.pop(),Me=()=>_e(Et,o=!0,o),He=W=>{W.stopPropagation(),_e(bt,c=!c,c)},We=W=>{_e($t,a=W,a),_e(bt,c=!1,c)};function Be(W){c=W,bt.set(c)}const Ae=W=>{W.stopPropagation(),_e(wt,f=!f,f)},$e=W=>{_e(xe,_=W,_),_e(wt,f=!1,f)};function Re(W){f=W,wt.set(f)}const De=()=>V("close");function Ee(){re=this.value,t(3,re)}function ft(W){de[W?"unshift":"push"](()=>{le=W,t(2,le)})}function ut(W){de[W?"unshift":"push"](()=>{ie=W,t(1,ie)})}return l.$$set=W=>{"pops"in W&&t(24,p=W.pops),"exits"in W&&t(25,S=W.exits),"plain"in W&&t(26,w=W.plain),"account"in W&&t(27,D=W.account),"network"in W&&t(28,F=W.network),"search"in W&&t(29,H=W.search),"title"in W&&t(30,T=W.title),"symbol"in W&&t(31,M=W.symbol),"subtitle"in W&&t(32,P=W.subtitle),"isSearchScreen"in W&&t(0,ce=W.isSearchScreen),"search_input"in W&&t(33,ae=W.search_input)},[ce,ie,le,re,o,c,i,a,f,u,_,h,k,E,O,K,j,q,U,A,V,se,pe,z,p,S,w,D,F,H,T,M,P,ae,G,Me,He,We,Be,Ae,$e,Re,De,Ee,ft,ut]}class Pe extends J{constructor(e){super(),Q(this,e,go,ho,Z,{pops:24,exits:25,plain:26,account:27,network:28,search:29,title:30,symbol:31,subtitle:32,isSearchScreen:0,search_input:33},null,[-1,-1])}}function Wn(l,e,t){const n=l.slice();return n[2]=e[t],n}function bo(l){let e,t,n,s=Yn(l[2].value.offset)+"",r,o,c,i,a=l[2].value.message+"",f;return{c(){e=$("span"),t=$("span"),n=B("+"),r=B(s),o=B("ms:"),c=N(),i=$("span"),f=B(a),g(t,"class","offset"),g(i,"class","message"),g(e,"class","event")},m(u,_){m(u,e,_),v(e,t),v(t,n),v(t,r),v(t,o),v(e,c),v(e,i),v(i,f)},p(u,_){_&1&&s!==(s=Yn(u[2].value.offset)+"")&&ee(r,s),_&1&&a!==(a=u[2].value.message+"")&&ee(f,a)},d(u){u&&d(e)}}}function wo(l){let e,t=l[2].value+"",n;return{c(){e=$("span"),n=B(t),g(e,"class","string")},m(s,r){m(s,e,r),v(e,n)},p(s,r){r&1&&t!==(t=s[2].value+"")&&ee(n,t)},d(s){s&&d(e)}}}function Gn(l){let e,t;function n(o,c){if(o[2].type==="string")return wo;if(o[2].type==="event")return bo}let s=n(l),r=s&&s(l);return{c(){e=$("li"),r&&r.c(),t=N()},m(o,c){m(o,e,c),r&&r.m(e,null),v(e,t)},p(o,c){s===(s=n(o))&&r?r.p(o,c):(r&&r.d(1),r=s&&s(o),r&&(r.c(),r.m(e,t)))},d(o){o&&d(e),r&&r.d()}}}function ko(l){let e,t,n=l[0],s=[];for(let r=0;r<n.length;r+=1)s[r]=Gn(Wn(l,n,r));return{c(){e=$("div"),t=$("ol");for(let r=0;r<s.length;r+=1)s[r].c();g(e,"class","log-container svelte-13jddbg"),Y(e,"display_none",l[1])},m(r,o){m(r,e,o),v(e,t);for(let c=0;c<s.length;c+=1)s[c].m(t,null)},p(r,[o]){if(o&1){n=r[0];let c;for(c=0;c<n.length;c+=1){const i=Wn(r,n,c);s[c]?s[c].p(i,o):(s[c]=Gn(i),s[c].c(),s[c].m(t,null))}for(;c<s.length;c+=1)s[c].d(1);s.length=n.length}o&2&&Y(e,"display_none",r[1])},i:C,o:C,d(r){r&&d(e),Oe(s,r)}}}class Sl{constructor(){this._a_items=[]}get items(){return this._a_items}set items(e){this._a_items=e}event(e,t){return this._a_items.push({type:"event",value:{message:e,offset:t}}),this}}function Yn(l){return(l/1e3).toFixed(2).padStart(5,"0")}function vo(l,e,t){let{items:n}=e,{hide:s=!1}=e;return l.$$set=r=>{"items"in r&&t(0,n=r.items),"hide"in r&&t(1,s=r.hide)},[n,s]}class Cl extends J{constructor(e){super(),Q(this,e,vo,ko,Z,{items:0,hide:1})}}function $o(l){let e,t,n;return{c(){e=$("div"),t=$("img"),g(t,"alt","StarShell title"),rl(t.src,n="/media/vendor/title.svg")||g(t,"src",n),g(t,"class","svelte-1htd4i8"),g(e,"class","no-margin title svelte-1htd4i8"),Ue(e,"width",l[0]+"px")},m(s,r){m(s,e,r),v(e,t)},p:C,i:C,o:C,d(s){s&&d(e)}}}function yo(l,e,t){let{width:n=180}=e;const s=n;return l.$$set=r=>{"width"in r&&t(1,n=r.width)},[s,n]}class Nl extends J{constructor(e){super(),Q(this,e,yo,$o,Z,{width:1})}}function So(l){let e,t,n,s,r,o,c,i,a,f;return a=new dt({props:{cancel:"pop",confirm:["Use anyway",l[0]],wait:5e3}}),{c(){e=$("h3"),e.textContent="Weak Password Warning",t=N(),n=$("p"),n.textContent="The password you entered was found on a list of the top ten thousand most commonly used passwords.",s=N(),r=$("p"),r.textContent="In order to help prevent the loss of funds, you are encouraged to create a strong, unique password.",o=N(),c=$("p"),c.textContent="How do you want to proceed?",i=N(),R(a.$$.fragment)},m(u,_){m(u,e,_),m(u,t,_),m(u,n,_),m(u,s,_),m(u,r,_),m(u,o,_),m(u,c,_),m(u,i,_),I(a,u,_),f=!0},p:C,i(u){f||(b(a.$$.fragment,u),f=!0)},o(u){y(a.$$.fragment,u),f=!1},d(u){u&&d(e),u&&d(t),u&&d(n),u&&d(s),u&&d(r),u&&d(o),u&&d(c),u&&d(i),L(a,u)}}}function Co(l){let e,t;return e=new ke({props:{$$slots:{default:[So]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&32&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function No(l,e,t){let{attempt_register:n}=e,{weakness:s}=e;const r=ge("page");function o(){n(),r.pop()}return l.$$set=c=>{"attempt_register"in c&&t(1,n=c.attempt_register),"weakness"in c&&t(2,s=c.weakness)},[o,n,s]}class Mo extends J{constructor(e){super(),Q(this,e,No,Co,Z,{attempt_register:1,weakness:2})}}function Zn(l){let e,t,n,s;return{c(){e=$("div"),t=B(l[4]),g(e,"class","validation-message")},m(r,o){m(r,e,o),v(e,t),s=!0},p(r,o){(!s||o&16)&&ee(t,r[4])},i(r){s||(ht(()=>{n||(n=ze(e,Fe,{duration:300},!0)),n.run(1)}),s=!0)},o(r){n||(n=ze(e,Fe,{duration:300},!1)),n.run(0),s=!1},d(r){r&&d(e),r&&n&&n.end()}}}function Eo(l){let e,t,n,s,r,o,c=!l[2]&&l[4]&&Zn(l);return{c(){e=$("input"),t=N(),c&&c.c(),n=oe(),g(e,"type","password"),g(e,"autocomplete","new-password"),g(e,"name","password"),g(e,"placeholder","Password")},m(i,a){m(i,e,a),ye(e,l[0]),m(i,t,a),c&&c.m(i,a),m(i,n,a),s=!0,r||(o=[x(e,"blur",l[10]),x(e,"input",l[11])],r=!0)},p(i,a){a&1&&e.value!==i[0]&&ye(e,i[0]),!i[2]&&i[4]?c?(c.p(i,a),a&20&&b(c,1)):(c=Zn(i),c.c(),b(c,1),c.m(n.parentNode,n)):c&&(fe(),y(c,1,1,()=>{c=null}),ue())},i(i){s||(b(c),s=!0)},o(i){y(c),s=!1},d(i){i&&d(e),i&&d(t),c&&c.d(i),i&&d(n),r=!1,Qe(o)}}}function Jn(l){let e,t,n,s;return{c(){e=$("div"),t=B(l[5]),g(e,"class","validation-message")},m(r,o){m(r,e,o),v(e,t),s=!0},p(r,o){(!s||o&32)&&ee(t,r[5])},i(r){s||(ht(()=>{n||(n=ze(e,Fe,{duration:300},!0)),n.run(1)}),s=!0)},o(r){n||(n=ze(e,Fe,{duration:300},!1)),n.run(0),s=!1},d(r){r&&d(e),r&&n&&n.end()}}}function To(l){let e,t,n,s,r,o,c=!l[2]&&l[5]&&Jn(l);return{c(){e=$("input"),t=N(),c&&c.c(),n=oe(),g(e,"type","password"),g(e,"autocomplete","new-password"),g(e,"name","verify"),g(e,"placeholder","Password")},m(i,a){m(i,e,a),ye(e,l[1]),m(i,t,a),c&&c.m(i,a),m(i,n,a),s=!0,r||(o=[x(e,"blur",l[12]),x(e,"input",l[13])],r=!0)},p(i,a){a&2&&e.value!==i[1]&&ye(e,i[1]),!i[2]&&i[5]?c?(c.p(i,a),a&36&&b(c,1)):(c=Jn(i),c.c(),b(c,1),c.m(n.parentNode,n)):c&&(fe(),y(c,1,1,()=>{c=null}),ue())},i(i){s||(b(c),s=!0)},o(i){y(c),s=!1},d(i){i&&d(e),i&&d(t),c&&c.d(i),i&&d(n),r=!1,Qe(o)}}}function Qn(l){let e,t;return{c(){e=$("pre"),t=B(l[3])},m(n,s){m(n,e,s),v(e,t)},p(n,s){s&8&&ee(t,n[3])},d(n){n&&d(e)}}}function Ao(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h,S,k,w,E,D,O,F;n=new wn({props:{dim:96}}),r=new Nl({props:{width:150}}),_=new he({props:{key:"password",name:"New password",$$slots:{default:[Eo]},$$scope:{ctx:l}}}),h=new he({props:{key:"verify-password",name:"Verify password",$$slots:{default:[To]},$$scope:{ctx:l}}});function K(T){l[14](T)}let H={};l[6].items!==void 0&&(H.items=l[6].items),k=new Cl({props:H}),de.push(()=>Ce(k,"items",K));let j=l[3]&&Qn(l);return O=new dt({props:{confirm:l[7]}}),{c(){e=$("center"),t=$("div"),R(n.$$.fragment),s=N(),R(r.$$.fragment),o=N(),c=$("p"),c.textContent="Create a new password to protect your wallet's data.",i=N(),a=$("div"),f=$("input"),u=N(),R(_.$$.fragment),p=N(),R(h.$$.fragment),S=N(),R(k.$$.fragment),E=N(),j&&j.c(),D=N(),R(O.$$.fragment),g(t,"class","intro svelte-pdf2wg"),g(c,"class","narrow svelte-pdf2wg"),f.hidden=!0,g(f,"type","text"),g(f,"name","username"),g(f,"autocomplete","username"),f.value="StarShell Wallet User",g(a,"class","form flex-rows")},m(T,q){m(T,e,q),v(e,t),I(n,t,null),v(t,s),I(r,t,null),v(e,o),v(e,c),m(T,i,q),m(T,a,q),v(a,f),v(a,u),I(_,a,null),v(a,p),I(h,a,null),m(T,S,q),I(k,T,q),m(T,E,q),j&&j.m(T,q),m(T,D,q),I(O,T,q),F=!0},p(T,q){const M={};q&8388629&&(M.$$scope={dirty:q,ctx:T}),_.$set(M);const U={};q&8388646&&(U.$$scope={dirty:q,ctx:T}),h.$set(U);const P={};!w&&q&64&&(w=!0,P.items=T[6].items,Ne(()=>w=!1)),k.$set(P),T[3]?j?j.p(T,q):(j=Qn(T),j.c(),j.m(D.parentNode,D)):j&&(j.d(1),j=null);const A={};q&128&&(A.confirm=T[7]),O.$set(A)},i(T){F||(b(n.$$.fragment,T),b(r.$$.fragment,T),b(_.$$.fragment,T),b(h.$$.fragment,T),b(k.$$.fragment,T),b(O.$$.fragment,T),F=!0)},o(T){y(n.$$.fragment,T),y(r.$$.fragment,T),y(_.$$.fragment,T),y(h.$$.fragment,T),y(k.$$.fragment,T),y(O.$$.fragment,T),F=!1},d(T){T&&d(e),L(n),L(r),T&&d(i),T&&d(a),L(_),L(h),T&&d(S),L(k,T),T&&d(E),j&&j.d(T),T&&d(D),L(O,T)}}}function Ro(l){let e,t;return e=new ke({props:{$$slots:{default:[Ao]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&8388863&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Io(l,e,t){let n,s;const r=ge("page"),o=ge("completed");let c="",i="",a="",f="",u="",_=0,p=new Sl;function h(q){t(6,p=p.event(q,Date.now()-_))}r.on({restore(){t(0,c=t(1,i=""))}});function S(){if(c&&!Cn(c)){c.length<sr?t(4,f="Password must be at least 5 characters"):c.length>lr?t(4,f="Password must be 1024 characters or fewer"):t(4,f="Password is not acceptable");return}t(4,f="")}function k(){if(c&&!f&&c!==i){t(5,u="Passwords do not match");return}t(5,u="")}const w=(async()=>(await(await fetch("/data/passwords-top-10k.txt")).text()).split(`
`))();async function E(){(await w).includes(c)?r.push({creator:Mo,props:{attempt_register:O}}):await O()}let D=!1;async function O(){if(!n||D)return 1;D=!0;const q=()=>(D=!1,1);t(3,a=""),_=Date.now(),h("Estimating time to complete");{const M=window.performance.now();await Ut.deriveRootBits(ol,il,1/50);const P=window.performance.now()-M,A=2*(2*(P*50));h(`About ${(A/1e3).toFixed(1)} seconds`)}try{await rr(c,h)}catch(M){return M instanceof or?t(3,a="A passphrase is already registered"):M instanceof cl?t(3,a="Invalid passphrase"):t(3,a=`Unexpected error occurred while attempting to register:
${M.stack||M.message}`),q()}h("Verifying passphrase");try{await al(c,!1,h)}catch(M){debugger;return t(3,a=`Failed to verify passphrase immediately after registration:
${M.stack}`),await Ut.eraseBase(),q()}return h("Done"),t(3,a="Success"),o&&o(!0),q()}const F=()=>S();function K(){c=this.value,t(0,c)}const H=()=>k();function j(){i=this.value,t(1,i)}function T(q){l.$$.not_equal(p.items,q)&&(p.items=q,t(6,p))}return l.$$.update=()=>{l.$$.dirty&3&&t(2,n=!!c&&c===i&&Cn(c)),l.$$.dirty&4&&t(7,s=["Continue",E,!n])},[c,i,n,a,f,u,p,s,S,k,F,K,H,j,T]}class Ml extends J{constructor(e){super(),Q(this,e,Io,Ro,Z,{})}}var kn=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M19 5v14H5V5h14m0-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 9c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6 10H6v-1.53c0-2.5 3.97-3.58 6-3.58s6 1.08 6 3.58V18zm-9.69-2h7.38c-.69-.56-2.38-1.12-3.69-1.12s-3.01.56-3.69 1.12z"/>
</svg>`,Lo=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-analytics-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-analytics-fg" d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"/>
	<path class="s2r-analytics-fg" d="M7 12h2v5H7zm8-5h2v10h-2zm-4 7h2v3h-2zm0-4h2v2h-2z"/>
</svg>`,Oo=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M13 5.08A7 7 0 0 1 18.92 11h3.03c-.47-4.72-4.23-8.48-8.95-8.95v3.03zM18.92 13A7 7 0 0 1 13 18.92v3.03c4.72-.47 8.48-4.23 8.95-8.95h-3.03zM11 18.92c-3.39-.49-6-3.4-6-6.92s2.61-6.43 6-6.92V2.05c-5.05.5-9 4.76-9 9.95 0 5.19 3.95 9.45 9 9.95v-3.03z"/>
</svg>`;function Po(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function Ho(l){let e,t,n;function s(o){l[4](o)}let r={id:"asset-select",pfpMap:l[1],placeholder:"Select asset",items:l[8]};return l[0]!==void 0&&(r.value=l[0]),e=new fl({props:r}),de.push(()=>Ce(e,"value",s)),{c(){R(e.$$.fragment)},m(o,c){I(e,o,c),n=!0},p(o,c){const i={};c&2&&(i.pfpMap=o[1]),!t&&c&1&&(t=!0,i.value=o[0],Ne(()=>t=!1)),e.$set(i)},i(o){n||(b(e.$$.fragment,o),n=!0)},o(o){y(e.$$.fragment,o),n=!1},d(o){L(e,o)}}}function jo(l){let e;return{c(){e=B("Loading assets...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function zo(l){let e,t,n={ctx:l,current:null,token:null,hasCatch:!1,pending:jo,then:Ho,catch:Po,value:8,blocks:[,,,]};return Te(l[2](),n),{c(){e=$("div"),n.block.c(),g(e,"class","asset")},m(s,r){m(s,e,r),n.block.m(e,n.anchor=null),n.mount=()=>e,n.anchor=null,t=!0},p(s,[r]){l=s,Le(n,l,r)},i(s){t||(b(n.block),t=!0)},o(s){for(let r=0;r<3;r+=1){const o=n.blocks[r];y(o)}t=!1},d(s){s&&d(e),n.block.d(),n.token=null,n=null}}}function Fo(l,e,t){let n,s;X(l,Zt,f=>t(5,n=f)),X(l,je,f=>t(6,s=f));let{assetRef:r=""}=e;s?.id;let o={};async function c(){const f=[];t(1,o=await ir(s.coins,{dim:19}));for(const[u,_]of ve(s.coins))f.push({value:Ie.holdingPathFor(n,u),object:_,primary:u,secondary:_.name,pfp:_.pfp});return f}let i={value:r,object:null,primary:"",secondary:"",pfp:""};function a(f){i=f,t(0,i)}return l.$$set=f=>{"assetRef"in f&&t(3,r=f.assetRef)},l.$$.update=()=>{l.$$.dirty&1&&t(3,r=i?.value||"")},[i,o,c,r,a]}class Bo extends J{constructor(e){super(),Q(this,e,Fo,zo,Z,{assetRef:3})}}var Do=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14l-6-6z"/>
</svg>`,Vo=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6-1.41-1.41z"/>
</svg>`;function xn(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h;return{c(){e=$("span"),t=$("span"),n=$("span"),s=B("= "),r=B(l[5]),o=N(),c=$("span"),c.textContent="USD",i=N(),a=$("span"),f=$("span"),u=N(),_=$("span"),g(n,"class","amount svelte-18lggj7"),g(c,"class","fiat svelte-18lggj7"),g(t,"class","equivalent svelte-18lggj7"),g(f,"class","icon increment clickable svelte-18lggj7"),g(_,"class","icon decrement clickable svelte-18lggj7"),g(a,"class","adjust svelte-18lggj7"),g(e,"class","occupy svelte-18lggj7")},m(S,k){m(S,e,k),v(e,t),v(t,n),v(n,s),v(n,r),v(t,o),v(t,c),v(e,i),v(e,a),v(a,f),f.innerHTML=Do,v(a,u),v(a,_),_.innerHTML=Vo,p||(h=[x(f,"click",l[16]),x(f,"mousedown",l[17]),x(_,"click",l[18]),x(_,"mousedown",l[19])],p=!0)},p(S,k){k&32&&ee(r,S[5])},d(S){S&&d(e),p=!1,Qe(h)}}}function es(l){let e,t;return{c(){e=$("span"),t=B(l[1]),g(e,"class","validation-message")},m(n,s){m(n,e,s),v(e,t)},p(n,s){s&2&&ee(t,n[1])},d(n){n&&d(e)}}}function Uo(l){let e,t,n,s,r,o,c,i,a,f=l[3]&&xn(l),u=l[1]&&es(l);return{c(){e=$("div"),t=$("input"),o=N(),f&&f.c(),c=N(),u&&u.c(),t.disabled=n=!l[2],g(t,"type","number"),g(t,"min","0"),g(t,"max",s=l[4]+""||"0"),g(t,"step",r="0."+"0".repeat((l[3]?.decimals||1)-1)+"1"),t.required=!0,t.value=l[0],g(t,"class","svelte-18lggj7"),Y(t,"invalid",l[1]),g(e,"class","amount-input svelte-18lggj7")},m(_,p){m(_,e,p),v(e,t),l[15](t),v(e,o),f&&f.m(e,null),v(e,c),u&&u.m(e,null),i||(a=[x(t,"change",l[14]),x(t,"input",l[7]),x(t,"invalid",qo)],i=!0)},p(_,[p]){p&4&&n!==(n=!_[2])&&(t.disabled=n),p&16&&s!==(s=_[4]+""||"0")&&g(t,"max",s),p&8&&r!==(r="0."+"0".repeat((_[3]?.decimals||1)-1)+"1")&&g(t,"step",r),p&1&&t.value!==_[0]&&(t.value=_[0]),p&2&&Y(t,"invalid",_[1]),_[3]?f?f.p(_,p):(f=xn(_),f.c(),f.m(e,c)):f&&(f.d(1),f=null),_[1]?u?u.p(_,p):(u=es(_),u.c(),u.m(e,null)):u&&(u.d(1),u=null)},i:C,o:C,d(_){_&&d(e),l[15](null),f&&f.d(),u&&u.d(),i=!1,Qe(a)}}}function ts(l){let e=0;const t=window.setTimeout(()=>{e=window.setInterval(l,90)},1e3);window.addEventListener("mouseup",()=>{clearTimeout(t),clearInterval(e)},{once:!0})}const qo=l=>l.preventDefault();function Xo(l,e,t){let n,s,r;X(l,je,V=>t(21,n=V)),X(l,Zt,V=>t(22,s=V)),X(l,mt,V=>t(23,r=V));let{value:o=""}=e;const c=new be(0),i=new be(1);let{assetRef:a=""}=e,{bufferMax:f=0}=e,u,_=c,p=c,h="",S="";async function k(){t(5,h="[...]");const V=Ie.parseEntityPath(a);if(V?.type==="holding"){const se=V.coin;t(3,u=n.coins[se]);const pe=r.cachedBalance(s,se);pe&&pe.timestamp>Date.now()-5*qt&&t(4,_=new be(pe.data.amount).shiftedBy(-u.decimals).minus(new be(f)));const ie=await r.bankBalance(s,se);if(a===ie.holding){const le=new be(ie.balance.amount).shiftedBy(-u.decimals).minus(new be(f));le.eq(_)||t(4,_=le);const ce=n.coins[se];t(13,S=ce?.extra?.coingecko_id||"")}}else V?.type==="token"&&t(3,u=null);u?p=i.shiftedBy(-u.decimals):(p=c,t(4,_=c))}function w(V){t(0,o=V.target.value)}function E(){const V=p.plus(o||0);V.lte(_)?t(0,o=V+""):t(0,o=_+""),H()}function D(){const V=p.negated().plus(o||0);V.gte(0)?V.gt(_)?t(0,o=_+""):t(0,o=V+""):t(0,o="0"),H()}let{error:O=""}=e,F;function K(V){F.setCustomValidity(V),t(1,O=V)}function H(){if(!o)return K("Enter an amount");let V;try{V=new be(o)}catch{return K("Invalid number")}if(V.lt(c))return K("Value must be positive");if(V.gt(_))return K("Insufficient balance");t(1,O="")}let{showValidation:j=0}=e;const T=()=>H();function q(V){de[V?"unshift":"push"](()=>{F=V,t(6,F)})}const M=()=>E(),U=()=>ts(E),P=()=>D(),A=()=>ts(D);return l.$$set=V=>{"value"in V&&t(0,o=V.value),"assetRef"in V&&t(2,a=V.assetRef),"bufferMax"in V&&t(11,f=V.bufferMax),"error"in V&&t(1,O=V.error),"showValidation"in V&&t(12,j=V.showValidation)},l.$$.update=()=>{l.$$.dirty&4&&(a?k():t(3,u=null)),l.$$.dirty&8193&&(S?(async()=>{const V=await Lt.coinsVersus([S],"usd",1*qt);S in V?t(5,h=Xt(+o*+V[S],!0)):t(5,h="(?)")})():t(5,h="")),l.$$.dirty&4097&&(j?H():o||t(1,O=""))},[o,O,a,u,_,h,F,w,E,D,H,f,j,S,T,q,M,U,P,A]}class Ko extends J{constructor(e){super(),Q(this,e,Xo,Uo,Z,{value:0,assetRef:2,bufferMax:11,error:1,showValidation:12})}}function Wo(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function Go(l){let e,t,n;function s(o){l[4](o)}let r={id:"sender-select",placeholder:"Select account",secondaryClass:"balance",items:l[1]};return l[0]!==void 0&&(r.value=l[0]),e=new fl({props:r}),de.push(()=>Ce(e,"value",s)),{c(){R(e.$$.fragment)},m(o,c){I(e,o,c),n=!0},p(o,c){const i={};!t&&c&1&&(t=!0,i.value=o[0],Ne(()=>t=!1)),e.$set(i)},i(o){n||(b(e.$$.fragment,o),n=!0)},o(o){y(e.$$.fragment,o),n=!1},d(o){L(e,o)}}}function Yo(l){let e;return{c(){e=B("Loading accounts...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function Zo(l){let e,t,n={ctx:l,current:null,token:null,hasCatch:!1,pending:Yo,then:Go,catch:Wo,value:1,blocks:[,,,]};return Te(l[2](),n),{c(){e=$("div"),n.block.c(),g(e,"class","sender")},m(s,r){m(s,e,r),n.block.m(e,n.anchor=null),n.mount=()=>e,n.anchor=null,t=!0},p(s,[r]){l=s,Le(n,l,r)},i(s){t||(b(n.block),t=!0)},o(s){for(let r=0;r<3;r+=1){const o=n.blocks[r];y(o)}t=!1},d(s){s&&d(e),n.block.d(),n.token=null,n=null}}}function Jo(l,e,t){let n;X(l,xe,f=>t(5,n=f));let{accountRef:s=n}=e;const r=(f,u)=>({value:f,primary:u.name,secondary:u.extra?.total_fiat_cache||"(?)"});let o,c;async function i(){const f=await Ze.read();return t(1,c=gn(f.raw,r)),t(0,o=c.find(u=>s===u.value)),c}function a(f){o=f,t(0,o)}return l.$$set=f=>{"accountRef"in f&&t(3,s=f.accountRef)},l.$$.update=()=>{l.$$.dirty&1&&o&&t(3,s=o.value)},[o,c,i,s,a]}class Qo extends J{constructor(e){super(),Q(this,e,Jo,Zo,Z,{accountRef:3})}}function xo(l){let e;return{c(){e=$("span"),e.textContent="Failed to locate contact",g(e,"class","warning")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function ei(l){let e,t,n;return t=new nt({props:{address:l[0]}}),{c(){e=$("span"),R(t.$$.fragment),g(e,"class","manual")},m(s,r){m(s,e,r),I(t,e,null),n=!0},p(s,r){const o={};r&1&&(o.address=s[0]),t.$set(o)},i(s){n||(b(t.$$.fragment,s),n=!0)},o(s){y(t.$$.fragment,s),n=!1},d(s){s&&d(e),L(t)}}}function ti(l){let e,t,n,s,r,o=l[1].name+"",c,i,a,f,u=l[1]&&ns(l);return a=new nt({props:{address:me.bech32(l[1].address)}}),{c(){e=$("div"),t=$("span"),u&&u.c(),n=N(),s=$("span"),r=$("span"),c=B(o),i=N(),R(a.$$.fragment),g(t,"class","contact-pfp svelte-1ontxbe"),g(r,"class","name svelte-1ontxbe"),g(s,"class","info svelte-1ontxbe"),g(e,"class","contact svelte-1ontxbe")},m(_,p){m(_,e,p),v(e,t),u&&u.m(t,null),v(e,n),v(e,s),v(s,r),v(r,c),v(s,i),I(a,s,null),f=!0},p(_,p){_[1]?u?(u.p(_,p),p&2&&b(u,1)):(u=ns(_),u.c(),b(u,1),u.m(t,null)):u&&(fe(),y(u,1,1,()=>{u=null}),ue()),(!f||p&2)&&o!==(o=_[1].name+"")&&ee(c,o);const h={};p&2&&(h.address=me.bech32(_[1].address)),a.$set(h)},i(_){f||(b(u),b(a.$$.fragment,_),f=!0)},o(_){y(u),y(a.$$.fragment,_),f=!1},d(_){_&&d(e),u&&u.d(),L(a)}}}function ns(l){let e,t;return e=new It({props:{dim:28,resource:l[1],genStyle:"font-size:18px;"}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&2&&(r.resource=n[1]),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function ni(l){let e,t,n,s;const r=[ti,ei,xo],o=[];function c(i,a){return i[1]?0:i[0]?1:2}return e=c(l),t=o[e]=r[e](l),{c(){t.c(),n=oe()},m(i,a){o[e].m(i,a),m(i,n,a),s=!0},p(i,[a]){let f=e;e=c(i),e===f?o[e].p(i,a):(fe(),y(o[f],1,1,()=>{o[f]=null}),ue(),t=o[e],t?t.p(i,a):(t=o[e]=r[e](i),t.c()),b(t,1),t.m(n.parentNode,n))},i(i){s||(b(t),s=!0)},o(i){y(t),s=!1},d(i){o[e].d(i),i&&d(n)}}}function si(l,e,t){let n;X(l,Jt,a=>t(3,n=a));let{contact:s=null}=e,r=s,{address:o=""}=e;async function c(){const f=(await Je.read()).contacts(n);if(!r&&o){for(const[,u]of f)if(o===me.bech32(u.address)){t(1,r=u);break}}}c();const i=ul("agents",c);return Ot(()=>{i()}),l.$$set=a=>{"contact"in a&&t(2,s=a.contact),"address"in a&&t(0,o=a.address)},[o,r,s]}class El extends J{constructor(e){super(),Q(this,e,si,ni,Z,{contact:2,address:0})}}function li(l){let e,t,n,s;return t=new El({props:{contact:l[1].contact,address:l[1].value}}),{c(){e=$("div"),R(t.$$.fragment),g(e,"class",n="item "+l[2]+" svelte-pgx3pp"),Y(e,"display_none",l[0]||!l[1].value)},m(r,o){m(r,e,o),I(t,e,null),s=!0},p(r,[o]){const c={};o&2&&(c.contact=r[1].contact),o&2&&(c.address=r[1].value),t.$set(c),(!s||o&4&&n!==(n="item "+r[2]+" svelte-pgx3pp"))&&g(e,"class",n),o&7&&Y(e,"display_none",r[0]||!r[1].value)},i(r){s||(b(t.$$.fragment,r),s=!0)},o(r){y(t.$$.fragment,r),s=!1},d(r){r&&d(e),L(t)}}}function ri(l,e,t){let{isActive:n=!1}=e,{isFirst:s=!1}=e,{isHover:r=!1}=e,{isSelectable:o=!1}=e,{getOptionLabel:c=void 0}=e,{item:i}=e,{filterText:a=""}=e,f="";return l.$$set=u=>{"isActive"in u&&t(0,n=u.isActive),"isFirst"in u&&t(3,s=u.isFirst),"isHover"in u&&t(4,r=u.isHover),"isSelectable"in u&&t(5,o=u.isSelectable),"getOptionLabel"in u&&t(6,c=u.getOptionLabel),"item"in u&&t(1,i=u.item),"filterText"in u&&t(7,a=u.filterText)},l.$$.update=()=>{if(l.$$.dirty&57){const u=[];n&&u.push("active"),s&&u.push("first"),r&&u.push("hover"),o||u.push("notSelectable"),t(2,f=u.join(" "))}},[n,i,f,s,r,o,c,a]}class oi extends J{constructor(e){super(),Q(this,e,ri,li,Z,{isActive:0,isFirst:3,isHover:4,isSelectable:5,getOptionLabel:6,item:1,filterText:7})}}function ii(l){let e,t,n;return t=new El({props:{contact:l[0].contact,address:l[0].value}}),{c(){e=$("div"),R(t.$$.fragment),g(e,"class","selection svelte-aitqlq")},m(s,r){m(s,e,r),I(t,e,null),n=!0},p(s,[r]){const o={};r&1&&(o.contact=s[0].contact),r&1&&(o.address=s[0].value),t.$set(o)},i(s){n||(b(t.$$.fragment,s),n=!0)},o(s){y(t.$$.fragment,s),n=!1},d(s){s&&d(e),L(t)}}}function ci(l,e,t){let{getSelectionLabel:n}=e,{item:s}=e;return l.$$set=r=>{"getSelectionLabel"in r&&t(1,n=r.getSelectionLabel),"item"in r&&t(0,s=r.item)},[s,n]}class ai extends J{constructor(e){super(),Q(this,e,ci,ii,Z,{getSelectionLabel:1,item:0})}}function fi(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function ui(l){let e,t,n,s;function r(i){l[14](i)}function o(i){l[15](i)}let c={id:"recipient-select",placeholder:"Address or contact",listOffset:1,isClearable:!!l[0],isCreatable:!!l[3],Item:oi,Selection:ai,items:l[8],value:l[4],noOptionsMessage:`Stop typing in the address. 
 Use copy/paste instead!`,containerClasses:l[1]?"invalid":""};return l[2]!==void 0&&(c.filterText=l[2]),l[6]!==void 0&&(c.listOpen=l[6]),e=new cr({props:c}),de.push(()=>Ce(e,"filterText",r)),de.push(()=>Ce(e,"listOpen",o)),e.$on("select",l[10]),e.$on("clear",l[11]),{c(){R(e.$$.fragment)},m(i,a){I(e,i,a),s=!0},p(i,a){const f={};a&1&&(f.isClearable=!!i[0]),a&8&&(f.isCreatable=!!i[3]),a&16&&(f.value=i[4]),a&2&&(f.containerClasses=i[1]?"invalid":""),!t&&a&4&&(t=!0,f.filterText=i[2],Ne(()=>t=!1)),!n&&a&64&&(n=!0,f.listOpen=i[6],Ne(()=>n=!1)),e.$set(f)},i(i){s||(b(e.$$.fragment,i),s=!0)},o(i){y(e.$$.fragment,i),s=!1},d(i){L(e,i)}}}function _i(l){let e;return{c(){e=B("Loading contacts...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function ss(l){let e,t;return{c(){e=$("span"),t=B(l[1]),g(e,"class","validation-message")},m(n,s){m(n,e,s),v(e,t)},p(n,s){s&2&&ee(t,n[1])},d(n){n&&d(e)}}}function pi(l){let e,t,n,s={ctx:l,current:null,token:null,hasCatch:!1,pending:_i,then:ui,catch:fi,value:8,blocks:[,,,]};Te(l[9](),s);let r=l[1]&&ss(l);return{c(){e=$("div"),s.block.c(),t=N(),r&&r.c(),g(e,"class","sender svelte-1rmr362"),Y(e,"hide-cursor",l[5])},m(o,c){m(o,e,c),s.block.m(e,s.anchor=null),s.mount=()=>e,s.anchor=t,v(e,t),r&&r.m(e,null),l[16](e),n=!0},p(o,[c]){l=o,Le(s,l,c),l[1]?r?r.p(l,c):(r=ss(l),r.c(),r.m(e,null)):r&&(r.d(1),r=null),c&32&&Y(e,"hide-cursor",l[5])},i(o){n||(b(s.block),n=!0)},o(o){for(let c=0;c<3;c+=1){const i=s.blocks[c];y(i)}n=!1},d(o){o&&d(e),s.block.d(),s.token=null,s=null,r&&r.d(),l[16](null)}}}function mi(l,e,t){let n,s;X(l,je,j=>t(13,n=j)),X(l,Jt,j=>t(17,s=j));let{address:r=""}=e;const o=r;let{error:c=""}=e,i,a,f;const u=j=>({value:me.bech32(j.address),label:j.name,contact:j});async function _(){const j=await Je.read(),T=[{value:"",label:"",contact:null}];t(8,f=[...j.contacts(s)]);for(const[,q]of f){const M=u(q),U=me.bech32(q.address);o&&U===o&&t(4,a=M),T.push(M)}return T}function p(j){t(0,r=j.detail.value),t(1,c="")}function h(){t(0,r="")}let S="",k=!1,w=!1;function E(){if(t(3,S=""),!n)t(1,c="No chain set");else if(!me.isValidAddressFor(n,i,"acc"))t(1,c="Invalid address for this chain");else{t(1,c="");for(const[,j]of f)if(i===me.bech32(j.address)){t(2,i=""),t(4,a=u(j)),t(6,w=!1),t(5,k=!0);return}t(3,S=i),setTimeout(()=>{Yt(D,".manual>.address").click(),t(6,w=!1)},0)}}let D,{showValidation:O=0}=e;function F(j){i=j,t(2,i)}function K(j){w=j,t(6,w)}function H(j){de[j?"unshift":"push"](()=>{D=j,t(7,D)})}return l.$$set=j=>{"address"in j&&t(0,r=j.address),"error"in j&&t(1,c=j.error),"showValidation"in j&&t(12,O=j.showValidation)},l.$$.update=()=>{l.$$.dirty&12&&(t(5,k=!1),i?E():(t(5,k=!!S),t(3,S=""))),l.$$.dirty&12293&&(O?r?me.isValidAddressFor(n,r,"acc")?t(1,c=""):t(1,c="Invalid address for this chain"):i?E():t(1,c="Enter a recipient"):r||t(1,c=""))},[r,c,i,S,a,k,w,D,f,_,p,h,O,n,F,K,H]}class di extends J{constructor(e){super(),Q(this,e,mi,pi,Z,{address:0,error:1,showValidation:12})}}function hi(l){let e,t=(l[1]?.name||"[...]")+"",n,s,r,o=(l[1]?.extra?.total_fiat_cache||"(?)")+"",c;return{c(){e=$("div"),n=B(t),s=N(),r=$("div"),c=B(o),g(e,"class","title"),g(r,"class","subtitle svelte-m8l3qm")},m(i,a){m(i,e,a),v(e,n),m(i,s,a),m(i,r,a),v(r,c)},p(i,a){a&2&&t!==(t=(i[1]?.name||"[...]")+"")&&ee(n,t),a&2&&o!==(o=(i[1]?.extra?.total_fiat_cache||"(?)")+"")&&ee(c,o)},d(i){i&&d(e),i&&d(s),i&&d(r)}}}function gi(l){let e,t=(l[2]||"[...]")+"",n,s,r,o,c;return o=new nt({props:{address:l[9]}}),{c(){e=$("div"),n=B(t),s=N(),r=$("div"),R(o.$$.fragment),g(e,"class","title"),g(r,"class","subtitle svelte-m8l3qm")},m(i,a){m(i,e,a),v(e,n),m(i,s,a),m(i,r,a),I(o,r,null),c=!0},p(i,a){(!c||a&4)&&t!==(t=(i[2]||"[...]")+"")&&ee(n,t)},i(i){c||(b(o.$$.fragment,i),c=!0)},o(i){y(o.$$.fragment,i),c=!1},d(i){i&&d(e),i&&d(s),i&&d(r),L(o)}}}function bi(l){let e;return{c(){e=B("=[...]")},m(t,n){m(t,e,n)},p:C,d(t){t&&d(e)}}}function wi(l){let e=Ke(new be(l[8]).times(l[3]).toNumber())+"",t;return{c(){t=B(e)},m(n,s){m(n,t,s)},p(n,s){s&8&&e!==(e=Ke(new be(n[8]).times(n[3]).toNumber())+"")&&ee(t,e)},d(n){n&&d(t)}}}function ki(l){let e,t,n;function s(c,i){return c[3]?wi:bi}let r=s(l),o=r(l);return{c(){e=$("div"),e.textContent=`${l[8]}  ${l[7]}`,t=N(),n=$("div"),o.c(),g(e,"class","title"),g(n,"class","subtitle svelte-m8l3qm")},m(c,i){m(c,e,i),m(c,t,i),m(c,n,i),o.m(n,null)},p(c,i){r===(r=s(c))&&o?o.p(c,i):(o.d(1),o=r(c),o&&(o.c(),o.m(n,null)))},d(c){c&&d(e),c&&d(t),c&&d(n),o.d()}}}function vi(l){let e;return{c(){e=B("=[...]")},m(t,n){m(t,e,n)},p:C,d(t){t&&d(e)}}}function $i(l){let e=Ke(new be(l[10]).times(l[3]).toNumber())+"",t;return{c(){t=B(e)},m(n,s){m(n,t,s)},p(n,s){s&8&&e!==(e=Ke(new be(n[10]).times(n[3]).toNumber())+"")&&ee(t,e)},d(n){n&&d(t)}}}function yi(l){let e,t,n;function s(c,i){return c[3]?$i:vi}let r=s(l),o=r(l);return{c(){e=$("div"),e.textContent=`${l[10]}  ${l[7]}`,t=N(),n=$("div"),o.c(),g(e,"class","title"),g(n,"class","subtitle svelte-m8l3qm")},m(c,i){m(c,e,i),m(c,t,i),m(c,n,i),o.m(n,null)},p(c,i){r===(r=s(c))&&o?o.p(c,i):(o.d(1),o=r(c),o&&(o.c(),o.m(n,null)))},d(c){c&&d(e),c&&d(t),c&&d(n),o.d()}}}function Si(l){let e;return{c(){e=B("=[...]")},m(t,n){m(t,e,n)},p:C,d(t){t&&d(e)}}}function Ci(l){let e=Ke(new be(l[4]).times(l[3]).toNumber())+"",t;return{c(){t=B(e)},m(n,s){m(n,t,s)},p(n,s){s&24&&e!==(e=Ke(new be(n[4]).times(n[3]).toNumber())+"")&&ee(t,e)},d(n){n&&d(t)}}}function Ni(l){let e,t=(l[4]||"[...]")+"",n,s,r,o,c;function i(u,_){return u[3]?Ci:Si}let a=i(l),f=a(l);return{c(){e=$("div"),n=B(t),s=N(),r=B(l[7]),o=N(),c=$("div"),f.c(),g(e,"class","title"),g(c,"class","subtitle svelte-m8l3qm")},m(u,_){m(u,e,_),v(e,n),v(e,s),v(e,r),m(u,o,_),m(u,c,_),f.m(c,null)},p(u,_){_&16&&t!==(t=(u[4]||"[...]")+"")&&ee(n,t),a===(a=i(u))&&f?f.p(u,_):(f.d(1),f=a(u),f&&(f.c(),f.m(c,null)))},d(u){u&&d(e),u&&d(o),u&&d(c),f.d()}}}function Mi(l){let e;return{c(){e=$("span"),e.textContent="(empty)",g(e,"class","empty-memo svelte-m8l3qm")},m(t,n){m(t,e,n)},p:C,d(t){t&&d(e)}}}function Ei(l){let e,t,n,s;return{c(){e=B(`Plaintext:
			`),t=$("textarea"),n=B(`

			Encrypted form:
			`),s=$("textarea"),t.disabled=!0,t.value=l[0],s.disabled=!0,s.value=s_memo_encrypted},m(r,o){m(r,e,o),m(r,t,o),m(r,n,o),m(r,s,o)},p(r,o){o&1&&(t.value=r[0])},d(r){r&&d(e),r&&d(t),r&&d(n),r&&d(s)}}}function Ti(l){let e;function t(r,o){return r[0]?Ei:Mi}let n=t(l),s=n(l);return{c(){s.c(),e=oe()},m(r,o){s.m(r,o),m(r,e,o)},p(r,o){n===(n=t(r))&&s?s.p(r,o):(s.d(1),s=n(r),s&&(s.c(),s.m(e.parentNode,e)))},d(r){s.d(r),r&&d(e)}}}function Ai(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h,S,k,w,E,D,O,F,K,H,j,T,q;return e=new Pe({props:{pops:!0,exits:!0,title:"Sending",symbol:l[7],subtitle:l[5].name}}),e.$on("close",l[18]),n=new he({props:{short:!0,key:"sender",name:"From",$$slots:{default:[hi]},$$scope:{ctx:l}}}),c=new he({props:{short:!0,key:"recipient",name:"To",$$slots:{default:[gi]},$$scope:{ctx:l}}}),u=new he({props:{short:!0,key:"amount",name:"Amount",$$slots:{default:[ki]},$$scope:{ctx:l}}}),S=new he({props:{short:!0,key:"fee-review",name:"Fee",$$slots:{default:[yi]},$$scope:{ctx:l}}}),D=new he({props:{short:!0,key:"total",name:"Total",$$slots:{default:[Ni]},$$scope:{ctx:l}}}),H=new he({props:{short:!0,key:"memo",name:"Memo",$$slots:{default:[Ti]},$$scope:{ctx:l}}}),T=new dt({props:{back:!0,confirm:["Approve",l[19]]}}),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),r=$("hr"),o=N(),R(c.$$.fragment),i=N(),a=$("hr"),f=N(),R(u.$$.fragment),_=N(),p=$("hr"),h=N(),R(S.$$.fragment),k=N(),w=$("hr"),E=N(),R(D.$$.fragment),O=N(),F=$("hr"),K=N(),R(H.$$.fragment),j=N(),R(T.$$.fragment)},m(M,U){I(e,M,U),m(M,t,U),I(n,M,U),m(M,s,U),m(M,r,U),m(M,o,U),I(c,M,U),m(M,i,U),m(M,a,U),m(M,f,U),I(u,M,U),m(M,_,U),m(M,p,U),m(M,h,U),I(S,M,U),m(M,k,U),m(M,w,U),m(M,E,U),I(D,M,U),m(M,O,U),m(M,F,U),m(M,K,U),I(H,M,U),m(M,j,U),I(T,M,U),q=!0},p(M,U){const P={};U&32&&(P.subtitle=M[5].name),e.$set(P);const A={};U&67108866&&(A.$$scope={dirty:U,ctx:M}),n.$set(A);const V={};U&67108868&&(V.$$scope={dirty:U,ctx:M}),c.$set(V);const se={};U&67108872&&(se.$$scope={dirty:U,ctx:M}),u.$set(se);const pe={};U&67108872&&(pe.$$scope={dirty:U,ctx:M}),S.$set(pe);const ie={};U&67108888&&(ie.$$scope={dirty:U,ctx:M}),D.$set(ie);const le={};U&67108865&&(le.$$scope={dirty:U,ctx:M}),H.$set(le)},i(M){q||(b(e.$$.fragment,M),b(n.$$.fragment,M),b(c.$$.fragment,M),b(u.$$.fragment,M),b(S.$$.fragment,M),b(D.$$.fragment,M),b(H.$$.fragment,M),b(T.$$.fragment,M),q=!0)},o(M){y(e.$$.fragment,M),y(n.$$.fragment,M),y(c.$$.fragment,M),y(u.$$.fragment,M),y(S.$$.fragment,M),y(D.$$.fragment,M),y(H.$$.fragment,M),y(T.$$.fragment,M),q=!1},d(M){L(e,M),M&&d(t),L(n,M),M&&d(s),M&&d(r),M&&d(o),L(c,M),M&&d(i),M&&d(a),M&&d(f),L(u,M),M&&d(_),M&&d(p),M&&d(h),L(S,M),M&&d(k),M&&d(w),M&&d(E),L(D,M),M&&d(O),M&&d(F),M&&d(K),L(H,M),M&&d(j),L(T,M)}}}function Ri(l){let e,t;return e=new ke({props:{debug:"SendNative",slides:!0,$$slots:{default:[Ai]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&67108927&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Ii(l,e,t){let n,s,r,o;X(l,yt,P=>t(22,s=P)),X(l,mt,P=>t(23,r=P)),X(l,je,P=>t(5,o=P));const c=ge("page");let{coin:i}=e;const a=i,f=o.coins[a];let{accountRef:u}=e,_,p,{amount:h}=e;const S=h;let{recipient:k}=e;const w=k;let{encryptMemo:E=!1}=e;const D=E;let O="",F,{fee:K}=e;const H=K;let{memo:j}=e,T=0;(async P=>{const A=f.extra?.coingecko_id||"";if(A){const V=await Lt.coinsVersus([A],"usd",0);t(3,T=V[A])}})(),(async()=>{const P=await Ze.read();t(1,_=P.at(u)),p=me.addressFor(_.pubkey);const A=Je.pathForContact(w);if(F=await Je.getContact(A),t(2,O=F?.name||""),D){debugger;const V=Nn(j);if(V.byteLength>ar)throw Dt({text:"Memo exceeds character limitation"});const se=new Uint8Array(280);se.set(V,0);let pe;try{({pubkey:pe}=await r.e2eInfoFor(w))}catch(re){throw Dt({error:re})}let ie,le;try{({sequence:ie,height:le}=await r.e2eInfoFor(p))}catch(re){throw Dt({error:re})}console.log({atu8_pubkey_65:Mn(pe)});const ce=await fr(Nn(["s2r",ie,le].join("\0"))),ae=await r.ecdhEncrypt(pe,se,ce);console.log({atu8_encrypted:Mn(ae)})}})();async function q(){const P=BigInt(new be(S).shiftedBy(f.decimals).toString()),A=await r.bankSend(p,w,a,P,j);await _l.insert({type:"pending",time:Date.now(),data:A}),c.reset(),s.activateThread(Ye.HISTORY)}const M=()=>c.reset(),U=()=>q();return l.$$set=P=>{"coin"in P&&t(12,i=P.coin),"accountRef"in P&&t(13,u=P.accountRef),"amount"in P&&t(14,h=P.amount),"recipient"in P&&t(15,k=P.recipient),"encryptMemo"in P&&t(16,E=P.encryptMemo),"fee"in P&&t(17,K=P.fee),"memo"in P&&t(0,j=P.memo)},l.$$.update=()=>{l.$$.dirty&131072&&t(4,n=new be(S).plus(K).toString())},[j,_,O,T,n,o,c,a,S,w,H,q,i,u,h,k,E,K,M,U]}class Li extends J{constructor(e){super(),Q(this,e,Ii,Ri,Z,{coin:12,accountRef:13,amount:14,recipient:15,encryptMemo:16,fee:17,memo:0})}}function Oi(l){let e,t,n;function s(o){l[40](o)}let r={};return l[13]!==void 0&&(r.accountRef=l[13]),e=new Qo({props:r}),de.push(()=>Ce(e,"accountRef",s)),{c(){R(e.$$.fragment)},m(o,c){I(e,o,c),n=!0},p(o,c){const i={};!t&&c[0]&8192&&(t=!0,i.accountRef=o[13],Ne(()=>t=!1)),e.$set(i)},i(o){n||(b(e.$$.fragment,o),n=!0)},o(o){y(e.$$.fragment,o),n=!1},d(o){L(e,o)}}}function Pi(l){let e,t,n,s;function r(i){l[41](i)}function o(i){l[42](i)}let c={showValidation:l[4]};return l[6]!==void 0&&(c.error=l[6]),l[0]!==void 0&&(c.address=l[0]),e=new di({props:c}),de.push(()=>Ce(e,"error",r)),de.push(()=>Ce(e,"address",o)),{c(){R(e.$$.fragment)},m(i,a){I(e,i,a),s=!0},p(i,a){const f={};a[0]&16&&(f.showValidation=i[4]),!t&&a[0]&64&&(t=!0,f.error=i[6],Ne(()=>t=!1)),!n&&a[0]&1&&(n=!0,f.address=i[0],Ne(()=>n=!1)),e.$set(f)},i(i){s||(b(e.$$.fragment,i),s=!0)},o(i){y(e.$$.fragment,i),s=!1},d(i){L(e,i)}}}function ls(l){let e,t,n,s;function r(c){l[43](c)}let o={id:"save-contact",$$slots:{default:[Hi]},$$scope:{ctx:l}};return l[5]!==void 0&&(o.checked=l[5]),t=new pl({props:o}),de.push(()=>Ce(t,"checked",r)),{c(){e=$("div"),R(t.$$.fragment),g(e,"class","new-address svelte-uhk9ff")},m(c,i){m(c,e,i),I(t,e,null),s=!0},p(c,i){const a={};i[2]&1&&(a.$$scope={dirty:i,ctx:c}),!n&&i[0]&32&&(n=!0,a.checked=c[5],Ne(()=>n=!1)),t.$set(a)},i(c){s||(b(t.$$.fragment,c),s=!0)},o(c){y(t.$$.fragment,c),s=!1},d(c){c&&d(e),L(t)}}}function Hi(l){let e;return{c(){e=B("Save to contacts")},m(t,n){m(t,e,n)},d(t){t&&d(e)}}}function ji(l){let e,t,n=l[19].icon+"",s,r,o=l[19].text+"",c,i,a,f,u,_=l[9]&&ls(l);return{c(){e=$("span"),t=$("span"),s=N(),r=$("span"),c=B(o),a=N(),_&&_.c(),f=oe(),g(t,"class","icon svelte-uhk9ff"),g(r,"class","text svelte-uhk9ff"),g(e,"class",i="status "+l[3]+" svelte-uhk9ff")},m(p,h){m(p,e,h),v(e,t),t.innerHTML=n,v(e,s),v(e,r),v(r,c),m(p,a,h),_&&_.m(p,h),m(p,f,h),u=!0},p(p,h){(!u||h[0]&524288)&&n!==(n=p[19].icon+"")&&(t.innerHTML=n),(!u||h[0]&524288)&&o!==(o=p[19].text+"")&&ee(c,o),(!u||h[0]&8&&i!==(i="status "+p[3]+" svelte-uhk9ff"))&&g(e,"class",i),p[9]?_?(_.p(p,h),h[0]&512&&b(_,1)):(_=ls(p),_.c(),b(_,1),_.m(f.parentNode,f)):_&&(fe(),y(_,1,1,()=>{_=null}),ue())},i(p){u||(b(_),u=!0)},o(p){y(_),u=!1},d(p){p&&d(e),p&&d(a),_&&_.d(p),p&&d(f)}}}function rs(l){let e,t;return e=new he({props:{short:!0,slides:!0,key:"new-contact-name",name:"Contact Name",$$slots:{default:[zi]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s[0]&256|s[2]&1&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function os(l){let e,t;return{c(){e=$("span"),t=B(l[8]),g(e,"class","validation-message")},m(n,s){m(n,e,s),v(e,t)},p(n,s){s[0]&256&&ee(t,n[8])},d(n){n&&d(e)}}}function zi(l){let e,t,n,s,r,o=l[8]&&os(l);return{c(){e=$("input"),t=N(),o&&o.c(),n=oe(),g(e,"id","new-contact-name-value"),g(e,"type","text"),Y(e,"invalid",l[8])},m(c,i){m(c,e,i),m(c,t,i),o&&o.m(c,i),m(c,n,i),s||(r=x(e,"input",l[26]),s=!0)},p(c,i){i[0]&256&&Y(e,"invalid",c[8]),c[8]?o?o.p(c,i):(o=os(c),o.c(),o.m(n.parentNode,n)):o&&(o.d(1),o=null)},d(c){c&&d(e),c&&d(t),o&&o.d(c),c&&d(n),s=!1,r()}}}function Fi(l){let e,t,n;function s(o){l[44](o)}let r={};return l[1]!==void 0&&(r.assetRef=l[1]),e=new Bo({props:r}),de.push(()=>Ce(e,"assetRef",s)),{c(){R(e.$$.fragment)},m(o,c){I(e,o,c),n=!0},p(o,c){const i={};!t&&c[0]&2&&(t=!0,i.assetRef=o[1],Ne(()=>t=!1)),e.$set(i)},i(o){n||(b(e.$$.fragment,o),n=!0)},o(o){y(e.$$.fragment,o),n=!1},d(o){L(e,o)}}}function Bi(l){let e,t,n,s;function r(i){l[45](i)}function o(i){l[46](i)}let c={bufferMax:l[10]?vt:0,assetRef:l[1],showValidation:l[4]};return l[7]!==void 0&&(c.error=l[7]),l[2]!==void 0&&(c.value=l[2]),e=new Ko({props:c}),de.push(()=>Ce(e,"error",r)),de.push(()=>Ce(e,"value",o)),{c(){R(e.$$.fragment)},m(i,a){I(e,i,a),s=!0},p(i,a){const f={};a[0]&1024&&(f.bufferMax=i[10]?vt:0),a[0]&2&&(f.assetRef=i[1]),a[0]&16&&(f.showValidation=i[4]),!t&&a[0]&128&&(t=!0,f.error=i[7],Ne(()=>t=!1)),!n&&a[0]&4&&(n=!0,f.value=i[2],Ne(()=>n=!1)),e.$set(f)},i(i){s||(b(e.$$.fragment,i),s=!0)},o(i){y(e.$$.fragment,i),s=!1},d(i){L(e,i)}}}function is(l){let e,t,n,s,r,o,c,i,a,f,u,_;return{c(){e=$("span"),t=$("span"),t.textContent="Balance",n=N(),s=$("span"),r=B(l[11]),o=N(),c=B(l[22]),i=N(),a=$("span"),f=$("span"),f.textContent="USE MAX",g(t,"class","label svelte-uhk9ff"),g(s,"class","amount svelte-uhk9ff"),g(e,"class","balance svelte-uhk9ff"),g(f,"class","link svelte-uhk9ff"),Y(f,"disabled",l[21]),g(a,"class","use-max")},m(p,h){m(p,e,h),v(e,t),v(e,n),v(e,s),v(s,r),v(s,o),v(s,c),m(p,i,h),m(p,a,h),v(a,f),u||(_=x(f,"click",l[47]),u=!0)},p(p,h){h[0]&2048&&ee(r,p[11]),h[0]&4194304&&ee(c,p[22]),h[0]&2097152&&Y(f,"disabled",p[21])},d(p){p&&d(e),p&&d(i),p&&d(a),u=!1,_()}}}function Di(l){let e,t=l[1]&&is(l);return{c(){e=$("span"),t&&t.c(),g(e,"class","balance-line svelte-uhk9ff")},m(n,s){m(n,e,s),t&&t.m(e,null)},p(n,s){n[1]?t?t.p(n,s):(t=is(n),t.c(),t.m(e,null)):t&&(t.d(1),t=null)},d(n){n&&d(e),t&&t.d()}}}function Vi(l){let e,t,n,s;return{c(){e=$("div"),e.textContent=`${vt} SCRT`,t=N(),n=$("div"),s=B(l[20]),g(e,"class","fee-amount"),g(n,"class","fee-fiat svelte-uhk9ff")},m(r,o){m(r,e,o),m(r,t,o),m(r,n,o),v(n,s)},p(r,o){o[0]&1048576&&ee(s,r[20])},d(r){r&&d(e),r&&d(t),r&&d(n)}}}function Ui(l){let e;return{c(){e=$("div"),g(e,"class","manual-fee svelte-uhk9ff")},m(t,n){m(t,e,n)},p:C,d(t){t&&d(e)}}}function cs(l){let e,t,n,s;const r=[Xi,qi],o=[];function c(i,a){return i[14]?0:1}return e=c(l),t=o[e]=r[e](l),{c(){t.c(),n=oe()},m(i,a){o[e].m(i,a),m(i,n,a),s=!0},p(i,a){let f=e;e=c(i),e===f?o[e].p(i,a):(fe(),y(o[f],1,1,()=>{o[f]=null}),ue(),t=o[e],t?t.p(i,a):(t=o[e]=r[e](i),t.c()),b(t,1),t.m(n.parentNode,n))},i(i){s||(b(t),s=!0)},o(i){y(t),s=!1},d(i){o[e].d(i),i&&d(n)}}}function qi(l){let e;return{c(){e=$("button"),e.textContent="Enable Encrypted Memos",g(e,"class","pill")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function Xi(l){let e,t,n;function s(o){l[48](o)}let r={containerClass:"encrypt",id:"encrypted",$$slots:{default:[Ki]},$$scope:{ctx:l}};return l[16]!==void 0&&(r.checked=l[16]),e=new pl({props:r}),de.push(()=>Ce(e,"checked",s)),{c(){R(e.$$.fragment)},m(o,c){I(e,o,c),n=!0},p(o,c){const i={};c[2]&1&&(i.$$scope={dirty:c,ctx:o}),!t&&c[0]&65536&&(t=!0,i.checked=o[16],Ne(()=>t=!1)),e.$set(i)},i(o){n||(b(e.$$.fragment,o),n=!0)},o(o){y(e.$$.fragment,o),n=!1},d(o){L(e,o)}}}function Ki(l){let e;return{c(){e=B("Encrypt")},m(t,n){m(t,e,n)},d(t){t&&d(e)}}}function as(l){let e,t,n,s,r,o,c,i,a,f,u,_=l[16]&&fs(l);const p=[Gi,Wi],h=[];function S(k,w){return k[16]?1:0}return o=S(l),c=h[o]=p[o](l),{c(){e=$("div"),t=$("textarea"),n=N(),_&&_.c(),r=N(),c.c(),i=oe(),g(t,"class","svelte-uhk9ff"),g(e,"class","input")},m(k,w){m(k,e,w),v(e,t),ye(t,l[17]),v(e,n),_&&_.m(e,null),m(k,r,w),h[o].m(k,w),m(k,i,w),a=!0,f||(u=x(t,"input",l[50]),f=!0)},p(k,w){w[0]&131072&&ye(t,k[17]),k[16]?_?_.p(k,w):(_=fs(k),_.c(),_.m(e,null)):_&&(_.d(1),_=null);let E=o;o=S(k),o!==E&&(fe(),y(h[E],1,1,()=>{h[E]=null}),ue(),c=h[o],c||(c=h[o]=p[o](k),c.c()),b(c,1),c.m(i.parentNode,i))},i(k){a||(ht(()=>{s||(s=ze(e,Fe,{duration:350},!0)),s.run(1)}),b(c),a=!0)},o(k){s||(s=ze(e,Fe,{duration:350},!1)),s.run(0),y(c),a=!1},d(k){k&&d(e),_&&_.d(),k&&s&&s.end(),k&&d(r),h[o].d(k),k&&d(i),f=!1,u()}}}function fs(l){let e,t=En(l[17]||"").byteLength+"",n,s;return{c(){e=$("span"),n=B(t),s=B(" / 280"),g(e,"class","memo-length-indicator")},m(r,o){m(r,e,o),v(e,n),v(e,s)},p(r,o){o[0]&131072&&t!==(t=En(r[17]||"").byteLength+"")&&ee(n,t)},d(r){r&&d(e)}}}function Wi(l){let e,t,n;return{c(){e=$("span"),e.textContent="\u{1F512} This encrypted memo will be private to you and the receiver",g(e,"class","disclaimer good svelte-uhk9ff")},m(s,r){m(s,e,r),n=!0},i(s){n||(ht(()=>{t||(t=ze(e,Fe,{duration:350,delay:400},!0)),t.run(1)}),n=!0)},o(s){t||(t=ze(e,Fe,{duration:350,delay:400},!1)),t.run(0),n=!1},d(s){s&&d(e),s&&t&&t.end()}}}function Gi(l){let e,t,n;return{c(){e=$("span"),e.textContent="Caution: This memo is currently NOT private",g(e,"class","disclaimer svelte-uhk9ff")},m(s,r){m(s,e,r),n=!0},i(s){n||(ht(()=>{t||(t=ze(e,Fe,{duration:350,delay:400},!0)),t.run(1)}),n=!0)},o(s){t||(t=ze(e,Fe,{duration:350,delay:400},!1)),t.run(0),n=!1},d(s){s&&d(e),s&&t&&t.end()}}}function Yi(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h,S,k,w,E,D,O,F,K,H,j,T,q,M,U,P,A,V,se,pe,ie,le;e=new Pe({props:{pops:!0,title:l[23]?"Transferring":"Sending",symbol:l[23]?l[23].symbol:"",subtitle:l[12]?.name||"?"}}),n=new he({props:{short:!0,key:"sender-select",name:"From",$$slots:{default:[Oi]},$$scope:{ctx:l}}}),r=new he({props:{short:!0,key:"recipient-select",name:"To",$$slots:{default:[Pi]},$$scope:{ctx:l}}}),c=new he({props:{short:!0,key:"recipient-status",name:"",$$slots:{default:[ji]},$$scope:{ctx:l}}});let ce=l[9]&&l[5]&&rs(l);_=new he({props:{short:!0,key:"asset-select",name:"Asset",$$slots:{default:[Fi]},$$scope:{ctx:l}}}),h=new he({props:{short:!0,key:"amount",name:"Amount",$$slots:{default:[Bi]},$$scope:{ctx:l}}}),k=new he({props:{short:!0,key:"balance",name:"",$$slots:{default:[Di]},$$scope:{ctx:l}}}),O=new he({props:{short:!0,key:"fee",name:"Fee",$$slots:{post:[Ui],default:[Vi]},$$scope:{ctx:l}}});let ae=l[15]&&cs(l),re=l[15]&&as(l);return se=new dt({props:{cancel:"pop",confirm:["Next",l[51],!l[18]]}}),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),R(r.$$.fragment),o=N(),R(c.$$.fragment),i=N(),ce&&ce.c(),a=N(),f=$("hr"),u=N(),R(_.$$.fragment),p=N(),R(h.$$.fragment),S=N(),R(k.$$.fragment),w=N(),E=$("hr"),D=N(),R(O.$$.fragment),F=N(),K=$("hr"),H=N(),j=$("div"),T=$("div"),q=$("span"),M=N(),U=$("span"),U.textContent="Add memo",P=N(),ae&&ae.c(),A=N(),re&&re.c(),V=N(),R(se.$$.fragment),g(q,"class","icon dropdown svelte-uhk9ff"),g(U,"class","text"),g(T,"class","title clickable svelte-uhk9ff"),g(j,"class","memo svelte-uhk9ff"),Y(j,"expanded",l[15])},m(z,G){I(e,z,G),m(z,t,G),I(n,z,G),m(z,s,G),I(r,z,G),m(z,o,G),I(c,z,G),m(z,i,G),ce&&ce.m(z,G),m(z,a,G),m(z,f,G),m(z,u,G),I(_,z,G),m(z,p,G),I(h,z,G),m(z,S,G),I(k,z,G),m(z,w,G),m(z,E,G),m(z,D,G),I(O,z,G),m(z,F,G),m(z,K,G),m(z,H,G),m(z,j,G),v(j,T),v(T,q),q.innerHTML=_r,v(T,M),v(T,U),v(T,P),ae&&ae.m(T,null),v(j,A),re&&re.m(j,null),m(z,V,G),I(se,z,G),pe=!0,ie||(le=x(T,"click",l[49]),ie=!0)},p(z,G){const Me={};G[0]&4096&&(Me.subtitle=z[12]?.name||"?"),e.$set(Me);const He={};G[0]&8192|G[2]&1&&(He.$$scope={dirty:G,ctx:z}),n.$set(He);const We={};G[0]&81|G[2]&1&&(We.$$scope={dirty:G,ctx:z}),r.$set(We);const Be={};G[0]&524840|G[2]&1&&(Be.$$scope={dirty:G,ctx:z}),c.$set(Be),z[9]&&z[5]?ce?(ce.p(z,G),G[0]&544&&b(ce,1)):(ce=rs(z),ce.c(),b(ce,1),ce.m(a.parentNode,a)):ce&&(fe(),y(ce,1,1,()=>{ce=null}),ue());const Ae={};G[0]&2|G[2]&1&&(Ae.$$scope={dirty:G,ctx:z}),_.$set(Ae);const $e={};G[0]&1174|G[2]&1&&($e.$$scope={dirty:G,ctx:z}),h.$set($e);const Re={};G[0]&6293506|G[2]&1&&(Re.$$scope={dirty:G,ctx:z}),k.$set(Re);const De={};G[0]&1048576|G[2]&1&&(De.$$scope={dirty:G,ctx:z}),O.$set(De),z[15]?ae?(ae.p(z,G),G[0]&32768&&b(ae,1)):(ae=cs(z),ae.c(),b(ae,1),ae.m(T,null)):ae&&(fe(),y(ae,1,1,()=>{ae=null}),ue()),z[15]?re?(re.p(z,G),G[0]&32768&&b(re,1)):(re=as(z),re.c(),b(re,1),re.m(j,null)):re&&(fe(),y(re,1,1,()=>{re=null}),ue()),G[0]&32768&&Y(j,"expanded",z[15]);const Ee={};G[0]&262144&&(Ee.confirm=["Next",z[51],!z[18]]),se.$set(Ee)},i(z){pe||(b(e.$$.fragment,z),b(n.$$.fragment,z),b(r.$$.fragment,z),b(c.$$.fragment,z),b(ce),b(_.$$.fragment,z),b(h.$$.fragment,z),b(k.$$.fragment,z),b(O.$$.fragment,z),b(ae),b(re),b(se.$$.fragment,z),pe=!0)},o(z){y(e.$$.fragment,z),y(n.$$.fragment,z),y(r.$$.fragment,z),y(c.$$.fragment,z),y(ce),y(_.$$.fragment,z),y(h.$$.fragment,z),y(k.$$.fragment,z),y(O.$$.fragment,z),y(ae),y(re),y(se.$$.fragment,z),pe=!1},d(z){L(e,z),z&&d(t),L(n,z),z&&d(s),L(r,z),z&&d(o),L(c,z),z&&d(i),ce&&ce.d(z),z&&d(a),z&&d(f),z&&d(u),L(_,z),z&&d(p),L(h,z),z&&d(S),L(k,z),z&&d(w),z&&d(E),z&&d(D),L(O,z),z&&d(F),z&&d(K),z&&d(H),z&&d(j),ae&&ae.d(),re&&re.d(),z&&d(V),L(se,z),ie=!1,le()}}}function Zi(l){let e,t;return e=new ke({props:{form:!0,slides:!0,$$slots:{default:[Yi]},$$scope:{ctx:l}}}),e.$on("submit",Qi),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s[0]&8388607|s[2]&1&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}const us="usd";let vt=.01;const Ji=/^\S.{0,1023}$/,Qi=l=>{debugger;l.preventDefault()};function xi(l,e,t){let n,s,r,o,c,i,a,f,u,_,p,h,S,k,w,E;X(l,mt,te=>t(37,h=te)),X(l,Zt,te=>t(38,S=te)),X(l,At,te=>t(39,k=te)),X(l,je,te=>t(12,w=te)),X(l,xe,te=>t(57,E=te));const D=ge("page");let{sender:O=k}=e,F=E,{native:K=Object.keys(w.coins)[0]}=e,H=K,{token:j=null}=e,T=j,{recipient:q=""}=e,M=q,U=H?Ie.holdingPathFor(S,H):"",P,A=!1,V=!1;(async function(){const st=w.id,zt=await ur.get("e2e_encrypted_memos")||null;zt?.[st]&&t(14,{enabled:A,published:V}=zt[st],A)})();let se=!1;async function pe(te=!1){if(se)return;se=!0;const zt=[...(await Je.read()).contacts()];t(31,P=pr(zt,([Zl,Jl])=>({[me.bech32(Jl.address)]:Zl}))),se=!1}{const te=ul("agents",pe),st=je.subscribe(pe);Ot(()=>{te(),st()})}let ie=null,le="";function ce(){t(2,le=o),n&&t(2,le=new be(le).minus(vt).toString()),t(4,Ae++,Ae)}let ae=null;const re={none:{icon:"<svg></svg>",text:""},unknown:{icon:Oo,text:"Determining address type..."},personal:{icon:kn,text:"Personal address"},contract:{icon:Lo,text:"Contract address"}};let z="none",G=!1,Me=!1,He="",We=!1;function Be(){if(p){if(We)return!1;We=!0,H&&D.push({creator:Li,props:{accountRef:F,coin:H,recipient:M,amount:le,memo:He,encryptMemo:Me,fee:vt+""}})}else{t(4,Ae++,Ae);return}}let Ae=0,$e=!1,Re="",De="",Ee="";function ft(te){t(34,Ee=te.target.value)}function ut(te){F=te,t(13,F)}function W(te){Re=te,t(6,Re)}function _t(te){M=te,t(0,M)}function gt(te){$e=te,t(5,$e)}function qe(te){U=te,t(1,U)}function Se(te){De=te,t(7,De)}function Xe(te){le=te,t(2,le)}const Xl=()=>ce();function Kl(te){Me=te,t(16,Me)}const Wl=()=>t(15,G=!G);function Gl(){He=this.value,t(17,He)}const Yl=()=>Be();return l.$$set=te=>{"sender"in te&&t(27,O=te.sender),"native"in te&&t(28,K=te.native),"token"in te&&t(29,j=te.token),"recipient"in te&&t(30,q=te.recipient)},l.$$.update=()=>{l.$$.dirty[0]&4098&&t(10,n=U&&Ie.parseEntityPath(U)?.type==="holding"&&H?w.coins?.[H]:null),l.$$.dirty[0]&2&&t(36,s=U&&Ie.parseEntityPath(U)?.type==="token"&&T?Ie.pathFrom(T):""),l.$$.dirty[0]&1026|l.$$.dirty[1]&32&&console.log({si_native:H,g_coin:n,p_asset:U,p_token:s,g_token:T}),l.$$.dirty[0]&2|l.$$.dirty[1]&448&&k&&U&&(t(32,ie=null),queueMicrotask(async()=>{t(11,o="[...]");const te=h.cachedBalance(S,H);te&&te.timestamp>Date.now()-5*qt&&t(32,ie=new be(te.data.amount));const st=await h.bankBalance(S,H);st&&t(32,ie=new be(st.balance.amount))})),l.$$.dirty[0]&1024|l.$$.dirty[1]&2&&t(11,o=ie?Xt(ie.shiftedBy(-(n||T).decimals).toNumber()):""),l.$$.dirty[0]&2052&&t(21,c=le===o),l.$$.dirty[0]&1024&&t(35,i=(T||n)?.extra?.coingecko_id||""),l.$$.dirty[1]&20&&i&&(async()=>{const te=await Lt.coinsVersus([i],us);t(33,ae=te[i]),typeof ae=="number"&&Ke(ae,us)})(),l.$$.dirty[1]&4&&t(20,a=typeof ae=="number"?Ke(vt*ae,"usd"):""),l.$$.dirty[0]&1|l.$$.dirty[1]&64&&(M?(t(3,z="unknown"),(async()=>await h.isContract(M)?t(3,z="contract"):t(3,z="personal"))()):t(3,z="none")),l.$$.dirty[0]&8&&t(19,f=re[z]),l.$$.dirty[0]&1|l.$$.dirty[1]&1&&t(9,u=M&&P&&!(M in P)),l.$$.dirty[0]&48|l.$$.dirty[1]&8&&t(8,_=$e&&(Ae||!0)?Ee?Ji.test(Ee)?"":Ee.length>1024?"That name is way too long":"Cannot begin with space":"Enter a contact name to save new address":""),l.$$.dirty[0]&48&&$e&&!Ae&&t(8,_=""),l.$$.dirty[0]&997|l.$$.dirty[1]&8&&t(18,p=M&&le&&!Re&&!De&&(!u||!$e||Ee&&!_)||!1),l.$$.dirty[0]&197&&console.log({to:M,s_amount:le,s_err_recipient:Re,s_err_amount:De})},t(22,r=H||T?.symbol||""),[M,U,le,z,Ae,$e,Re,De,_,u,n,o,w,F,A,G,Me,He,p,f,a,c,r,T,ce,Be,ft,O,K,j,q,P,ie,ae,Ee,i,s,h,S,k,ut,W,_t,gt,qe,Se,Xe,Xl,Kl,Wl,Gl,Yl]}class jt extends J{constructor(e){super(),Q(this,e,xi,Zi,Z,{sender:27,native:28,token:29,recipient:30},null,[-1,-1,-1])}}function ec(l){let e;return{c(){e=$("div"),e.textContent="\xA0",g(e,"class","gap no-margin svelte-1rn5flx")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}class Tl extends J{constructor(e){super(),Q(this,e,null,ec,Z,{})}}function tc(l,e){const t=l.amount.padStart(e.decimals+2,"0");return t.slice(0,-e.decimals).replace(/^0+/,"0")+"."+t.slice(-e.decimals)}async function nc(l,e,t="usd"){if(l.amount==="0")return new be(0);const n=e.extra.coingecko_id,s=await Lt.coinsVersus([n],t);return new be(l.amount).shiftedBy(-e.decimals).times(s[n])}async function sc(l,e,t="usd"){const n=e.extra.coingecko_id,r=(await Lt.coinsVersus([n],t))[n],o=new be(l.amount).shiftedBy(-e.decimals).times(r);return{versus:t,balance:o,fiat:o.times(r).toNumber(),worth:r}}function lc(l){let e,t,n,s,r,o;return e=new Pe({props:{pops:!0,account:!0,network:!0,title:l[3],subtitle:l[4]}}),n=new Pt({props:{pfp:l[2],resource:l[1]||_s||null,resourcePath:l[8],title:l[5]?`${Xt(l[5].toNumber())} ${l[3]}`:"...",subtitle:`${l[6]} (${l[7]} per ${l[0]})`,actions:l[9],circular:!0}}),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),r=$("div"),g(r,"class","txns no-margin")},m(c,i){I(e,c,i),m(c,t,i),I(n,c,i),m(c,s,i),m(c,r,i),o=!0},p(c,i){const a={};i&8&&(a.title=c[3]),i&16&&(a.subtitle=c[4]),e.$set(a);const f={};i&4&&(f.pfp=c[2]),i&2&&(f.resource=c[1]||_s||null),i&40&&(f.title=c[5]?`${Xt(c[5].toNumber())} ${c[3]}`:"..."),i&193&&(f.subtitle=`${c[6]} (${c[7]} per ${c[0]})`),n.$set(f)},i(c){o||(b(e.$$.fragment,c),b(n.$$.fragment,c),o=!0)},o(c){y(e.$$.fragment,c),y(n.$$.fragment,c),o=!1},d(c){L(e,c),c&&d(t),L(n,c),c&&d(s),c&&d(r)}}}function rc(l){let e,t;return e=new ke({props:{debug:"HoldingView",nav:!0,slides:!0,$$slots:{default:[lc]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&262399&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}let _s=null;function oc(l,e,t){let n,s,r;X(l,je,O=>t(13,n=O)),X(l,mt,O=>t(14,s=O)),X(l,$t,O=>t(15,r=O));const o=ge("page");let{entityRef:c}=e;const i=c;let a="",f="",u=null,_="",p="",h="",S=null,k="",w="";async function E(){await Ie.read();const O=Ie.parseEntityPath(i);if(!O)throw new Error(`Attempted to load holding view on non-entity path "${i}"`);switch(O.type){case"holding":{t(0,a="coin"),{coin:f}=O;const F=O.chainRef,K=F===r?n:await me.at(F);t(1,u=K.coins[f]),t(3,p=f),t(4,h=u.name),t(2,_=u.pfp);const H=s.cachedBalance(O.bech32,f);let j;H&&H.timestamp>=Date.now()-2*qt?j=H.data:{balance:j}=await s.bankBalance(O.bech32,f),t(5,S=new be(j.amount).shiftedBy(-u.decimals)),sc(j,u).then(T=>{t(6,k=Ke(T.fiat,T.versus)),t(7,w=Ke(T.worth,T.versus))});break}case"token":{t(0,a="token"),(await Ie.read()).tokens(O.entityRef,Ie.fungibleInterfacesFor(n));debugger;break}default:throw new Error(`Unhandled entity type: "${O.type}"`)}}E();const D={send:{label:"Send",trigger(){o.push({creator:jt,props:f?{native:f}:{}})}}};return l.$$set=O=>{"entityRef"in O&&t(10,c=O.entityRef)},[a,u,_,p,h,S,k,w,i,D,c]}class ps extends J{constructor(e){super(),Q(this,e,oc,rc,Z,{entityRef:10})}}function ms(l,e,t){const n=l.slice();return n[23]=e[t][0],n[24]=e[t][1],n}function ds(l,e,t){const n=l.slice();n[27]=e[t][0],n[33]=e[t][1],n[34]=e[t][2],n[35]=e[t][3];const s=Ie.holdingPathFor(n[3],n[27]);n[29]=s;const r={name:n[27],pfp:n[0].pfp};n[36]=r;const o=n[35](nc(n[34],n[33]));return n[37]=o,n}function hs(l,e,t){const n=l.slice();n[27]=e[t][0],n[28]=e[t][1];const s=Ie.holdingPathFor(n[3],n[27]);return n[29]=s,n}function gs(l){let e;return{c(){e=$("div"),e.textContent="TESTNET",g(e,"class","testnet-reminder no-margin svelte-8v4b7t")},m(t,n){m(t,e,n)},d(t){t&&d(e)}}}function bs(l){let e,t,n,s,r=l[0].testnet?"testnet ":"",o,c=l[1].join(" or ")+"",i,a,f,u;function _(S,k){return S[0].testnet?cc:ic}let p=_(l),h=p(l);return{c(){e=$("div"),t=$("div"),n=$("span"),n.textContent="Warning:",s=B(" you don't have any "),o=B(r),i=B(c),a=B(" to pay gas fees."),f=N(),u=$("div"),h.c(),g(n,"class","warning"),g(t,"class","message svelte-8v4b7t"),g(u,"class","buttons"),g(e,"class","no-gas text-align_center subinfo svelte-8v4b7t")},m(S,k){m(S,e,k),v(e,t),v(t,n),v(t,s),v(t,o),v(t,i),v(t,a),v(e,f),v(e,u),h.m(u,null)},p(S,k){k[0]&1&&r!==(r=S[0].testnet?"testnet ":"")&&ee(o,r),k[0]&2&&c!==(c=S[1].join(" or ")+"")&&ee(i,c),p===(p=_(S))&&h?h.p(S,k):(h.d(1),h=p(S),h&&(h.c(),h.m(u,null)))},d(S){S&&d(e),h.d()}}}function ic(l){let e,t,n=l[1].join(" or ")+"",s;return{c(){e=$("button"),t=B("Buy "),s=B(n),g(e,"class","pill")},m(r,o){m(r,e,o),v(e,t),v(e,s)},p(r,o){o[0]&2&&n!==(n=r[1].join(" or ")+"")&&ee(s,n)},d(r){r&&d(e)}}}function cc(l){let e,t,n=l[1].join(" or ")+"",s,r,o,c;return{c(){e=$("button"),t=B("Get "),s=B(n),r=B(" from faucet"),g(e,"class","pill")},m(i,a){m(i,e,a),v(e,t),v(e,s),v(e,r),o||(c=x(e,"click",l[14]),o=!0)},p(i,a){a[0]&2&&n!==(n=i[1].join(" or ")+"")&&ee(s,n)},d(i){i&&d(e),o=!1,c()}}}function ws(l){let e,t,n,s,r=l[1].length&&bs(l);return n=new nt({props:{address:l[3],copyable:"icon"}}),{c(){r&&r.c(),e=N(),t=$("div"),R(n.$$.fragment),g(t,"class","owner-address subinfo svelte-8v4b7t")},m(o,c){r&&r.m(o,c),m(o,e,c),m(o,t,c),I(n,t,null),s=!0},p(o,c){o[1].length?r?r.p(o,c):(r=bs(o),r.c(),r.m(e.parentNode,e)):r&&(r.d(1),r=null);const i={};c[0]&8&&(i.address=o[3]),n.$set(i)},i(o){s||(b(n.$$.fragment,o),s=!0)},o(o){y(n.$$.fragment,o),s=!1},d(o){r&&r.d(o),o&&d(e),o&&d(t),L(n)}}}function ac(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function fc(l){let e,t,n=l[32],s=[];for(let o=0;o<n.length;o+=1)s[o]=ks(ds(l,n,o));const r=o=>y(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),t=!0},p(o,c){if(c[0]&777){n=o[32];let i;for(i=0;i<n.length;i+=1){const a=ds(o,n,i);s[i]?(s[i].p(a,c),b(s[i],1)):(s[i]=ks(a),s[i].c(),b(s[i],1),s[i].m(e.parentNode,e))}for(fe(),i=n.length;i<s.length;i+=1)r(i);ue()}},i(o){if(!t){for(let c=0;c<n.length;c+=1)b(s[c]);t=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)y(s[c]);t=!1},d(o){Oe(s,o),o&&d(e)}}}function ks(l){let e,t;function n(){return l[17](l[29])}return e=new tt({props:{lockIcon:!0,detail:"Native Coin",resourcePath:l[29],resource:l[36],amount:tc(l[34],l[33]),fiat:l[37].then(l[16])}}),e.$on("click",n),{c(){R(e.$$.fragment)},m(s,r){I(e,s,r),t=!0},p(s,r){l=s;const o={};r[0]&8&&(o.resourcePath=l[29]),r[0]&1&&(o.resource=l[36]),e.$set(o)},i(s){t||(b(e.$$.fragment,s),t=!0)},o(s){y(e.$$.fragment,s),t=!1},d(s){L(e,s)}}}function uc(l){let e,t,n=ve(l[0].coins),s=[];for(let o=0;o<n.length;o+=1)s[o]=vs(hs(l,n,o));const r=o=>y(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),t=!0},p(o,c){if(c[0]&265){n=ve(o[0].coins);let i;for(i=0;i<n.length;i+=1){const a=hs(o,n,i);s[i]?(s[i].p(a,c),b(s[i],1)):(s[i]=vs(a),s[i].c(),b(s[i],1),s[i].m(e.parentNode,e))}for(fe(),i=n.length;i<s.length;i+=1)r(i);ue()}},i(o){if(!t){for(let c=0;c<n.length;c+=1)b(s[c]);t=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)y(s[c]);t=!1},d(o){Oe(s,o),o&&d(e)}}}function vs(l){let e,t;function n(){return l[15](l[29])}return e=new tt({props:{lockIcon:!0,detail:"Native Coin",name:l[27],pfp:l[0].pfp,amount:dr()}}),e.$on("click",n),{c(){R(e.$$.fragment)},m(s,r){I(e,s,r),t=!0},p(s,r){l=s;const o={};r[0]&1&&(o.name=l[27]),r[0]&1&&(o.pfp=l[0].pfp),e.$set(o)},i(s){t||(b(e.$$.fragment,s),t=!0)},o(s){y(e.$$.fragment,s),t=!1},d(s){L(e,s)}}}function _c(l){return{c:C,m:C,p:C,d:C}}function pc(l){let e,t=ve(l[7](l[22])),n=[];for(let s=0;s<t.length;s+=1)n[s]=$s(ms(l,t,s));return{c(){for(let s=0;s<n.length;s+=1)n[s].c();e=oe()},m(s,r){for(let o=0;o<n.length;o+=1)n[o].m(s,r);m(s,e,r)},p(s,r){if(r[0]&129){t=ve(s[7](s[22]));let o;for(o=0;o<t.length;o+=1){const c=ms(s,t,o);n[o]?n[o].p(c,r):(n[o]=$s(c),n[o].c(),n[o].m(e.parentNode,e))}for(;o<n.length;o+=1)n[o].d(1);n.length=t.length}},d(s){Oe(n,s),s&&d(e)}}}function $s(l){let e=l[24].spec+"",t;return{c(){t=B(e)},m(n,s){m(n,t,s)},p(n,s){s[0]&1&&e!==(e=n[24].spec+"")&&ee(t,e)},d(n){n&&d(t)}}}function mc(l){let e;return{c(){e=B("Loading tokens...")},m(t,n){m(t,e,n)},p:C,d(t){t&&d(e)}}}function ys(l){let e,t,n,s,r={ctx:l,current:null,token:null,hasCatch:!1,pending:uc,then:fc,catch:ac,value:32,blocks:[,,,]};Te(l[9](),r);let o={ctx:l,current:null,token:null,hasCatch:!1,pending:mc,then:pc,catch:_c,value:22};return Te(n=Ie.readFungibleTokens(l[0]),o),{c(){e=$("div"),r.block.c(),t=N(),o.block.c(),g(e,"class","rows no-margin")},m(c,i){m(c,e,i),r.block.m(e,r.anchor=null),r.mount=()=>e,r.anchor=t,v(e,t),o.block.m(e,o.anchor=null),o.mount=()=>e,o.anchor=null,s=!0},p(c,i){l=c,Le(r,l,i),o.ctx=l,i[0]&1&&n!==(n=Ie.readFungibleTokens(l[0]))&&Te(n,o)||Le(o,l,i)},i(c){s||(b(r.block),s=!0)},o(c){for(let i=0;i<3;i+=1){const a=r.blocks[i];y(a)}s=!1},d(c){c&&d(e),r.block.d(),r.token=null,r=null,o.block.d(),o.token=null,o=null}}}function dc(l){let e,t,n,s,r,o=l[0],c,i,a,f=l[4],u,_;e=new Pe({props:{search:!0,network:!0,account:!0}});let p=l[0].testnet&&gs();s=new Pt({props:{noPfp:!0,title:l[2],subtitle:l[5].name,resource:l[5],resourcePath:l[6],actions:{send:{label:"Send",trigger:l[12]},recv:{label:"Receive",trigger:l[13]}}}});let h=ws(l);i=new Tl({});let S=ys(l);return{c(){R(e.$$.fragment),t=N(),p&&p.c(),n=N(),R(s.$$.fragment),r=N(),h.c(),c=N(),R(i.$$.fragment),a=N(),S.c(),u=oe()},m(k,w){I(e,k,w),m(k,t,w),p&&p.m(k,w),m(k,n,w),I(s,k,w),m(k,r,w),h.m(k,w),m(k,c,w),I(i,k,w),m(k,a,w),S.m(k,w),m(k,u,w),_=!0},p(k,w){k[0].testnet?p||(p=gs(),p.c(),p.m(n.parentNode,n)):p&&(p.d(1),p=null);const E={};w[0]&4&&(E.title=k[2]),w[0]&32&&(E.subtitle=k[5].name),w[0]&32&&(E.resource=k[5]),w[0]&64&&(E.resourcePath=k[6]),w[0]&96&&(E.actions={send:{label:"Send",trigger:k[12]},recv:{label:"Receive",trigger:k[13]}}),s.$set(E),w[0]&1&&Z(o,o=k[0])?(fe(),y(h,1,1,C),ue(),h=ws(k),h.c(),b(h,1),h.m(c.parentNode,c)):h.p(k,w),w[0]&16&&Z(f,f=k[4])?(fe(),y(S,1,1,C),ue(),S=ys(k),S.c(),b(S,1),S.m(u.parentNode,u)):S.p(k,w)},i(k){_||(b(e.$$.fragment,k),b(s.$$.fragment,k),b(h),b(i.$$.fragment,k),b(S),_=!0)},o(k){y(e.$$.fragment,k),y(s.$$.fragment,k),y(h),y(i.$$.fragment,k),y(S),_=!1},d(k){L(e,k),k&&d(t),p&&p.d(k),k&&d(n),L(s,k),k&&d(r),h.d(k),k&&d(c),L(i,k),k&&d(a),k&&d(u),S.d(k)}}}function hc(l){let e,t;return e=new ke({props:{debug:"HoldingsHome",nav:!0,root:!0,keyed:!0,$$slots:{default:[dc]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s[0]&127|s[1]&512&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function gc(l,e,t){let n,s,r,o,c;X(l,je,T=>t(0,n=T)),X(l,Zt,T=>t(3,s=T)),X(l,mt,T=>t(4,r=T)),X(l,At,T=>t(5,o=T)),X(l,xe,T=>t(6,c=T));const i=T=>ml(T,(q,M)=>M),a=ge("page");let f=new be(0),u=0,_=[],p,h=new Promise(T=>{p=T}),S=n;function k(){if(u-=1,!u){const T=Ke(f.toNumber(),"usd");p(T);const q=o;Ze.open(M=>M.put({...q,extra:{total_fiat_cache:T}}))}}async function w(){let T;try{T=await r.bankBalances(s)}catch(M){return Dt({error:M,text:"Network error"}),[]}const q=[];for(const[M,U]of ve(n.coins)){const P=T[M];(!P||P.balance.amount==="0")&&_.push(M),u+=1,q.push([M,n.coins[M],P?.balance||{amount:"0",denom:U.denom},async A=>{const V=await A;return f=f.plus(V),k(),V}])}return q.length||(u+=1,k()),t(1,_),t(0,n),t(11,S),q}const E={"theta-testnet-001":"https://discord.com/channels/669268347736686612/953697793476821092","pulsar-2":"https://faucet.secrettestnet.io/"},D=function(){a.push({creator:jt,props:{from:o}})},O=function(){dl(c)},F=()=>mr(E[n.id]),K=T=>{a.push({creator:ps,props:{entityRef:T}})},H=T=>Ke(T.toNumber(),"usd"),j=T=>{a.push({creator:ps,props:{entityRef:T}})};return l.$$.update=()=>{l.$$.dirty[0]&2049&&n!==S&&(t(11,S=n),f=new be(0),u=0,t(2,h=new Promise(T=>{p=T})),t(1,_=[]))},[n,_,h,s,r,o,c,i,a,w,E,S,D,O,F,K,H,j]}class bc extends J{constructor(e){super(),Q(this,e,gc,hc,Z,{},null,[-1,-1])}}function wc(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function kc(l){let e,t,n,s,r,o,c,i;return e=new he({props:{key:"profile-icon",name:"Profile icon"}}),n=new he({props:{key:"account-name",name:"Name",$$slots:{default:[vc]},$$scope:{ctx:l}}}),r=new he({props:{key:"account-address",name:"Public address",$$slots:{default:[yc]},$$scope:{ctx:l}}}),c=new dt({props:{cancel:!l[4],back:!0,confirm:["Finish",l[6],!l[3]]}}),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),R(r.$$.fragment),o=N(),R(c.$$.fragment)},m(a,f){I(e,a,f),m(a,t,f),I(n,a,f),m(a,s,f),I(r,a,f),m(a,o,f),I(c,a,f),i=!0},p(a,f){const u={};f&8194&&(u.$$scope={dirty:f,ctx:a}),n.$set(u);const _={};f&8196&&(_.$$scope={dirty:f,ctx:a}),r.$set(_);const p={};f&8&&(p.confirm=["Finish",a[6],!a[3]]),c.$set(p)},i(a){i||(b(e.$$.fragment,a),b(n.$$.fragment,a),b(r.$$.fragment,a),b(c.$$.fragment,a),i=!0)},o(a){y(e.$$.fragment,a),y(n.$$.fragment,a),y(r.$$.fragment,a),y(c.$$.fragment,a),i=!1},d(a){L(e,a),a&&d(t),L(n,a),a&&d(s),L(r,a),a&&d(o),L(c,a)}}}function vc(l){let e,t,n;return{c(){e=$("input"),g(e,"id","account-name"),g(e,"type","text"),g(e,"placeholder","Satoshi")},m(s,r){m(s,e,r),ye(e,l[1]),t||(n=x(e,"input",l[9]),t=!0)},p(s,r){r&2&&e.value!==s[1]&&ye(e,s[1])},d(s){s&&d(e),t=!1,n()}}}function $c(l){let e,t;return e=new nt({props:{copyable:!0,address:l[2]}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&4&&(r.address=n[2]),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function yc(l){let e,t;return e=new Qt({props:{address:!0,key:"account-address",$$slots:{default:[$c]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&8196&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Sc(l){let e;return{c(){e=B("Loading accounts...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function Cc(l){let e,t=l[0]?"Edit":"New",n,s,r,o,c,i={ctx:l,current:null,token:null,hasCatch:!1,pending:Sc,then:kc,catch:wc,blocks:[,,,]};return Te(l[5](),i),{c(){e=$("h3"),n=B(t),s=B(" account"),r=N(),o=oe(),i.block.c()},m(a,f){m(a,e,f),v(e,n),v(e,s),m(a,r,f),m(a,o,f),i.block.m(a,i.anchor=f),i.mount=()=>o.parentNode,i.anchor=o,c=!0},p(a,f){l=a,(!c||f&1)&&t!==(t=l[0]?"Edit":"New")&&ee(n,t),Le(i,l,f)},i(a){c||(b(i.block),c=!0)},o(a){for(let f=0;f<3;f+=1){const u=i.blocks[f];y(u)}c=!1},d(a){a&&d(e),a&&d(r),a&&d(o),i.block.d(a),i.token=null,i=null}}}function Nc(l){let e,t;return e=new ke({props:{$$slots:{default:[Cc]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&8207&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Mc(l,e,t){let n,s,r;X(l,xe,k=>t(10,s=k)),X(l,je,k=>t(8,r=k));let{account:o}=e;const c=o;let i,a="",f;const u=ge("completed"),_=ge("page");async function p(){const k=await Ze.read();t(7,i=k.at(c)),t(1,a=i.name)}async function h(){Object.assign(i,{name:a}),await Ze.open(k=>k.put(i)),c===s&&_e(xe,s=c,s),u?u(!0):_.reset()}function S(){a=this.value,t(1,a)}return l.$$set=k=>{"account"in k&&t(0,o=k.account)},l.$$.update=()=>{l.$$.dirty&2&&t(3,n=!!a),l.$$.dirty&384&&t(2,f=i?me.addressFor(i.pubkey,r):"")},[o,a,f,n,u,p,h,i,r,S]}class Ec extends J{constructor(e){super(),Q(this,e,Mc,Nc,Z,{account:0})}}function Tc(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function Ac(l){let e,t;return e=new Pt({props:{resource:l[0],resourcePath:l[1],actions:l[3],$$slots:{subtitle:[Rc]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&1&&(r.resource=n[0]),s&65&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Rc(l){let e,t;return e=new nt({props:{copyable:!0,address:me.addressFor(l[0].pubkey)}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&1&&(r.address=me.addressFor(n[0].pubkey)),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Ic(l){let e;return{c(){e=B("Loading...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function Lc(l){let e,t,n,s;e=new Pe({props:{pops:!0,search:!0,network:!0,title:"Account"}});let r={ctx:l,current:null,token:null,hasCatch:!1,pending:Ic,then:Ac,catch:Tc,blocks:[,,,]};return Te(l[2](),r),{c(){R(e.$$.fragment),t=N(),n=oe(),r.block.c()},m(o,c){I(e,o,c),m(o,t,c),m(o,n,c),r.block.m(o,r.anchor=c),r.mount=()=>n.parentNode,r.anchor=n,s=!0},p(o,c){l=o,Le(r,l,c)},i(o){s||(b(e.$$.fragment,o),b(r.block),s=!0)},o(o){y(e.$$.fragment,o);for(let c=0;c<3;c+=1){const i=r.blocks[c];y(i)}s=!1},d(o){L(e,o),o&&d(t),o&&d(n),r.block.d(o),r.token=null,r=null}}}function Oc(l){let e,t;return e=new ke({props:{nav:!0,$$slots:{default:[Lc]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&65&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Pc(l,e,t){let{accountRef:n}=e;const s=n;let r;const o=ge("page");async function c(){const a=await Ze.read();return t(0,r=a.at(s))}const i={send:{label:"Send",trigger(){o.push({creator:jt,props:{from:me.addressFor(r.pubkey)}})}},recv:{label:"Receive",trigger(){dl(s)}},edit:{label:"Edit",trigger(){o.push({creator:Ec,props:{account:s}})}}};return l.$$set=a=>{"accountRef"in a&&t(4,n=a.accountRef)},[r,s,c,i,n]}class Hc extends J{constructor(e){super(),Q(this,e,Pc,Oc,Z,{accountRef:4})}}function Ss(l,e,t){const n=l.slice();n[5]=e[t][0],n[6]=e[t][1];const s=me.addressFor(n[6].pubkey);return n[7]=s,n}function jc(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function zc(l){let e=l[1],t,n,s=Ns(l);return{c(){s.c(),t=oe()},m(r,o){s.m(r,o),m(r,t,o),n=!0},p(r,o){o&2&&Z(e,e=r[1])?(fe(),y(s,1,1,C),ue(),s=Ns(r),s.c(),b(s,1),s.m(t.parentNode,t)):s.p(r,o)},i(r){n||(b(s),n=!0)},o(r){y(s),n=!1},d(r){r&&d(t),s.d(r)}}}function Fc(l){let e,t,n,s,r;return n=new nt({props:{address:l[7]}}),{c(){e=$("div"),e.textContent="StarShell - - m/44'/118'/0'/0/??",t=N(),R(n.$$.fragment),s=N(),g(e,"class","hd-path")},m(o,c){m(o,e,c),m(o,t,c),I(n,o,c),m(o,s,c),r=!0},p(o,c){const i={};c&1&&(i.address=o[7]),n.$set(i)},i(o){r||(b(n.$$.fragment,o),r=!0)},o(o){y(n.$$.fragment,o),r=!1},d(o){o&&d(e),o&&d(t),L(n,o),o&&d(s)}}}function Cs(l){let e,t;function n(){return l[4](l[5])}return e=new tt({props:{resource:l[6],resourcePath:l[5],address:l[7],iconClass:"square pfp",$$slots:{detail:[Fc]},$$scope:{ctx:l}}}),e.$on("click",n),{c(){R(e.$$.fragment)},m(s,r){I(e,s,r),t=!0},p(s,r){l=s;const o={};r&1&&(o.resource=l[6]),r&1&&(o.resourcePath=l[5]),r&1&&(o.address=l[7]),r&1025&&(o.$$scope={dirty:r,ctx:l}),e.$set(o)},i(s){t||(b(e.$$.fragment,s),t=!0)},o(s){y(e.$$.fragment,s),t=!1},d(s){L(e,s)}}}function Ns(l){let e,t,n=l[0],s=[];for(let o=0;o<n.length;o+=1)s[o]=Cs(Ss(l,n,o));const r=o=>y(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),t=!0},p(o,c){if(c&5){n=o[0];let i;for(i=0;i<n.length;i+=1){const a=Ss(o,n,i);s[i]?(s[i].p(a,c),b(s[i],1)):(s[i]=Cs(a),s[i].c(),b(s[i],1),s[i].m(e.parentNode,e))}for(fe(),i=n.length;i<s.length;i+=1)r(i);ue()}},i(o){if(!t){for(let c=0;c<n.length;c+=1)b(s[c]);t=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)y(s[c]);t=!1},d(o){Oe(s,o),o&&d(e)}}}function Bc(l){let e;return{c(){e=B("Loading...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function Dc(l){let e,t,n,s,r,o;e=new Pe({props:{search:!0,network:!0,account:!0}}),n=new Ht({props:{title:"Accounts"}});let c={ctx:l,current:null,token:null,hasCatch:!1,pending:Bc,then:zc,catch:jc,blocks:[,,,]};return Te(l[3](),c),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),r=$("div"),c.block.c(),g(r,"class","rows no-margin")},m(i,a){I(e,i,a),m(i,t,a),I(n,i,a),m(i,s,a),m(i,r,a),c.block.m(r,c.anchor=null),c.mount=()=>r,c.anchor=null,o=!0},p(i,a){l=i,Le(c,l,a)},i(i){o||(b(e.$$.fragment,i),b(n.$$.fragment,i),b(c.block),o=!0)},o(i){y(e.$$.fragment,i),y(n.$$.fragment,i);for(let a=0;a<3;a+=1){const f=c.blocks[a];y(f)}o=!1},d(i){L(e,i),i&&d(t),L(n,i),i&&d(s),i&&d(r),c.block.d(),c.token=null,c=null}}}function Vc(l){let e,t;return e=new ke({props:{debug:"Accounts",nav:!0,root:!0,$$slots:{default:[Dc]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&1027&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Uc(l,e,t){let n;X(l,je,i=>t(1,n=i));const s=ge("page");let r;async function o(){const i=await Ze.read();return t(0,r=i.entries())}return[r,n,s,o,i=>s.push({creator:Hc,props:{accountRef:i}})]}class qc extends J{constructor(e){super(),Q(this,e,Uc,Vc,Z,{})}}let Xc=1;function Al(){return`svelte-tabs-${Xc++}`}function Kc(l){let e,t,n,s;const r=l[4].default,o=rt(r,l,l[3],null);return{c(){e=$("div"),o&&o.c(),g(e,"class","svelte-tabs")},m(c,i){m(c,e,i),o&&o.m(e,null),t=!0,n||(s=x(e,"keydown",l[1]),n=!0)},p(c,[i]){o&&o.p&&(!t||i&8)&&ot(o,r,c,c[3],t?ct(r,c[3],i,null):it(c[3]),null)},i(c){t||(b(o,c),t=!0)},o(c){y(o,c),t=!1},d(c){c&&d(e),o&&o.d(c),n=!1,s()}}}const vn={};function Wc(l,e,t){const n=l.indexOf(e);l.splice(n,1),t.update(s=>s===e?l[n]||l[l.length-1]:s)}function Gc(l,e,t){let n,{$$slots:s={},$$scope:r}=e,{initialSelectedIndex:o=0}=e;const c=[],i=[],a=[],f=Ft({}),u=Ft({}),_=Ft(null);X(l,_,w=>t(5,n=w));const p=Ft(null);function h(w,E,D){w.push(E),D.update(O=>O||E),Ot(()=>Wc(w,E,D))}function S(w){const E=i.indexOf(w);_.set(w),p.set(a[E])}hr(vn,{registerTab(w){h(i,w,_)},registerTabElement(w){c.push(w)},registerPanel(w){h(a,w,p)},selectTab:S,selectedTab:_,selectedPanel:p,controls:f,labeledBy:u}),Gt(()=>{S(i[o])}),gr(()=>{for(let w=0;w<i.length;w++)f.update(E=>({...E,[i[w].id]:a[w].id})),u.update(E=>({...E,[a[w].id]:i[w].id}))});async function k(w){if(w.target.classList.contains("svelte-tabs__tab")){let E=i.indexOf(n);switch(w.key){case"ArrowRight":E+=1,E>i.length-1&&(E=0),S(i[E]),c[E].focus();break;case"ArrowLeft":E-=1,E<0&&(E=i.length-1),S(i[E]),c[E].focus()}}}return l.$$set=w=>{"initialSelectedIndex"in w&&t(2,o=w.initialSelectedIndex),"$$scope"in w&&t(3,r=w.$$scope)},[_,k,o,r,s]}class Yc extends J{constructor(e){super(),Q(this,e,Gc,Kc,Z,{initialSelectedIndex:2})}}function Zc(l){let e,t,n,s,r,o;const c=l[9].default,i=rt(c,l,l[8],null);return{c(){e=$("li"),i&&i.c(),g(e,"role","tab"),g(e,"id",l[3].id),g(e,"aria-controls",t=l[2][l[3].id]),g(e,"aria-selected",l[1]),g(e,"tabindex",n=l[1]?0:-1),g(e,"class","svelte-tabs__tab svelte-1fbofsd"),Y(e,"svelte-tabs__selected",l[1])},m(a,f){m(a,e,f),i&&i.m(e,null),l[10](e),s=!0,r||(o=x(e,"click",l[11]),r=!0)},p(a,[f]){i&&i.p&&(!s||f&256)&&ot(i,c,a,a[8],s?ct(c,a[8],f,null):it(a[8]),null),(!s||f&4&&t!==(t=a[2][a[3].id]))&&g(e,"aria-controls",t),(!s||f&2)&&g(e,"aria-selected",a[1]),(!s||f&2&&n!==(n=a[1]?0:-1))&&g(e,"tabindex",n),f&2&&Y(e,"svelte-tabs__selected",a[1])},i(a){s||(b(i,a),s=!0)},o(a){y(i,a),s=!1},d(a){a&&d(e),i&&i.d(a),l[10](null),r=!1,o()}}}function Jc(l,e,t){let n,s,{$$slots:r={},$$scope:o}=e,c;const i={id:Al()},{registerTab:a,registerTabElement:f,selectTab:u,selectedTab:_,controls:p}=ge(vn);X(l,_,w=>t(7,n=w)),X(l,p,w=>t(2,s=w));let h;a(i),Gt(async()=>{await ln(),f(c)});function S(w){de[w?"unshift":"push"](()=>{c=w,t(0,c)})}const k=()=>u(i);return l.$$set=w=>{"$$scope"in w&&t(8,o=w.$$scope)},l.$$.update=()=>{l.$$.dirty&128&&t(1,h=n===i)},[c,h,s,i,u,_,p,n,o,r,S,k]}class en extends J{constructor(e){super(),Q(this,e,Jc,Zc,Z,{})}}function Qc(l){let e,t;const n=l[1].default,s=rt(n,l,l[0],null);return{c(){e=$("ul"),s&&s.c(),g(e,"role","tablist"),g(e,"class","svelte-tabs__tab-list svelte-12yby2a")},m(r,o){m(r,e,o),s&&s.m(e,null),t=!0},p(r,[o]){s&&s.p&&(!t||o&1)&&ot(s,n,r,r[0],t?ct(n,r[0],o,null):it(r[0]),null)},i(r){t||(b(s,r),t=!0)},o(r){y(s,r),t=!1},d(r){r&&d(e),s&&s.d(r)}}}function xc(l,e,t){let{$$slots:n={},$$scope:s}=e;return l.$$set=r=>{"$$scope"in r&&t(0,s=r.$$scope)},[s,n]}class ea extends J{constructor(e){super(),Q(this,e,xc,Qc,Z,{})}}function Ms(l){let e;const t=l[6].default,n=rt(t,l,l[5],null);return{c(){n&&n.c()},m(s,r){n&&n.m(s,r),e=!0},p(s,r){n&&n.p&&(!e||r&32)&&ot(n,t,s,s[5],e?ct(t,s[5],r,null):it(s[5]),null)},i(s){e||(b(n,s),e=!0)},o(s){y(n,s),e=!1},d(s){n&&n.d(s)}}}function ta(l){let e,t,n,s=l[1]===l[2]&&Ms(l);return{c(){e=$("div"),s&&s.c(),g(e,"id",l[2].id),g(e,"aria-labelledby",t=l[0][l[2].id]),g(e,"class","svelte-tabs__tab-panel svelte-epfyet"),g(e,"role","tabpanel")},m(r,o){m(r,e,o),s&&s.m(e,null),n=!0},p(r,[o]){r[1]===r[2]?s?(s.p(r,o),o&2&&b(s,1)):(s=Ms(r),s.c(),b(s,1),s.m(e,null)):s&&(fe(),y(s,1,1,()=>{s=null}),ue()),(!n||o&1&&t!==(t=r[0][r[2].id]))&&g(e,"aria-labelledby",t)},i(r){n||(b(s),n=!0)},o(r){y(s),n=!1},d(r){r&&d(e),s&&s.d()}}}function na(l,e,t){let n,s,{$$slots:r={},$$scope:o}=e;const c={id:Al()},{registerPanel:i,selectedPanel:a,labeledBy:f}=ge(vn);return X(l,a,u=>t(1,s=u)),X(l,f,u=>t(0,n=u)),i(c),l.$$set=u=>{"$$scope"in u&&t(5,o=u.$$scope)},[n,s,c,a,f,o,r]}class tn extends J{constructor(e){super(),Q(this,e,na,ta,Z,{})}}var sa='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M64 224h13.5c24.7 56.5 80.9 96 146.5 96s121.8-39.5 146.5-96H384c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-13.5C345.8 39.5 289.6 0 224 0S102.2 39.5 77.5 96H64c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zm40-88c0-22.1 21.5-40 48-40h144c26.5 0 48 17.9 48 40v24c0 53-43 96-96 96h-48c-53 0-96-43-96-96v-24zm72 72l12-36 36-12-36-12-12-36-12 36-36 12 36 12 12 36zm151.6 113.4C297.7 340.7 262.2 352 224 352s-73.7-11.3-103.6-30.6C52.9 328.5 0 385 0 454.4v9.6c0 26.5 21.5 48 48 48h80v-64c0-17.7 14.3-32 32-32h128c17.7 0 32 14.3 32 32v64h80c26.5 0 48-21.5 48-48v-9.6c0-69.4-52.9-125.9-120.4-133zM272 448c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-96 0c-8.8 0-16 7.2-16 16v48h32v-48c0-8.8-7.2-16-16-16z"/></svg>';function la(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h,S,k;return e=new Pe({props:{pops:!0,title:"Not yet available"}}),{c(){R(e.$$.fragment),t=N(),n=$("h3"),n.textContent="Nothing to see here!",s=N(),r=$("p"),r.textContent="This screen has not yet been implemented.",o=N(),c=$("p"),c.textContent="Please continue exploring the beta.",i=N(),a=$("center"),f=$("span"),u=N(),_=$("div"),p=$("button"),p.textContent="Continue",g(f,"class","icon svelte-o7n71o"),g(p,"class","primary"),g(_,"class","action-line")},m(w,E){I(e,w,E),m(w,t,E),m(w,n,E),m(w,s,E),m(w,r,E),m(w,o,E),m(w,c,E),m(w,i,E),m(w,a,E),v(a,f),f.innerHTML=sa,m(w,u,E),m(w,_,E),v(_,p),h=!0,S||(k=x(p,"click",l[2]),S=!0)},p:C,i(w){h||(b(e.$$.fragment,w),h=!0)},o(w){y(e.$$.fragment,w),h=!1},d(w){L(e,w),w&&d(t),w&&d(n),w&&d(s),w&&d(r),w&&d(o),w&&d(c),w&&d(i),w&&d(a),w&&d(u),w&&d(_),S=!1,k()}}}function ra(l){let e,t;return e=new ke({props:{$$slots:{default:[la]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&64&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function oa(l,e,t){let n;X(l,yt,a=>t(3,n=a));let{reset:s=!1}=e;const r=s,o=ge("page");function c(){r?(o.reset(),n.activateThread(Ye.TOKENS)):o.pop()}const i=()=>c();return l.$$set=a=>{"reset"in a&&t(1,s=a.reset)},[c,s,i]}class Rl extends J{constructor(e){super(),Q(this,e,oa,ra,Z,{reset:1})}}function ia(l){let e,t;return e=new Pt({props:{resource:l[0],resourcePath:l[1],actions:l[2],$$slots:{subtitle:[fa],default:[aa]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&1&&(r.resource=n[0]),s&65&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function ca(l){let e;return{c(){e=B("Loading contact...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function aa(l){let e;return{c(){e=B("address")},m(t,n){m(t,e,n)},d(t){t&&d(e)}}}function fa(l){let e,t;return e=new nt({props:{copyable:!0,address:me.bech32(l[0].address)}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&1&&(r.address=me.bech32(n[0].address)),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function ua(l){let e,t,n,s,r,o;e=new Pe({props:{pops:!0,search:!0,network:!0,account:!0}});const c=[ca,ia],i=[];function a(f,u){return f[0]?1:0}return n=a(l),s=i[n]=c[n](l),{c(){R(e.$$.fragment),t=N(),s.c(),r=oe()},m(f,u){I(e,f,u),m(f,t,u),i[n].m(f,u),m(f,r,u),o=!0},p(f,u){let _=n;n=a(f),n===_?i[n].p(f,u):(fe(),y(i[_],1,1,()=>{i[_]=null}),ue(),s=i[n],s?s.p(f,u):(s=i[n]=c[n](f),s.c()),b(s,1),s.m(r.parentNode,r))},i(f){o||(b(e.$$.fragment,f),b(s),o=!0)},o(f){y(e.$$.fragment,f),y(s),o=!1},d(f){L(e,f),f&&d(t),i[n].d(f),f&&d(r)}}}function _a(l){let e,t;return e=new ke({props:{nav:!0,slides:!0,$$slots:{default:[ua]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&65&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function pa(l,e,t){let{contactRef:n}=e;const s=n;let r;Je.getContact(s).then(i=>t(0,r=i));const o=ge("page"),c={send:{label:"Send",trigger(){o.push({creator:jt,props:{to:me.bech32(r.address)}})}},edit:{label:"Edit",trigger(){o.push({creator:Ll,props:{contactRef:s}})}},delete:{label:"Delete",trigger(){o.push({creator:Rl})}}};return l.$$set=i=>{"contactRef"in i&&t(3,n=i.contactRef)},l.$$.update=()=>{l.$$.dirty&1&&r&&me.bech32(r.address)},[r,s,c,n]}class Il extends J{constructor(e){super(),Q(this,e,pa,_a,Z,{contactRef:3})}}var ma=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86-3 3.87L9 13.14 6 17h12l-3.86-5.14z"/>
</svg>`;function da(l){let e,t;return e=new It({props:{dim:48,ref:l[0],name:l[1]}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p:C,i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function ha(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h,S,k=l[0]&&da(l);return{c(){e=$("div"),t=$("div"),n=$("span"),k&&k.c(),s=N(),r=$("span"),o=$("div"),o.innerHTML=`<span class="warning svelte-1i7pjsy">Notice:</span> 
				<span class="info">Uploaded icons will be resized to be square. Only JPG &amp; PNG files less than 1MB allowed.</span>`,c=N(),i=$("div"),a=$("div"),f=$("span"),u=N(),_=$("span"),_.textContent="Upload Icon",g(n,"class","left svelte-1i7pjsy"),g(o,"class","disclaimer svelte-1i7pjsy"),g(f,"class","icon svelte-1i7pjsy"),g(_,"class","text svelte-1i7pjsy"),g(a,"class","upload svelte-1i7pjsy"),g(i,"class","actions svelte-1i7pjsy"),g(r,"class","right svelte-1i7pjsy"),g(t,"class","row svelte-1i7pjsy"),g(e,"class","area svelte-1i7pjsy"),Y(e,"intent-person",l[2]==="person")},m(w,E){m(w,e,E),v(e,t),v(t,n),k&&k.m(n,null),v(t,s),v(t,r),v(r,o),v(r,c),v(r,i),v(i,a),v(a,f),f.innerHTML=ma,v(a,u),v(a,_),p=!0,h||(S=x(a,"click",l[6]),h=!0)},p(w,[E]){w[0]&&k.p(w,E)},i(w){p||(b(k),p=!0)},o(w){y(k),p=!1},d(w){w&&d(e),k&&k.d(),h=!1,S()}}}function ga(l,e,t){let{pfpRef:n}=e;const s=n||"";let{name:r=""}=e;const o=r;let{intent:c="token"}=e;const i=c;(async()=>s&&await br.at(s))();const a=()=>wr;return l.$$set=f=>{"pfpRef"in f&&t(3,n=f.pfpRef),"name"in f&&t(4,r=f.name),"intent"in f&&t(5,c=f.intent)},[s,o,i,n,r,c,a]}class ba extends J{constructor(e){super(),Q(this,e,ga,ha,Z,{pfpRef:3,name:4,intent:5})}}function wa(l){let e,t,n;function s(o){l[17](o)}let r={intent:"person",pfpRef:l[0]?.pfp};return l[1]!==void 0&&(r.name=l[1]),e=new ba({props:r}),de.push(()=>Ce(e,"name",s)),{c(){R(e.$$.fragment)},m(o,c){I(e,o,c),n=!0},p(o,c){const i={};c&1&&(i.pfpRef=o[0]?.pfp),!t&&c&2&&(t=!0,i.name=o[1],Ne(()=>t=!1)),e.$set(i)},i(o){n||(b(e.$$.fragment,o),n=!0)},o(o){y(e.$$.fragment,o),n=!1},d(o){L(e,o)}}}function ka(l){let e,t,n,s=Kt(l[9])+"",r,o,c,i,a=ve(l[3]).filter(l[18]).map(As).join(", ")+"",f,u;return{c(){e=$("style"),e.textContent=`.font-family_mono {
  font-family: 'PT Mono';
  white-space: pre;
}
.hide-scrollbar {
  scrollbar-width: none;
}
.hide-scrollbar::-webkit-scrollbar {
  display: none;
}
.hide-scrollbar::-webkit-scrollbar-track {
  display: none;
}
.hide-scrollbar::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.2);
}
.title {
  font-family: Poppins;
  font-weight: 400;
  font-size: 14px;
  color: var(--theme-color-text-light);
}
.examples {
  margin-left: 0.5em;
}`,t=N(),n=$("span"),r=B(s),o=N(),c=$("span"),i=B("("),f=B(a),u=B(")"),g(e,"lang","less"),g(n,"class","title"),g(c,"class","examples")},m(_,p){m(_,e,p),m(_,t,p),m(_,n,p),v(n,r),m(_,o,p),m(_,c,p),v(c,i),v(c,f),v(c,u)},p(_,p){p&512&&s!==(s=Kt(_[9])+"")&&ee(r,s),p&520&&a!==(a=ve(_[3]).filter(_[18]).map(As).join(", ")+"")&&ee(f,a)},d(_){_&&d(e),_&&d(t),_&&d(n),_&&d(o),_&&d(c)}}}function va(l){let e,t;return e=new Qt({props:{key:"chain-family",$$slots:{default:[ka]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&268435976&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Es(l){let e,t;return{c(){e=$("span"),t=B(l[4]),g(e,"class","validation-message")},m(n,s){m(n,e,s),v(e,t)},p(n,s){s&16&&ee(t,n[4])},d(n){n&&d(e)}}}function $a(l){let e,t,n,s,r,o=l[4]&&Es(l);return{c(){e=$("input"),t=N(),o&&o.c(),n=oe(),g(e,"type","text"),g(e,"spellcheck","false"),g(e,"placeholder","Enter a name"),Y(e,"invalid",l[4])},m(c,i){m(c,e,i),ye(e,l[1]),m(c,t,i),o&&o.m(c,i),m(c,n,i),s||(r=x(e,"input",l[19]),s=!0)},p(c,i){i&2&&e.value!==c[1]&&ye(e,c[1]),i&16&&Y(e,"invalid",c[4]),c[4]?o?o.p(c,i):(o=Es(c),o.c(),o.m(n.parentNode,n)):o&&(o.d(1),o=null)},d(c){c&&d(e),c&&d(t),o&&o.d(c),c&&d(n),s=!1,r()}}}function Ts(l){let e,t;return{c(){e=$("span"),t=B(l[5]),g(e,"class","validation-message")},m(n,s){m(n,e,s),v(e,t)},p(n,s){s&32&&ee(t,n[5])},d(n){n&&d(e)}}}function ya(l){let e,t,n,s,r,o,c=l[5]&&Ts(l);return{c(){e=$("input"),n=N(),c&&c.c(),s=oe(),g(e,"type","text"),g(e,"class","address"),g(e,"spellcheck","false"),g(e,"placeholder",t=l[10].bech32s.acc+"1..."),Y(e,"invalid",l[5])},m(i,a){m(i,e,a),ye(e,l[2]),m(i,n,a),c&&c.m(i,a),m(i,s,a),r||(o=x(e,"input",l[20]),r=!0)},p(i,a){a&1024&&t!==(t=i[10].bech32s.acc+"1...")&&g(e,"placeholder",t),a&4&&e.value!==i[2]&&ye(e,i[2]),a&32&&Y(e,"invalid",i[5]),i[5]?c?c.p(i,a):(c=Ts(i),c.c(),c.m(s.parentNode,s)):c&&(c.d(1),c=null)},d(i){i&&d(e),i&&d(n),c&&c.d(i),i&&d(s),r=!1,o()}}}function Sa(l){let e,t,n;return{c(){e=$("textarea"),g(e,"placeholder","")},m(s,r){m(s,e,r),ye(e,l[7]),t||(n=x(e,"input",l[21]),t=!0)},p(s,r){r&128&&ye(e,s[7])},d(s){s&&d(e),t=!1,n()}}}function Ca(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h,S,k,w,E,D,O,F,K,H=l[12]?"Save":"Add",j,T,q,M,U;return e=new Pe({props:{plain:!0,pops:!0,title:(l[12]?"Edit":"Add New")+" Contact"}}),n=new he({props:{key:"contact-pfp",name:"Profile Icon",$$slots:{default:[wa]},$$scope:{ctx:l}}}),r=new he({props:{key:"chain-family",name:"Chain Family",$$slots:{default:[va]},$$scope:{ctx:l}}}),c=new he({props:{key:"contact-name",name:"Name",$$slots:{default:[$a]},$$scope:{ctx:l}}}),a=new he({props:{key:"contact-address",name:"Address",$$slots:{default:[ya]},$$scope:{ctx:l}}}),u=new he({props:{key:"contact-notes",name:"Secure Notes",$$slots:{default:[Sa]},$$scope:{ctx:l}}}),w=new hl({props:{editable:!0,resourcePath:l[12]}}),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),R(r.$$.fragment),o=N(),R(c.$$.fragment),i=N(),R(a.$$.fragment),f=N(),R(u.$$.fragment),_=N(),p=$("hr"),h=N(),S=$("h3"),S.textContent=`${l[12]?"Edit":"Add"} Tags`,k=N(),R(w.$$.fragment),E=N(),D=$("div"),O=$("button"),O.textContent="Back",F=N(),K=$("button"),j=B(H),g(K,"class","primary"),g(K,"readonly",T=!l[8]),g(D,"class","action-line")},m(P,A){I(e,P,A),m(P,t,A),I(n,P,A),m(P,s,A),I(r,P,A),m(P,o,A),I(c,P,A),m(P,i,A),I(a,P,A),m(P,f,A),I(u,P,A),m(P,_,A),m(P,p,A),m(P,h,A),m(P,S,A),m(P,k,A),I(w,P,A),m(P,E,A),m(P,D,A),v(D,O),v(D,F),v(D,K),v(K,j),q=!0,M||(U=[x(O,"click",l[22]),x(K,"click",l[23])],M=!0)},p(P,A){const V={};A&268435459&&(V.$$scope={dirty:A,ctx:P}),n.$set(V);const se={};A&268435976&&(se.$$scope={dirty:A,ctx:P}),r.$set(se);const pe={};A&268435474&&(pe.$$scope={dirty:A,ctx:P}),c.$set(pe);const ie={};A&268436516&&(ie.$$scope={dirty:A,ctx:P}),a.$set(ie);const le={};A&268435584&&(le.$$scope={dirty:A,ctx:P}),u.$set(le),(!q||A&256&&T!==(T=!P[8]))&&g(K,"readonly",T)},i(P){q||(b(e.$$.fragment,P),b(n.$$.fragment,P),b(r.$$.fragment,P),b(c.$$.fragment,P),b(a.$$.fragment,P),b(u.$$.fragment,P),b(w.$$.fragment,P),q=!0)},o(P){y(e.$$.fragment,P),y(n.$$.fragment,P),y(r.$$.fragment,P),y(c.$$.fragment,P),y(a.$$.fragment,P),y(u.$$.fragment,P),y(w.$$.fragment,P),q=!1},d(P){L(e,P),P&&d(t),L(n,P),P&&d(s),L(r,P),P&&d(o),L(c,P),P&&d(i),L(a,P),P&&d(f),L(u,P),P&&d(_),P&&d(p),P&&d(h),P&&d(S),P&&d(k),L(w,P),P&&d(E),P&&d(D),M=!1,Qe(U)}}}function Na(l){let e,t,n={leaves:!0,$$slots:{default:[Ca]},$$scope:{ctx:l}};return e=new ke({props:n}),l[24](e),{c(){R(e.$$.fragment)},m(s,r){I(e,s,r),t=!0},p(s,[r]){const o={};r&268437439&&(o.$$scope={dirty:r,ctx:s}),e.$set(o)},i(s){t||(b(e.$$.fragment,s),t=!0)},o(s){y(e.$$.fragment,s),t=!1},d(s){l[24](null),L(e,s)}}}const As=([,l])=>l.bech32s.acc.hrp;function Ma(l,e,t){let n,s,r,o,c,i,a,f;X(l,Jt,A=>t(9,a=A)),X(l,je,A=>t(10,f=A));const u=ge("page");let{contactRef:_=""}=e;const p=_||"";let h;p&&Je.getContact(p).then(A=>t(0,h=A));let S={};(async function(){t(3,S=kr((await me.read()).entries()))})();let k="",w="";function E(A,V=!1){const se=vr.exec(A);if(!se)return V&&t(5,w="Invalid Bech32 address"),"";const[,pe,ie]=se;let le=null;for(const[,ce]of ve(H_CHAINS))if(ce.def.bechPrefix===pe){le=ce;break}return V&&(le?t(5,w=""):t(5,w=`No Cosmos SDK chains matched '${pe}'`)),t(16,s=ie)}let D=0,O;async function F(){if(i)p?(Object.assign(h,{name:n,address:s,pfp:h.pfp,agentType:c,notes:o}),u.reset()):t(0,h={name:n,family:a,address:s,pfp:h.pfp,agentType:c,notes:o,space:"acc",origin:"user",chains:{}});else{t(15,D++,D);return}try{await Je.open(async A=>{await A.putContact(h)}),u.reset(),u.push({creator:Il,props:{contactRef:p}})}catch{}}function K(A){n=A,t(1,n),t(0,h)}const H=([,A])=>a===A.family;function j(){n=this.value,t(1,n),t(0,h)}function T(){r=this.value,t(2,r),t(16,s),t(0,h)}function q(){o=this.value,t(7,o),t(0,h)}const M=()=>u.pop(),U=()=>F();function P(A){de[A?"unshift":"push"](()=>{O=A,t(6,O)})}return l.$$set=A=>{"contactRef"in A&&t(14,_=A.contactRef)},l.$$.update=()=>{l.$$.dirty&1&&t(1,n=h?.name||""),l.$$.dirty&1&&t(16,s=h?.address||""),l.$$.dirty&65536&&t(2,r=s?me.bech32(s):""),l.$$.dirty&1&&t(7,o=h?.notes||""),l.$$.dirty&1&&(c=h?.agentType||rn.PERSON),l.$$.dirty&6&&t(8,i=!!(n&&E(r))),l.$$.dirty&32774&&D&&(t(4,k=n?"":"Name must not be empty"),E(r,!0))},[h,n,r,S,k,w,O,o,i,a,f,u,p,F,_,D,s,K,H,j,T,q,M,U,P]}class Ll extends J{constructor(e){super(),Q(this,e,Ma,Na,Z,{contactRef:14})}}var Ea=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-more-vert-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-more-vert-fg" d="M12 8C13.1 8 14 7.1 14 6C14 4.9 13.1 4 12 4C10.9 4 10 4.9 10 6C10 7.1 10.9 8 12 8ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10ZM12 16C10.9 16 10 16.9 10 18C10 19.1 10.9 20 12 20C13.1 20 14 19.1 14 18C14 16.9 13.1 16 12 16Z" fill="#FFB61A"/>
</svg>
`,Ta=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M9 16h6v-6h4l-7-7-7 7h4v6zm3-10.17L14.17 8H13v6h-2V8H9.83L12 5.83zM5 18h14v2H5z"/>
</svg>`;function Rs(l,e,t){const n=l.slice();return n[13]=e[t][0],n[14]=e[t][1],n}function Is(l,e,t){const n=l.slice();return n[17]=e[t],n}function Aa(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function Ra(l){let e,t,n=l[12],s=[];for(let o=0;o<n.length;o+=1)s[o]=Ps(Rs(l,n,o));const r=o=>y(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),t=!0},p(o,c){if(c&63){n=o[12];let i;for(i=0;i<n.length;i+=1){const a=Rs(o,n,i);s[i]?(s[i].p(a,c),b(s[i],1)):(s[i]=Ps(a),s[i].c(),b(s[i],1),s[i].m(e.parentNode,e))}for(fe(),i=n.length;i<s.length;i+=1)r(i);ue()}},i(o){if(!t){for(let c=0;c<n.length;c+=1)b(s[c]);t=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)y(s[c]);t=!1},d(o){Oe(s,o),o&&d(e)}}}function Ia(l){let e,t,n;return e=new nt({props:{address:me.bech32(l[14].address+"")}}),{c(){R(e.$$.fragment),t=N()},m(s,r){I(e,s,r),m(s,t,r),n=!0},p:C,i(s){n||(b(e.$$.fragment,s),n=!0)},o(s){y(e.$$.fragment,s),n=!1},d(s){L(e,s),s&&d(t)}}}function La(l){let e;return{c(){e=$("span"),g(e,"class","icon contact-type svelte-1l93agm"),g(e,"slot","prefix")},m(t,n){m(t,e,n),e.innerHTML=kn},p:C,d(t){t&&d(e)}}}function Oa(l){let e,t,n;return e=new hl({props:{collapsed:!0,rootStyle:"margin: 0px;",resourcePath:l[13],$$slots:{prefix:[La]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment),t=N()},m(s,r){I(e,s,r),m(s,t,r),n=!0},p(s,r){const o={};r&1048576&&(o.$$scope={dirty:r,ctx:s}),e.$set(o)},i(s){n||(b(e.$$.fragment,s),n=!0)},o(s){y(e.$$.fragment,s),n=!1},d(s){L(e,s),s&&d(t)}}}function Ls(l){let e,t,n,s=l[5],r=[];for(let o=0;o<s.length;o+=1)r[o]=Os(Is(l,s,o));return{c(){e=$("span");for(let o=0;o<r.length;o+=1)r[o].c();g(e,"class","overlay")},m(o,c){m(o,e,c);for(let i=0;i<r.length;i+=1)r[i].m(e,null);n=!0},p(o,c){if(l=o,c&36){s=l[5];let i;for(i=0;i<s.length;i+=1){const a=Is(l,s,i);r[i]?r[i].p(a,c):(r[i]=Os(a),r[i].c(),r[i].m(e,null))}for(;i<r.length;i+=1)r[i].d(1);r.length=s.length}},i(o){n||(ht(()=>{t||(t=ze(e,Fe,{duration:300,easing:Tn},!0)),t.run(1)}),n=!0)},o(o){t||(t=ze(e,Fe,{duration:300,easing:Tn},!1)),t.run(0),n=!1},d(o){o&&d(e),Oe(r,o),o&&t&&t.end()}}}function Os(l){let e,t,n=l[17].icon+"",s,r,o=l[17].label+"",c,i,a,f;function u(..._){return l[9](l[17],l[14],..._)}return{c(){e=$("div"),t=$("span"),s=N(),r=$("span"),c=B(o),i=N(),g(t,"class","icon"),g(r,"class","text"),g(e,"class","action")},m(_,p){m(_,e,p),v(e,t),t.innerHTML=n,v(e,s),v(e,r),v(r,c),v(e,i),a||(f=x(e,"click",u),a=!0)},p(_,p){l=_},d(_){_&&d(e),a=!1,f()}}}function Pa(l){let e,t,n,s,r,o,c=l[0]===l[13]&&Ls(l);return{c(){e=$("span"),t=N(),c&&c.c(),n=N(),g(e,"class","icon more-menu"),Y(e,"active",l[0]===l[13])},m(i,a){m(i,e,a),e.innerHTML=Ea,m(i,t,a),c&&c.m(i,a),m(i,n,a),s=!0,r||(o=x(e,"click",l[4](l[13],l[14])),r=!0)},p(i,a){l=i,a&5&&Y(e,"active",l[0]===l[13]),l[0]===l[13]?c?(c.p(l,a),a&1&&b(c,1)):(c=Ls(l),c.c(),b(c,1),c.m(n.parentNode,n)):c&&(fe(),y(c,1,1,()=>{c=null}),ue())},i(i){s||(b(c),s=!0)},o(i){y(c),s=!1},d(i){i&&d(e),i&&d(t),c&&c.d(i),i&&d(n),r=!1,o()}}}function Ps(l){let e,t;function n(...s){return l[10](l[14],...s)}return e=new tt({props:{resource:l[14],resourcePath:l[13],$$slots:{status:[Pa],tags:[Oa],detail:[Ia]},$$scope:{ctx:l}}}),e.$on("click",n),{c(){R(e.$$.fragment)},m(s,r){I(e,s,r),t=!0},p(s,r){l=s;const o={};r&1048577&&(o.$$scope={dirty:r,ctx:l}),e.$set(o)},i(s){t||(b(e.$$.fragment,s),t=!0)},o(s){y(e.$$.fragment,s),t=!1},d(s){L(e,s)}}}function Ha(l){let e;return{c(){e=B("Loading contacts...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function ja(l){let e,t,n={ctx:l,current:null,token:null,hasCatch:!1,pending:Ha,then:Ra,catch:Aa,value:12,blocks:[,,,]};return Te(l[2](),n),{c(){e=$("div"),n.block.c(),g(e,"class","rows svelte-1l93agm")},m(s,r){m(s,e,r),n.block.m(e,n.anchor=null),n.mount=()=>e,n.anchor=null,t=!0},p(s,[r]){l=s,Le(n,l,r)},i(s){t||(b(n.block),t=!0)},o(s){for(let r=0;r<3;r+=1){const o=n.blocks[r];y(o)}t=!1},d(s){s&&d(e),n.block.d(),n.token=null,n=null}}}function za(l,e,t){let n;X(l,Jt,S=>t(11,n=S));const s=ge("page");let{filter:r=S=>!0}=e,{sort:o=(S,k)=>S.name<k.name?-1:1}=e,{append:c=[]}=e;async function i(){return[...(await Je.read()).contacts(n)]}const a=new WeakMap;let f="";function u(S,k){return w=>{w.stopImmediatePropagation();const E=S;if(a.get(w)?.cancelMenu===E){t(0,f="");return}t(0,f=E),window.addEventListener("click",()=>{a.set(w,{cancelMenu:f}),t(0,f="")},{capture:!0,once:!0})}}const _=[{label:"Edit",icon:$r,click(S){s.push({creator:Ll,props:{contact:S}})}},{label:"Send",icon:Ta,click(S){s.push({creator:jt,props:{recipient:me.bech32(S.address)}})}},{label:"Delete",icon:yr,click(S){s.push({creator:Rl,props:{}})}}],p=(S,k,w)=>{w.stopPropagation(),S.click(k)},h=(S,k)=>{a.get(k)?.cancelMenu||s.push({creator:Il,props:{contact:S}})};return l.$$set=S=>{"filter"in S&&t(6,r=S.filter),"sort"in S&&t(7,o=S.sort),"append"in S&&t(8,c=S.append)},[f,s,i,a,u,_,r,o,c,p,h]}class $n extends J{constructor(e){super(),Q(this,e,za,ja,Z,{filter:6,sort:7,append:8})}}function Fa(l){let e;return{c(){e=B("All")},m(t,n){m(t,e,n)},d(t){t&&d(e)}}}function Ba(l){let e;return{c(){e=B("Humans")},m(t,n){m(t,e,n)},d(t){t&&d(e)}}}function Da(l){let e;return{c(){e=B("Contracts")},m(t,n){m(t,e,n)},d(t){t&&d(e)}}}function Va(l){let e,t,n,s,r,o;return e=new en({props:{$$slots:{default:[Fa]},$$scope:{ctx:l}}}),n=new en({props:{$$slots:{default:[Ba]},$$scope:{ctx:l}}}),r=new en({props:{$$slots:{default:[Da]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),R(r.$$.fragment)},m(c,i){I(e,c,i),m(c,t,i),I(n,c,i),m(c,s,i),I(r,c,i),o=!0},p(c,i){const a={};i&8&&(a.$$scope={dirty:i,ctx:c}),e.$set(a);const f={};i&8&&(f.$$scope={dirty:i,ctx:c}),n.$set(f);const u={};i&8&&(u.$$scope={dirty:i,ctx:c}),r.$set(u)},i(c){o||(b(e.$$.fragment,c),b(n.$$.fragment,c),b(r.$$.fragment,c),o=!0)},o(c){y(e.$$.fragment,c),y(n.$$.fragment,c),y(r.$$.fragment,c),o=!1},d(c){L(e,c),c&&d(t),L(n,c),c&&d(s),L(r,c)}}}function Ua(l){let e,t;return e=new $n({}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function qa(l){let e,t;return e=new $n({props:{filter:l[0]}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p:C,i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Xa(l){let e,t;return e=new $n({props:{filter:l[1]}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p:C,i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Ka(l){let e,t,n,s,r,o,c,i;return e=new ea({props:{$$slots:{default:[Va]},$$scope:{ctx:l}}}),n=new tn({props:{$$slots:{default:[Ua]},$$scope:{ctx:l}}}),r=new tn({props:{$$slots:{default:[qa]},$$scope:{ctx:l}}}),c=new tn({props:{$$slots:{default:[Xa]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),R(r.$$.fragment),o=N(),R(c.$$.fragment)},m(a,f){I(e,a,f),m(a,t,f),I(n,a,f),m(a,s,f),I(r,a,f),m(a,o,f),I(c,a,f),i=!0},p(a,f){const u={};f&8&&(u.$$scope={dirty:f,ctx:a}),e.$set(u);const _={};f&8&&(_.$$scope={dirty:f,ctx:a}),n.$set(_);const p={};f&8&&(p.$$scope={dirty:f,ctx:a}),r.$set(p);const h={};f&8&&(h.$$scope={dirty:f,ctx:a}),c.$set(h)},i(a){i||(b(e.$$.fragment,a),b(n.$$.fragment,a),b(r.$$.fragment,a),b(c.$$.fragment,a),i=!0)},o(a){y(e.$$.fragment,a),y(n.$$.fragment,a),y(r.$$.fragment,a),y(c.$$.fragment,a),i=!1},d(a){L(e,a),a&&d(t),L(n,a),a&&d(s),L(r,a),a&&d(o),L(c,a)}}}function Wa(l){let e,t,n,s,r,o;return e=new Pe({props:{search:!0,network:!0,account:!0}}),n=new Ht({props:{title:"Contacts"}}),r=new Yc({props:{$$slots:{default:[Ka]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),R(r.$$.fragment)},m(c,i){I(e,c,i),m(c,t,i),I(n,c,i),m(c,s,i),I(r,c,i),o=!0},p(c,i){const a={};i&8&&(a.$$scope={dirty:i,ctx:c}),r.$set(a)},i(c){o||(b(e.$$.fragment,c),b(n.$$.fragment,c),b(r.$$.fragment,c),o=!0)},o(c){y(e.$$.fragment,c),y(n.$$.fragment,c),y(r.$$.fragment,c),o=!1},d(c){L(e,c),c&&d(t),L(n,c),c&&d(s),L(r,c)}}}function Ga(l){let e,t;return e=new ke({props:{nav:!0,root:!0,classNames:"contacts",$$slots:{default:[Wa]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&8&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Ya(l){return ge("page"),[n=>rn.PERSON===n.agentType,n=>rn.CONTRACT===n.agentType]}class Za extends J{constructor(e){super(),Q(this,e,Ya,Ga,Z,{})}}function Hs(l,e,t){const n=l.slice();return n[4]=e[t][0],n[5]=e[t][1],n}function Ja(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function Qa(l){let e,t,n=l[3],s=[];for(let o=0;o<n.length;o+=1)s[o]=js(Hs(l,n,o));const r=o=>y(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),t=!0},p(o,c){if(c&3){n=o[3];let i;for(i=0;i<n.length;i+=1){const a=Hs(o,n,i);s[i]?(s[i].p(a,c),b(s[i],1)):(s[i]=js(a),s[i].c(),b(s[i],1),s[i].m(e.parentNode,e))}for(fe(),i=n.length;i<s.length;i+=1)r(i);ue()}},i(o){if(!t){for(let c=0;c<n.length;c+=1)b(s[c]);t=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)y(s[c]);t=!1},d(o){Oe(s,o),o&&d(e)}}}function js(l){let e,t;return e=new tt({props:{pfp:l[5].pfp,name:l[5].host,resourcePath:l[4],iconClass:"square pfp"}}),e.$on("click",l[2]),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p:C,i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function xa(l){let e;return{c(){e=B("Loading...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function ef(l){let e,t,n,s,r,o;e=new Pe({props:{search:!0,network:!0,account:!0}}),n=new Ht({props:{bare:!0,title:"Sites / Apps"}});let c={ctx:l,current:null,token:null,hasCatch:!1,pending:xa,then:Qa,catch:Ja,value:3,blocks:[,,,]};return Te(l[1](),c),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),r=$("div"),c.block.c(),g(r,"class","rows no-margin")},m(i,a){I(e,i,a),m(i,t,a),I(n,i,a),m(i,s,a),m(i,r,a),c.block.m(r,c.anchor=null),c.mount=()=>r,c.anchor=null,o=!0},p(i,a){l=i,Le(c,l,a)},i(i){o||(b(e.$$.fragment,i),b(n.$$.fragment,i),b(c.block),o=!0)},o(i){y(e.$$.fragment,i),y(n.$$.fragment,i);for(let a=0;a<3;a+=1){const f=c.blocks[a];y(f)}o=!1},d(i){L(e,i),i&&d(t),L(n,i),i&&d(s),i&&d(r),c.block.d(),c.token=null,c=null}}}function tf(l){let e,t;return e=new ke({props:{debug:"SitesHome",nav:!0,root:!0,$$slots:{default:[ef]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&256&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function nf(l){const e=ge("page");async function t(){return(await gl.read()).entries()}return[e,t,()=>{e.push({})}]}class sf extends J{constructor(e){super(),Q(this,e,nf,tf,Z,{})}}function lf(l){let e,t,n,s,r,o;e=new Pt({props:{resource:l[0],resourcePath:l[2],actions:l[3],$$slots:{subtitle:[cf],default:[of]},$$scope:{ctx:l}}}),n=new he({props:{name:"gRPC-web URL",key:"grpc-web",$$slots:{default:[ff]},$$scope:{ctx:l}}});let c=l[0].rpcHost&&zs(l);return{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),c&&c.c(),r=oe()},m(i,a){I(e,i,a),m(i,t,a),I(n,i,a),m(i,s,a),c&&c.m(i,a),m(i,r,a),o=!0},p(i,a){const f={};a&1&&(f.resource=i[0]),a&130&&(f.$$scope={dirty:a,ctx:i}),e.$set(f);const u={};a&129&&(u.$$scope={dirty:a,ctx:i}),n.$set(u),i[0].rpcHost?c?(c.p(i,a),a&1&&b(c,1)):(c=zs(i),c.c(),b(c,1),c.m(r.parentNode,r)):c&&(fe(),y(c,1,1,()=>{c=null}),ue())},i(i){o||(b(e.$$.fragment,i),b(n.$$.fragment,i),b(c),o=!0)},o(i){y(e.$$.fragment,i),y(n.$$.fragment,i),y(c),o=!1},d(i){L(e,i),i&&d(t),L(n,i),i&&d(s),c&&c.d(i),i&&d(r)}}}function rf(l){let e;return{c(){e=B("Loading network...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function of(l){let e;return{c(){e=B("address")},m(t,n){m(t,e,n)},d(t){t&&d(e)}}}function cf(l){let e,t=l[1].name+"",n,s,r=l[1].id+"",o,c;return{c(){e=$("span"),n=B(t),s=B(" ("),o=B(r),c=B(")"),g(e,"class","font-family_mono svelte-yy3tbl")},m(i,a){m(i,e,a),v(e,n),v(e,s),v(e,o),v(e,c)},p(i,a){a&2&&t!==(t=i[1].name+"")&&ee(n,t),a&2&&r!==(r=i[1].id+"")&&ee(o,r)},d(i){i&&d(e)}}}function af(l){let e=l[0].grpcWebUrl+"",t;return{c(){t=B(e)},m(n,s){m(n,t,s)},p(n,s){s&1&&e!==(e=n[0].grpcWebUrl+"")&&ee(t,e)},d(n){n&&d(t)}}}function ff(l){let e,t;return e=new Qt({props:{key:"grpc-web-value",$$slots:{default:[af]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&129&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function zs(l){let e,t;return e=new he({props:{name:"RPC Host",key:"rpc",$$slots:{default:[_f]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&129&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function uf(l){let e=l[0].rpcHost+"",t;return{c(){t=B(e)},m(n,s){m(n,t,s)},p(n,s){s&1&&e!==(e=n[0].rpcHost+"")&&ee(t,e)},d(n){n&&d(t)}}}function _f(l){let e,t;return e=new Qt({props:{key:"rpc-value",$$slots:{default:[uf]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){const r={};s&129&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function pf(l){let e,t,n,s,r,o,c;e=new Pe({props:{pops:!0,search:!0,network:!0,account:!0}});const i=[rf,lf],a=[];function f(u,_){return u[1]?1:0}return n=f(l),s=a[n]=i[n](l),o=new Tl({}),{c(){R(e.$$.fragment),t=N(),s.c(),r=N(),R(o.$$.fragment)},m(u,_){I(e,u,_),m(u,t,_),a[n].m(u,_),m(u,r,_),I(o,u,_),c=!0},p(u,_){let p=n;n=f(u),n===p?a[n].p(u,_):(fe(),y(a[p],1,1,()=>{a[p]=null}),ue(),s=a[n],s?s.p(u,_):(s=a[n]=i[n](u),s.c()),b(s,1),s.m(r.parentNode,r))},i(u){c||(b(e.$$.fragment,u),b(s),b(o.$$.fragment,u),c=!0)},o(u){y(e.$$.fragment,u),y(s),y(o.$$.fragment,u),c=!1},d(u){L(e,u),u&&d(t),a[n].d(u),u&&d(r),L(o,u)}}}function mf(l){let e,t;return e=new ke({props:{nav:!0,slides:!0,$$slots:{default:[pf]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&131&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function df(l,e,t){let n,{networkRef:s}=e;const r=s;let o;bn.at(r).then(a=>t(0,o=a));let c;ge("page");const i={};return l.$$set=a=>{"networkRef"in a&&t(4,s=a.networkRef)},l.$$.update=()=>{l.$$.dirty&1&&t(5,n=o?.chain),l.$$.dirty&32&&n&&me.at(n).then(a=>t(1,c=a))},[o,c,r,i,s,n]}class hf extends J{constructor(e){super(),Q(this,e,df,mf,Z,{networkRef:4})}}function Fs(l,e,t){const n=l.slice();n[6]=e[t][0],n[7]=e[t][1];const s=n[0].at(n[7].chain);return n[8]=s,n}function gf(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function bf(l){let e,t,n=l[5],s=[];for(let o=0;o<n.length;o+=1)s[o]=Bs(Fs(l,n,o));const r=o=>y(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=oe()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),t=!0},p(o,c){if(c&7){n=o[5];let i;for(i=0;i<n.length;i+=1){const a=Fs(o,n,i);s[i]?(s[i].p(a,c),b(s[i],1)):(s[i]=Bs(a),s[i].c(),b(s[i],1),s[i].m(e.parentNode,e))}for(fe(),i=n.length;i<s.length;i+=1)r(i);ue()}},i(o){if(!t){for(let c=0;c<n.length;c+=1)b(s[c]);t=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)y(s[c]);t=!1},d(o){Oe(s,o),o&&d(e)}}}function Bs(l){let e,t;function n(){return l[3](l[6])}return e=new tt({props:{resource:l[7],resourcePath:l[6],iconClass:"square pfp",detail:`${l[8]?.name} (${l[8]?.id})`}}),e.$on("click",n),{c(){R(e.$$.fragment)},m(s,r){I(e,s,r),t=!0},p(s,r){l=s;const o={};r&1&&(o.detail=`${l[8]?.name} (${l[8]?.id})`),e.$set(o)},i(s){t||(b(e.$$.fragment,s),t=!0)},o(s){y(e.$$.fragment,s),t=!1},d(s){L(e,s)}}}function wf(l){let e;return{c(){e=B("Loading...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function kf(l){let e,t,n,s,r,o;e=new Pe({props:{search:!0,network:!0,account:!0}}),n=new Ht({props:{bare:!0,title:"Networks"}});let c={ctx:l,current:null,token:null,hasCatch:!1,pending:wf,then:bf,catch:gf,value:5,blocks:[,,,]};return Te(l[2](),c),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),r=$("div"),c.block.c(),g(r,"class","rows no-margin")},m(i,a){I(e,i,a),m(i,t,a),I(n,i,a),m(i,s,a),m(i,r,a),c.block.m(r,c.anchor=null),c.mount=()=>r,c.anchor=null,o=!0},p(i,a){l=i,Le(c,l,a)},i(i){o||(b(e.$$.fragment,i),b(n.$$.fragment,i),b(c.block),o=!0)},o(i){y(e.$$.fragment,i),y(n.$$.fragment,i);for(let a=0;a<3;a+=1){const f=c.blocks[a];y(f)}o=!1},d(i){L(e,i),i&&d(t),L(n,i),i&&d(s),i&&d(r),c.block.d(),c.token=null,c=null}}}function vf(l){let e,t;return e=new ke({props:{debug:"NetworksHome",nav:!0,root:!0,$$slots:{default:[kf]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&2049&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function $f(l,e,t){const n=ge("page");let s,r;async function o(){return t(0,[s,r]=await Promise.all([me.read(),bn.read()]),s),r.entries()}return[s,n,o,i=>{n.push({creator:hf,props:{networkRef:i}})}]}class yf extends J{constructor(e){super(),Q(this,e,$f,vf,Z,{})}}function Ds(l){const e=l[2].raw;l[3]=e}function Sf(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function Cf(l){Ds(l);let e,t;return e=new Sr({props:{events:l[3]}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,s){Ds(n)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Nf(l){let e;return{c(){e=B("Loading history...")},m(t,n){m(t,e,n)},p:C,i:C,o:C,d(t){t&&d(e)}}}function Vs(l){let e,t,n={ctx:l,current:null,token:null,hasCatch:!1,pending:Nf,then:Cf,catch:Sf,value:2,blocks:[,,,]};return Te(_l.read(),n),{c(){e=oe(),n.block.c()},m(s,r){m(s,e,r),n.block.m(s,n.anchor=r),n.mount=()=>e.parentNode,n.anchor=e,t=!0},p(s,r){l=s,Le(n,l,r)},i(s){t||(b(n.block),t=!0)},o(s){for(let r=0;r<3;r+=1){const o=n.blocks[r];y(o)}t=!1},d(s){s&&d(e),n.block.d(s),n.token=null,n=null}}}function Mf(l){let e,t,n,s,r=l[0],o,c;e=new Pe({props:{search:!0,network:!0,account:!0}}),n=new Ht({props:{title:"History",bare:!0}});let i=Vs(l);return{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),i.c(),o=oe()},m(a,f){I(e,a,f),m(a,t,f),I(n,a,f),m(a,s,f),i.m(a,f),m(a,o,f),c=!0},p(a,f){f&1&&Z(r,r=a[0])?(fe(),y(i,1,1,C),ue(),i=Vs(a),i.c(),b(i,1),i.m(o.parentNode,o)):i.p(a,f)},i(a){c||(b(e.$$.fragment,a),b(n.$$.fragment,a),b(i),c=!0)},o(a){y(e.$$.fragment,a),y(n.$$.fragment,a),y(i),c=!1},d(a){L(e,a),a&&d(t),L(n,a),a&&d(s),a&&d(o),i.d(a)}}}function Ef(l){let e,t;return e=new ke({props:{nav:!0,root:!0,$$slots:{default:[Mf]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&17&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Tf(l,e,t){let n=1;const s=bl({updateStore({key:r}){r==="events"&&t(0,n++,n)}});return Ot(()=>{s()}),[n]}class Af extends J{constructor(e){super(),Q(this,e,Tf,Ef,Z,{})}}var Ye=(l=>(l.DEFAULT="default",l.INIT="init",l.SEARCH="search",l.TOKENS="tokens",l.NFTS="nfts",l.CONTACTS="contacts",l.HISTORY="history",l.NETWORKS="networks",l.ACCOUNTS="accounts",l.TAGS="tags",l.SITES="sites",l))(Ye||{});const Ol={default:vl,init:Ml,tokens:bc,contacts:Za,history:Af,networks:yf,accounts:qc,sites:sf};function Rf(l){let e,t,n,s,r,o;return{c(){e=Ct("svg"),t=Ct("style"),n=B(`.overscroll .bg {
  fill: var(--theme-color-text-light);
}
.overscroll .ring {
  fill: transparent;
  stroke: #c4c4c4;
}
.overscroll .progress {
  fill: transparent;
  stroke: black;
}
`),s=Ct("circle"),r=Ct("circle"),o=Ct("circle"),g(t,"lang","less"),g(s,"cx","16"),g(s,"cy","16"),g(s,"r","16"),g(s,"class","bg"),g(r,"cx","16"),g(r,"cy","16"),g(r,"r","10"),g(r,"class","ring"),g(r,"stroke-width","3"),Ue(r,"opacity","0.2"),g(o,"cx","16"),g(o,"cy","16"),g(o,"r","10"),g(o,"class","progress svelte-1u2i3kk"),g(o,"stroke-width","3"),Ue(o,"stroke-dashoffset",62-l[1]*62),g(e,"width","32"),g(e,"height","32"),g(e,"viewBox","0 0 32 32"),g(e,"xmlns","http://www.w3.org/2000/svg"),g(e,"class","overscroll svelte-1u2i3kk")},m(c,i){m(c,e,i),v(e,t),v(t,n),v(e,s),v(e,r),v(e,o),l[2](o)},p(c,[i]){i&2&&Ue(o,"stroke-dashoffset",62-c[1]*62)},i:C,o:C,d(c){c&&d(e),l[2](null)}}}function If(l,e,t){let n;X(l,Cr,o=>t(1,n=o));let s;function r(o){de[o?"unshift":"push"](()=>{s=o,t(0,s)})}return[s,n,r]}class Lf extends J{constructor(e){super(),Q(this,e,If,Rf,Z,{})}}function Of(l){let e,t,n,s,r,o;var c=l[0];function i(a){return{}}return c&&(n=new c(i())),{c(){e=$("div"),t=$("section"),n&&R(n.$$.fragment),g(t,"class","screen content svelte-rtd9ps"),g(e,"class","popup svelte-rtd9ps"),Y(e,"showing",l[0]!==null)},m(a,f){m(a,e,f),v(e,t),n&&I(n,t,null),s=!0,r||(o=[x(t,"click",Pf),x(e,"click",l[1])],r=!0)},p(a,[f]){if(c!==(c=a[0])){if(n){fe();const u=n;y(u.$$.fragment,1,0,()=>{L(u,1)}),ue()}c?(n=new c(i()),R(n.$$.fragment),b(n.$$.fragment,1),I(n,t,null)):n=null}f&1&&Y(e,"showing",a[0]!==null)},i(a){s||(n&&b(n.$$.fragment,a),s=!0)},o(a){n&&y(n.$$.fragment,a),s=!1},d(a){a&&d(e),n&&L(n),r=!1,Qe(o)}}}const Pf=l=>l.stopPropagation();function Hf(l,e,t){let n;return X(l,An,r=>t(0,n=r)),[n,()=>_e(An,n=null,n)]}class jf extends J{constructor(e){super(),Q(this,e,Hf,Of,Z,{})}}var zf=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M12 16L18 10L16.59 8.59L12 13.17L7.41 8.59L6 10L12 16Z" />
</svg>
`,Ff=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-tokens-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-tokens-fg" d="M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8Zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6ZM3 12a5.99 5.99 0 0 1 4-5.65V4.26C3.55 5.15 1 8.27 1 12c0 3.73 2.55 6.85 6 7.74v-2.09A5.99 5.99 0 0 1 3 12Z" />
</svg>
`,Bf=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M13 3a9 9 0 0 0-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42A8.954 8.954 0 0 0 13 21a9 9 0 0 0 0-18Zm-1 5v5l4.25 2.52.77-1.28-3.52-2.09V8H12Z" />
</svg>
`,Df=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-menu-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-menu-fg" d="M4 19h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1Zm0-6h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1ZM3 6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1Z" />
</svg>
`;function Us(l,e,t){const n=l.slice();return n[17]=e[t][0],n[18]=e[t][1],n}function Vf(l){let e,t,n,s=l[18].svg+"",r,o,c,i,a=l[18].label+"",f,u,_,p;function h(){return l[9](l[17])}return{c(){e=$("li"),t=$("div"),n=new wl(!1),r=N(),o=$("span"),c=N(),i=$("div"),f=B(a),u=N(),n.a=r,g(o,"class","notification svelte-1ylq4j5"),Y(o,"display_none",!l[1].includes(l[17])),g(t,"class","icon svelte-1ylq4j5"),g(i,"class","label svelte-1ylq4j5"),g(e,"class","button "+l[17]+" svelte-1ylq4j5"),Y(e,"active",l[0]===l[17])},m(S,k){m(S,e,k),v(e,t),n.m(s,t),v(t,r),v(t,o),v(e,c),v(e,i),v(i,f),v(e,u),_||(p=x(e,"click",h),_=!0)},p(S,k){l=S,k&18&&Y(o,"display_none",!l[1].includes(l[17])),k&17&&Y(e,"active",l[0]===l[17])},d(S){S&&d(e),_=!1,p()}}}function Uf(l){let e,t,n,s=l[18].svg+"",r,o,c,i,a=l[18].label+"",f,u;return{c(){e=$("li"),t=$("div"),n=new wl(!1),r=N(),o=$("span"),c=N(),i=$("div"),f=B(a),u=N(),n.a=r,g(o,"class","notification svelte-1ylq4j5"),Y(o,"display_none",!l[1].includes(l[17])),g(t,"class","icon svelte-1ylq4j5"),g(i,"class","label svelte-1ylq4j5"),g(e,"class","button "+l[17]+" svelte-1ylq4j5"),Ue(e,"opacity","0.5"),Y(e,"active",l[0]===l[17])},m(_,p){m(_,e,p),v(e,t),n.m(s,t),v(t,r),v(t,o),v(e,c),v(e,i),v(i,f),v(e,u)},p(_,p){p&18&&Y(o,"display_none",!_[1].includes(_[17])),p&17&&Y(e,"active",_[0]===_[17])},d(_){_&&d(e)}}}function qs(l){let e;function t(r,o){return r[18].disabled?Uf:Vf}let s=t(l)(l);return{c(){s.c(),e=oe()},m(r,o){s.m(r,o),m(r,e,o)},p(r,o){s.p(r,o)},d(r){s.d(r),r&&d(e)}}}function qf(l){let e,t,n,s,r,o,c=ve(l[4]),i=[];for(let a=0;a<c.length;a+=1)i[a]=qs(Us(l,c,a));return{c(){e=$("nav"),t=$("div"),n=N(),s=$("ul");for(let a=0;a<i.length;a+=1)i[a].c();g(t,"class","collapse icon svelte-1ylq4j5"),g(s,"class","bar svelte-1ylq4j5"),g(e,"class","svelte-1ylq4j5"),Y(e,"collapsed",l[2]),Y(e,"visible",l[3])},m(a,f){m(a,e,f),v(e,t),t.innerHTML=zf,v(e,n),v(e,s);for(let u=0;u<i.length;u+=1)i[u].m(s,null);r||(o=x(t,"click",l[8]),r=!0)},p(a,[f]){if(f&83){c=ve(a[4]);let u;for(u=0;u<c.length;u+=1){const _=Us(a,c,u);i[u]?i[u].p(_,f):(i[u]=qs(_),i[u].c(),i[u].m(s,null))}for(;u<i.length;u+=1)i[u].d(1);i.length=c.length}f&4&&Y(e,"collapsed",a[2]),f&8&&Y(e,"visible",a[3])},i:C,o:C,d(a){a&&d(e),Oe(i,a),r=!1,o()}}}function Xf(l,e,t){let n,s,r,o,c,i,a,f,u,_;X(l,yt,O=>t(10,n=O)),X(l,Mt,O=>t(11,s=O)),X(l,Vt,O=>t(7,r=O)),X(l,kt,O=>t(12,o=O)),X(l,wt,O=>t(13,c=O)),X(l,bt,O=>t(14,i=O)),X(l,Tt,O=>t(15,a=O)),X(l,Rn,O=>t(1,f=O)),X(l,In,O=>t(2,u=O)),X(l,sn,O=>t(3,_=O));const p={[Ye.TOKENS]:{svg:Ff,label:"Tokens"},[Ye.CONTACTS]:{svg:kn,label:"Contacts",disabled:!0},[Ye.HISTORY]:{svg:Bf,label:"History"},menu:{svg:Df,label:"Menu"}},h=new Map(gn(Ol,(O,F)=>[F,O]));let S="";function k(){_e(In,u=!u,u)}function w(O){switch(_e(Rn,f=f.filter(F=>O!==F),f),a&&_e(Tt,a=!1,a),i&&_e(bt,i=!1,i),c&&_e(wt,c=!1,c),O){case"menu":{_e(kt,o=!0,o);break}case S:{n.activePage.dom.scrollTo({top:0,left:0,behavior:"smooth"});break}case s.id:{const F=r.peak();F&&h.get(F.creator)===s.id?r.pop():r.reset();break}default:{n.activateThread(O);break}}}const E=()=>k(),D=O=>w(O);return l.$$.update=()=>{l.$$.dirty&128&&t(0,S=r&&h.get(r.creator)||"")},[S,f,u,_,p,k,w,r,E,D]}class Kf extends J{constructor(e){super(),Q(this,e,Xf,qf,Z,{})}}function et(l){return Array.isArray?Array.isArray(l):jl(l)==="[object Array]"}const Wf=1/0;function Gf(l){if(typeof l=="string")return l;let e=l+"";return e=="0"&&1/l==-Wf?"-0":e}function Yf(l){return l==null?"":Gf(l)}function Ge(l){return typeof l=="string"}function Pl(l){return typeof l=="number"}function Zf(l){return l===!0||l===!1||Jf(l)&&jl(l)=="[object Boolean]"}function Hl(l){return typeof l=="object"}function Jf(l){return Hl(l)&&l!==null}function Ve(l){return l!=null}function nn(l){return!l.trim().length}function jl(l){return l==null?l===void 0?"[object Undefined]":"[object Null]":Object.prototype.toString.call(l)}const Qf="Incorrect 'index' type",xf=l=>`Invalid value for key ${l}`,eu=l=>`Pattern length exceeds max of ${l}.`,tu=l=>`Missing ${l} property in key`,nu=l=>`Property 'weight' in key '${l}' must be a positive integer`,Xs=Object.prototype.hasOwnProperty;class su{constructor(e){this._keys=[],this._keyMap={};let t=0;e.forEach(n=>{let s=zl(n);t+=s.weight,this._keys.push(s),this._keyMap[s.id]=s,t+=s.weight}),this._keys.forEach(n=>{n.weight/=t})}get(e){return this._keyMap[e]}keys(){return this._keys}toJSON(){return JSON.stringify(this._keys)}}function zl(l){let e=null,t=null,n=null,s=1,r=null;if(Ge(l)||et(l))n=l,e=Ks(l),t=on(l);else{if(!Xs.call(l,"name"))throw new Error(tu("name"));const o=l.name;if(n=o,Xs.call(l,"weight")&&(s=l.weight,s<=0))throw new Error(nu(o));e=Ks(o),t=on(o),r=l.getFn}return{path:e,id:t,weight:s,src:n,getFn:r}}function Ks(l){return et(l)?l:l.split(".")}function on(l){return et(l)?l.join("."):l}function lu(l,e){let t=[],n=!1;const s=(r,o,c)=>{if(!!Ve(r))if(!o[c])t.push(r);else{let i=o[c];const a=r[i];if(!Ve(a))return;if(c===o.length-1&&(Ge(a)||Pl(a)||Zf(a)))t.push(Yf(a));else if(et(a)){n=!0;for(let f=0,u=a.length;f<u;f+=1)s(a[f],o,c+1)}else o.length&&s(a,o,c+1)}};return s(l,Ge(e)?e.split("."):e,0),n?t:t[0]}const ru={includeMatches:!1,findAllMatches:!1,minMatchCharLength:1},ou={isCaseSensitive:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:(l,e)=>l.score===e.score?l.idx<e.idx?-1:1:l.score<e.score?-1:1},iu={location:0,threshold:.6,distance:100},cu={useExtendedSearch:!1,getFn:lu,ignoreLocation:!1,ignoreFieldNorm:!1,fieldNormWeight:1};var ne={...ou,...ru,...iu,...cu};const au=/[^ ]+/g;function fu(l=1,e=3){const t=new Map,n=Math.pow(10,e);return{get(s){const r=s.match(au).length;if(t.has(r))return t.get(r);const o=1/Math.pow(r,.5*l),c=parseFloat(Math.round(o*n)/n);return t.set(r,c),c},clear(){t.clear()}}}class yn{constructor({getFn:e=ne.getFn,fieldNormWeight:t=ne.fieldNormWeight}={}){this.norm=fu(t,3),this.getFn=e,this.isCreated=!1,this.setIndexRecords()}setSources(e=[]){this.docs=e}setIndexRecords(e=[]){this.records=e}setKeys(e=[]){this.keys=e,this._keysMap={},e.forEach((t,n)=>{this._keysMap[t.id]=n})}create(){this.isCreated||!this.docs.length||(this.isCreated=!0,Ge(this.docs[0])?this.docs.forEach((e,t)=>{this._addString(e,t)}):this.docs.forEach((e,t)=>{this._addObject(e,t)}),this.norm.clear())}add(e){const t=this.size();Ge(e)?this._addString(e,t):this._addObject(e,t)}removeAt(e){this.records.splice(e,1);for(let t=e,n=this.size();t<n;t+=1)this.records[t].i-=1}getValueForItemAtKeyId(e,t){return e[this._keysMap[t]]}size(){return this.records.length}_addString(e,t){if(!Ve(e)||nn(e))return;let n={v:e,i:t,n:this.norm.get(e)};this.records.push(n)}_addObject(e,t){let n={i:t,$:{}};this.keys.forEach((s,r)=>{let o=s.getFn?s.getFn(e):this.getFn(e,s.path);if(!!Ve(o)){if(et(o)){let c=[];const i=[{nestedArrIndex:-1,value:o}];for(;i.length;){const{nestedArrIndex:a,value:f}=i.pop();if(!!Ve(f))if(Ge(f)&&!nn(f)){let u={v:f,i:a,n:this.norm.get(f)};c.push(u)}else et(f)&&f.forEach((u,_)=>{i.push({nestedArrIndex:_,value:u})})}n.$[r]=c}else if(Ge(o)&&!nn(o)){let c={v:o,n:this.norm.get(o)};n.$[r]=c}}}),this.records.push(n)}toJSON(){return{keys:this.keys,records:this.records}}}function Fl(l,e,{getFn:t=ne.getFn,fieldNormWeight:n=ne.fieldNormWeight}={}){const s=new yn({getFn:t,fieldNormWeight:n});return s.setKeys(l.map(zl)),s.setSources(e),s.create(),s}function uu(l,{getFn:e=ne.getFn,fieldNormWeight:t=ne.fieldNormWeight}={}){const{keys:n,records:s}=l,r=new yn({getFn:e,fieldNormWeight:t});return r.setKeys(n),r.setIndexRecords(s),r}function Bt(l,{errors:e=0,currentLocation:t=0,expectedLocation:n=0,distance:s=ne.distance,ignoreLocation:r=ne.ignoreLocation}={}){const o=e/l.length;if(r)return o;const c=Math.abs(n-t);return s?o+c/s:c?1:o}function _u(l=[],e=ne.minMatchCharLength){let t=[],n=-1,s=-1,r=0;for(let o=l.length;r<o;r+=1){let c=l[r];c&&n===-1?n=r:!c&&n!==-1&&(s=r-1,s-n+1>=e&&t.push([n,s]),n=-1)}return l[r-1]&&r-n>=e&&t.push([n,r-1]),t}const pt=32;function pu(l,e,t,{location:n=ne.location,distance:s=ne.distance,threshold:r=ne.threshold,findAllMatches:o=ne.findAllMatches,minMatchCharLength:c=ne.minMatchCharLength,includeMatches:i=ne.includeMatches,ignoreLocation:a=ne.ignoreLocation}={}){if(e.length>pt)throw new Error(eu(pt));const f=e.length,u=l.length,_=Math.max(0,Math.min(n,u));let p=r,h=_;const S=c>1||i,k=S?Array(u):[];let w;for(;(w=l.indexOf(e,h))>-1;){let H=Bt(e,{currentLocation:w,expectedLocation:_,distance:s,ignoreLocation:a});if(p=Math.min(H,p),h=w+f,S){let j=0;for(;j<f;)k[w+j]=1,j+=1}}h=-1;let E=[],D=1,O=f+u;const F=1<<f-1;for(let H=0;H<f;H+=1){let j=0,T=O;for(;j<T;)Bt(e,{errors:H,currentLocation:_+T,expectedLocation:_,distance:s,ignoreLocation:a})<=p?j=T:O=T,T=Math.floor((O-j)/2+j);O=T;let q=Math.max(1,_-T+1),M=o?u:Math.min(_+T,u)+f,U=Array(M+2);U[M+1]=(1<<H)-1;for(let A=M;A>=q;A-=1){let V=A-1,se=t[l.charAt(V)];if(S&&(k[V]=+!!se),U[A]=(U[A+1]<<1|1)&se,H&&(U[A]|=(E[A+1]|E[A])<<1|1|E[A+1]),U[A]&F&&(D=Bt(e,{errors:H,currentLocation:V,expectedLocation:_,distance:s,ignoreLocation:a}),D<=p)){if(p=D,h=V,h<=_)break;q=Math.max(1,2*_-h)}}if(Bt(e,{errors:H+1,currentLocation:_,expectedLocation:_,distance:s,ignoreLocation:a})>p)break;E=U}const K={isMatch:h>=0,score:Math.max(.001,D)};if(S){const H=_u(k,c);H.length?i&&(K.indices=H):K.isMatch=!1}return K}function mu(l){let e={};for(let t=0,n=l.length;t<n;t+=1){const s=l.charAt(t);e[s]=(e[s]||0)|1<<n-t-1}return e}class Bl{constructor(e,{location:t=ne.location,threshold:n=ne.threshold,distance:s=ne.distance,includeMatches:r=ne.includeMatches,findAllMatches:o=ne.findAllMatches,minMatchCharLength:c=ne.minMatchCharLength,isCaseSensitive:i=ne.isCaseSensitive,ignoreLocation:a=ne.ignoreLocation}={}){if(this.options={location:t,threshold:n,distance:s,includeMatches:r,findAllMatches:o,minMatchCharLength:c,isCaseSensitive:i,ignoreLocation:a},this.pattern=i?e:e.toLowerCase(),this.chunks=[],!this.pattern.length)return;const f=(_,p)=>{this.chunks.push({pattern:_,alphabet:mu(_),startIndex:p})},u=this.pattern.length;if(u>pt){let _=0;const p=u%pt,h=u-p;for(;_<h;)f(this.pattern.substr(_,pt),_),_+=pt;if(p){const S=u-pt;f(this.pattern.substr(S),S)}}else f(this.pattern,0)}searchIn(e){const{isCaseSensitive:t,includeMatches:n}=this.options;if(t||(e=e.toLowerCase()),this.pattern===e){let h={isMatch:!0,score:0};return n&&(h.indices=[[0,e.length-1]]),h}const{location:s,distance:r,threshold:o,findAllMatches:c,minMatchCharLength:i,ignoreLocation:a}=this.options;let f=[],u=0,_=!1;this.chunks.forEach(({pattern:h,alphabet:S,startIndex:k})=>{const{isMatch:w,score:E,indices:D}=pu(e,h,S,{location:s+k,distance:r,threshold:o,findAllMatches:c,minMatchCharLength:i,includeMatches:n,ignoreLocation:a});w&&(_=!0),u+=E,w&&D&&(f=[...f,...D])});let p={isMatch:_,score:_?u/this.chunks.length:1};return _&&n&&(p.indices=f),p}}class at{constructor(e){this.pattern=e}static isMultiMatch(e){return Ws(e,this.multiRegex)}static isSingleMatch(e){return Ws(e,this.singleRegex)}search(){}}function Ws(l,e){const t=l.match(e);return t?t[1]:null}class du extends at{constructor(e){super(e)}static get type(){return"exact"}static get multiRegex(){return/^="(.*)"$/}static get singleRegex(){return/^=(.*)$/}search(e){const t=e===this.pattern;return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}}class hu extends at{constructor(e){super(e)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.*)"$/}static get singleRegex(){return/^!(.*)$/}search(e){const n=e.indexOf(this.pattern)===-1;return{isMatch:n,score:n?0:1,indices:[0,e.length-1]}}}class gu extends at{constructor(e){super(e)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.*)"$/}static get singleRegex(){return/^\^(.*)$/}search(e){const t=e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}}class bu extends at{constructor(e){super(e)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.*)"$/}static get singleRegex(){return/^!\^(.*)$/}search(e){const t=!e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}class wu extends at{constructor(e){super(e)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.*)"\$$/}static get singleRegex(){return/^(.*)\$$/}search(e){const t=e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[e.length-this.pattern.length,e.length-1]}}}class ku extends at{constructor(e){super(e)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.*)"\$$/}static get singleRegex(){return/^!(.*)\$$/}search(e){const t=!e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}class Dl extends at{constructor(e,{location:t=ne.location,threshold:n=ne.threshold,distance:s=ne.distance,includeMatches:r=ne.includeMatches,findAllMatches:o=ne.findAllMatches,minMatchCharLength:c=ne.minMatchCharLength,isCaseSensitive:i=ne.isCaseSensitive,ignoreLocation:a=ne.ignoreLocation}={}){super(e),this._bitapSearch=new Bl(e,{location:t,threshold:n,distance:s,includeMatches:r,findAllMatches:o,minMatchCharLength:c,isCaseSensitive:i,ignoreLocation:a})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.*)"$/}static get singleRegex(){return/^(.*)$/}search(e){return this._bitapSearch.searchIn(e)}}class Vl extends at{constructor(e){super(e)}static get type(){return"include"}static get multiRegex(){return/^'"(.*)"$/}static get singleRegex(){return/^'(.*)$/}search(e){let t=0,n;const s=[],r=this.pattern.length;for(;(n=e.indexOf(this.pattern,t))>-1;)t=n+r,s.push([n,t-1]);const o=!!s.length;return{isMatch:o,score:o?0:1,indices:s}}}const cn=[du,Vl,gu,bu,ku,wu,hu,Dl],Gs=cn.length,vu=/ +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,$u="|";function yu(l,e={}){return l.split($u).map(t=>{let n=t.trim().split(vu).filter(r=>r&&!!r.trim()),s=[];for(let r=0,o=n.length;r<o;r+=1){const c=n[r];let i=!1,a=-1;for(;!i&&++a<Gs;){const f=cn[a];let u=f.isMultiMatch(c);u&&(s.push(new f(u,e)),i=!0)}if(!i)for(a=-1;++a<Gs;){const f=cn[a];let u=f.isSingleMatch(c);if(u){s.push(new f(u,e));break}}}return s})}const Su=new Set([Dl.type,Vl.type]);class Cu{constructor(e,{isCaseSensitive:t=ne.isCaseSensitive,includeMatches:n=ne.includeMatches,minMatchCharLength:s=ne.minMatchCharLength,ignoreLocation:r=ne.ignoreLocation,findAllMatches:o=ne.findAllMatches,location:c=ne.location,threshold:i=ne.threshold,distance:a=ne.distance}={}){this.query=null,this.options={isCaseSensitive:t,includeMatches:n,minMatchCharLength:s,findAllMatches:o,ignoreLocation:r,location:c,threshold:i,distance:a},this.pattern=t?e:e.toLowerCase(),this.query=yu(this.pattern,this.options)}static condition(e,t){return t.useExtendedSearch}searchIn(e){const t=this.query;if(!t)return{isMatch:!1,score:1};const{includeMatches:n,isCaseSensitive:s}=this.options;e=s?e:e.toLowerCase();let r=0,o=[],c=0;for(let i=0,a=t.length;i<a;i+=1){const f=t[i];o.length=0,r=0;for(let u=0,_=f.length;u<_;u+=1){const p=f[u],{isMatch:h,indices:S,score:k}=p.search(e);if(h){if(r+=1,c+=k,n){const w=p.constructor.type;Su.has(w)?o=[...o,...S]:o.push(S)}}else{c=0,r=0,o.length=0;break}}if(r){let u={isMatch:!0,score:c/r};return n&&(u.indices=o),u}}return{isMatch:!1,score:1}}}const an=[];function Nu(...l){an.push(...l)}function fn(l,e){for(let t=0,n=an.length;t<n;t+=1){let s=an[t];if(s.condition(l,e))return new s(l,e)}return new Bl(l,e)}const Wt={AND:"$and",OR:"$or"},un={PATH:"$path",PATTERN:"$val"},_n=l=>!!(l[Wt.AND]||l[Wt.OR]),Mu=l=>!!l[un.PATH],Eu=l=>!et(l)&&Hl(l)&&!_n(l),Ys=l=>({[Wt.AND]:Object.keys(l).map(e=>({[e]:l[e]}))});function Ul(l,e,{auto:t=!0}={}){const n=s=>{let r=Object.keys(s);const o=Mu(s);if(!o&&r.length>1&&!_n(s))return n(Ys(s));if(Eu(s)){const i=o?s[un.PATH]:r[0],a=o?s[un.PATTERN]:s[i];if(!Ge(a))throw new Error(xf(i));const f={keyId:on(i),pattern:a};return t&&(f.searcher=fn(a,e)),f}let c={children:[],operator:r[0]};return r.forEach(i=>{const a=s[i];et(a)&&a.forEach(f=>{c.children.push(n(f))})}),c};return _n(l)||(l=Ys(l)),n(l)}function Tu(l,{ignoreFieldNorm:e=ne.ignoreFieldNorm}){l.forEach(t=>{let n=1;t.matches.forEach(({key:s,norm:r,score:o})=>{const c=s?s.weight:null;n*=Math.pow(o===0&&c?Number.EPSILON:o,(c||1)*(e?1:r))}),t.score=n})}function Au(l,e){const t=l.matches;e.matches=[],Ve(t)&&t.forEach(n=>{if(!Ve(n.indices)||!n.indices.length)return;const{indices:s,value:r}=n;let o={indices:s,value:r};n.key&&(o.key=n.key.src),n.idx>-1&&(o.refIndex=n.idx),e.matches.push(o)})}function Ru(l,e){e.score=l.score}function Iu(l,e,{includeMatches:t=ne.includeMatches,includeScore:n=ne.includeScore}={}){const s=[];return t&&s.push(Au),n&&s.push(Ru),l.map(r=>{const{idx:o}=r,c={item:e[o],refIndex:o};return s.length&&s.forEach(i=>{i(r,c)}),c})}class St{constructor(e,t={},n){this.options={...ne,...t},this.options.useExtendedSearch,this._keyStore=new su(this.options.keys),this.setCollection(e,n)}setCollection(e,t){if(this._docs=e,t&&!(t instanceof yn))throw new Error(Qf);this._myIndex=t||Fl(this.options.keys,this._docs,{getFn:this.options.getFn,fieldNormWeight:this.options.fieldNormWeight})}add(e){!Ve(e)||(this._docs.push(e),this._myIndex.add(e))}remove(e=()=>!1){const t=[];for(let n=0,s=this._docs.length;n<s;n+=1){const r=this._docs[n];e(r,n)&&(this.removeAt(n),n-=1,s-=1,t.push(r))}return t}removeAt(e){this._docs.splice(e,1),this._myIndex.removeAt(e)}getIndex(){return this._myIndex}search(e,{limit:t=-1}={}){const{includeMatches:n,includeScore:s,shouldSort:r,sortFn:o,ignoreFieldNorm:c}=this.options;let i=Ge(e)?Ge(this._docs[0])?this._searchStringList(e):this._searchObjectList(e):this._searchLogical(e);return Tu(i,{ignoreFieldNorm:c}),r&&i.sort(o),Pl(t)&&t>-1&&(i=i.slice(0,t)),Iu(i,this._docs,{includeMatches:n,includeScore:s})}_searchStringList(e){const t=fn(e,this.options),{records:n}=this._myIndex,s=[];return n.forEach(({v:r,i:o,n:c})=>{if(!Ve(r))return;const{isMatch:i,score:a,indices:f}=t.searchIn(r);i&&s.push({item:r,idx:o,matches:[{score:a,value:r,norm:c,indices:f}]})}),s}_searchLogical(e){const t=Ul(e,this.options),n=(c,i,a)=>{if(!c.children){const{keyId:u,searcher:_}=c,p=this._findMatches({key:this._keyStore.get(u),value:this._myIndex.getValueForItemAtKeyId(i,u),searcher:_});return p&&p.length?[{idx:a,item:i,matches:p}]:[]}const f=[];for(let u=0,_=c.children.length;u<_;u+=1){const p=c.children[u],h=n(p,i,a);if(h.length)f.push(...h);else if(c.operator===Wt.AND)return[]}return f},s=this._myIndex.records,r={},o=[];return s.forEach(({$:c,i})=>{if(Ve(c)){let a=n(t,c,i);a.length&&(r[i]||(r[i]={idx:i,item:c,matches:[]},o.push(r[i])),a.forEach(({matches:f})=>{r[i].matches.push(...f)}))}}),o}_searchObjectList(e){const t=fn(e,this.options),{keys:n,records:s}=this._myIndex,r=[];return s.forEach(({$:o,i:c})=>{if(!Ve(o))return;let i=[];n.forEach((a,f)=>{i.push(...this._findMatches({key:a,value:o[f],searcher:t}))}),i.length&&r.push({idx:c,item:o,matches:i})}),r}_findMatches({key:e,value:t,searcher:n}){if(!Ve(t))return[];let s=[];if(et(t))t.forEach(({v:r,i:o,n:c})=>{if(!Ve(r))return;const{isMatch:i,score:a,indices:f}=n.searchIn(r);i&&s.push({score:a,key:e,value:r,idx:o,norm:c,indices:f})});else{const{v:r,n:o}=t,{isMatch:c,score:i,indices:a}=n.searchIn(r);c&&s.push({score:i,key:e,value:r,norm:o,indices:a})}return s}}St.version="6.6.2";St.createIndex=Fl;St.parseIndex=uu;St.config=ne;St.parseQuery=Ul;Nu(Cu);function Zs(l,e,t){const n=l.slice();return n[9]=e[t],n}function Js(l){let e,t;return e=new GenericRow({props:{item:l[9]}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p:C,i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}function Lu(l){let e,t,n,s,r,o,c;const i=[{network:!0},{account:!0},{search:!0},{isSearchScreen:!0},l[2]||{}];let a={};for(let p=0;p<i.length;p+=1)a=mn(a,i[p]);e=new Pe({props:a}),e.$on("search",l[5]);let f=l[3],u=[];for(let p=0;p<f.length;p+=1)u[p]=Js(Zs(l,f,p));const _=p=>y(u[p],1,1,()=>{u[p]=null});return{c(){R(e.$$.fragment),t=N(),n=$("p"),n.innerHTML=`<span style="color:var(--theme-color-caution);">Disclaimer:</span>
			This temporary search interface does not represent the look and function of the actual search interface currently under development for beta.`,s=N(),r=$("div");for(let p=0;p<u.length;p+=1)u[p].c();o=oe(),Ue(n,"font-size","12px"),g(r,"class","results no-margin")},m(p,h){I(e,p,h),m(p,t,h),m(p,n,h),m(p,s,h),m(p,r,h);for(let S=0;S<u.length;S+=1)u[S].m(r,null);v(r,o),l[6](r),c=!0},p(p,h){const S=h&4?dn(i,[i[0],i[1],i[2],i[3],hn(p[2]||{})]):{};if(e.$set(S),h&8){f=p[3];let k;for(k=0;k<f.length;k+=1){const w=Zs(p,f,k);u[k]?(u[k].p(w,h),b(u[k],1)):(u[k]=Js(w),u[k].c(),b(u[k],1),u[k].m(o.parentNode,o))}for(fe(),k=f.length;k<u.length;k+=1)_(k);ue()}},i(p){if(!c){b(e.$$.fragment,p);for(let h=0;h<f.length;h+=1)b(u[h]);c=!0}},o(p){y(e.$$.fragment,p),u=u.filter(Boolean);for(let h=0;h<u.length;h+=1)y(u[h]);c=!1},d(p){L(e,p),p&&d(t),p&&d(n),p&&d(s),p&&d(r),Oe(u,p),l[6](null)}}}function Ou(l){let e,t,n;return t=new ke({props:{debug:"Search",root:!0,$$slots:{default:[Lu]},$$scope:{ctx:l}}}),{c(){e=$("div"),R(t.$$.fragment),g(e,"class","search svelte-5f3tva"),Y(e,"display_none",!l[0])},m(s,r){m(s,e,r),I(t,e,null),n=!0},p(s,[r]){const o={};r&4102&&(o.$$scope={dirty:r,ctx:s}),t.$set(o),r&1&&Y(e,"display_none",!s[0])},i(s){n||(b(t.$$.fragment,s),n=!0)},o(s){y(t.$$.fragment,s),n=!1},d(s){s&&d(e),L(t)}}}var lt;(function(l){l.UNKNOWN="unknown",l.FAMILY="family",l.CHAIN="chain",l.NETWORK="network",l.ACCOUNT="account",l.CONTACT="contact",l.CONTRACT="contract",l.TOKEN="token",l.HOLDING="holding",l.APP="app",l.COIN="coin",l.TAG="tag",l.ICON="icon",l.IBCT="ibct",l.SNIP721="snip721",l.TXN="txn",l.OTHER="other"})(lt||(lt={}));function Pu(l,e,t){let n,s;X(l,Nt,_=>t(0,n=_)),X(l,Nr,_=>t(2,s=_));let r;const o=[];let c=[];const i=(_,p)=>new St(_,{includeScore:!0,includeMatches:!0,keys:["label",...p.map(h=>`details.${h}`)]});(async()=>{const _=await me.read();c=[(()=>i(_.entries().map(([p,h])=>({class:lt.CHAIN,name:h.name,resourcePath:p,resource:h,details:{name:h.name,id:h.id}})),["id"]))(),(()=>i(_.entries().flatMap(([p,h])=>gn(h.coins,(S,k)=>({class:lt.COIN,name:Kt(k.extra?.coingecko_id||"Unknown"),postname:S,resourcePath:`${p}/coin.${S}`,resource:{name:Kt(k.extra?.coingecko_id||"Unknown"),pfp:h.pfp,...k},details:{symbol:S,denom:k.denom,coingecko:k.extra?.coingecko_id||""}}))),["symbol","denom"]))(),...await Promise.all([(async()=>{const p=await Ze.read();return i(p.entries().map(([h,S])=>{const k=[],w=new Set;for(const[,E]of _)w.add(me.addressFor(S.pubkey,E));return k.push(...w),{class:lt.ACCOUNT,name:S.name,resourcePath:h,resource:S,details:{name:S.name,addresses:k}}}),["addresses"])})(),(async()=>{const p=await Je.read();return i([...p.contacts()].map(([h,S])=>({class:lt.CONTACT,name:S.name,resourcePath:h,resource:S,details:{name:S.name,notes:S.notes,addresses:[..._.inFamily(S.family)].map(([,k])=>me.bech32(S.address,k))}})),["notes"])})(),(async()=>{const p=await gl.read();return i(p.entries().map(([h,S])=>({class:lt.APP,name:S.host,resourcePath:h,resource:S,details:{host:S.host}})),[])})(),(async()=>{const p=[];for(const[,h]of _.entries())for(const[S,k]of ve(await Ie.readFungibleTokens(h)))for(const[w,E]of ve(k))p.push({class:lt.TOKEN,name:E.name,resourcePath:w,resource:E,details:{spec:S,name:E.name,symbol:E.symbol,bech32:E.bech32,codehash:E.hash}});return i(p,["spec","symbol","bech32","codehash"])})()])]})();function a(_){const p=[],h=[];let S=0;for(const k of c){const w=k.search(_);w.length&&(S+=h.length,h.push(...w),p.push({top:w[0].score,hits:w}))}h.sort((k,w)=>w.score-k.score),t(1,r.innerHTML="",r),console.log(h);for(const k of h)new tt({target:r,props:{...k.item,pfpDim:32}})}const f=_=>a(_.detail);function u(_){de[_?"unshift":"push"](()=>{r=_,t(1,r)})}return l.$$.update=()=>{l.$$.dirty&1&&n&&a(n)},[n,r,s,o,a,f,u]}class Hu extends J{constructor(e){super(),Q(this,e,Pu,Ou,Z,{})}}function ju(l){let e,t,n,s,r,o=(l[0][0]||l[0][1])+"",c,i,a=l[0][1]+"",f;return{c(){e=$("div"),t=$("div"),n=N(),s=$("div"),r=B("Step "),c=B(o),i=B(" of "),f=B(a),g(t,"class","bar svelte-1hwu1hf"),Ue(t,"width",l[1]+"%"),g(e,"class","progress svelte-1hwu1hf"),Y(e,"visible",l[0][0]>0),g(s,"class","step svelte-1hwu1hf"),Y(s,"visible",l[0][0]>0)},m(u,_){m(u,e,_),v(e,t),m(u,n,_),m(u,s,_),v(s,r),v(s,c),v(s,i),v(s,f)},p(u,[_]){_&2&&Ue(t,"width",u[1]+"%"),_&1&&Y(e,"visible",u[0][0]>0),_&1&&o!==(o=(u[0][0]||u[0][1])+"")&&ee(c,o),_&1&&a!==(a=u[0][1]+"")&&ee(f,a),_&1&&Y(s,"visible",u[0][0]>0)},i:C,o:C,d(u){u&&d(e),u&&d(n),u&&d(s)}}}function zu(l,e,t){let n,s;return X(l,Mr,r=>t(0,s=r)),l.$$.update=()=>{l.$$.dirty&1&&t(1,n=s[0]/s[1]*100)},[s,n]}class Fu extends J{constructor(e){super(),Q(this,e,zu,ju,Z,{})}}var Bu=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="m18 16 4-4-4-4v3h-5.06A8.974 8.974 0 0 0 8 3.95 3.005 3.005 0 0 0 5 1C3.34 1 2 2.34 2 4s1.34 3 3 3c.95 0 1.78-.45 2.33-1.14C9.23 6.9 10.6 8.77 10.92 11h-3.1C7.4 9.84 6.3 9 5 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c1.3 0 2.4-.84 2.82-2h3.1c-.32 2.23-1.69 4.1-3.58 5.14C6.78 17.45 5.95 17 5 17c-1.66 0-3 1.34-3 3s1.34 3 3 3a2.99 2.99 0 0 0 2.99-2.95A8.974 8.974 0 0 0 12.93 13H18v3z"/>
</svg>`,Du=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33A7.95 7.95 0 0 1 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z"/>
</svg>`,Vu=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M18 4v16H6V4h12m0-2H6c-1.1 0-2 .9-2 2v18h16V4c0-1.1-.9-2-2-2zm-2.5 8.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5S17 12.83 17 12s-.67-1.5-1.5-1.5z"/>
</svg>`;function Qs(l,e,t){const n=l.slice();return n[10]=e[t],n}function xs(l,e,t){const n=l.slice();return n[10]=e[t],n}function el(l){let e,t,n=l[10].icon+"",s,r,o=l[10].label+"",c,i,a,f;function u(){return l[5](l[10])}return{c(){e=$("li"),t=$("span"),s=N(),r=$("span"),c=B(o),i=N(),g(t,"class","icon svelte-fhv297"),g(r,"class","text svelte-fhv297"),g(e,"class","svelte-fhv297")},m(_,p){m(_,e,p),v(e,t),t.innerHTML=n,v(e,s),v(e,r),v(r,c),v(e,i),a||(f=x(e,"click",u),a=!0)},p(_,p){l=_},d(_){_&&d(e),a=!1,f()}}}function tl(l){let e,t,n=l[10].icon+"",s,r,o=l[10].label+"",c,i,a,f;function u(){return l[6](l[10])}return{c(){e=$("li"),t=$("span"),s=N(),r=$("span"),c=B(o),i=N(),g(t,"class","icon svelte-fhv297"),g(r,"class","text svelte-fhv297"),g(e,"class"," svelte-fhv297")},m(_,p){m(_,e,p),v(e,t),t.innerHTML=n,v(e,s),v(e,r),v(r,c),v(e,i),a||(f=x(e,"click",u),a=!0)},p(_,p){l=_},d(_){_&&d(e),a=!1,f()}}}function Uu(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h,S,k,w=l[2],E=[];for(let F=0;F<w.length;F+=1)E[F]=el(xs(l,w,F));let D=l[1],O=[];for(let F=0;F<D.length;F+=1)O[F]=tl(Qs(l,D,F));return{c(){e=$("div"),t=$("div"),n=N(),s=$("div"),r=$("div"),o=N(),c=$("div"),i=$("div"),a=$("ul");for(let F=0;F<E.length;F+=1)E[F].c();f=N(),u=$("hr"),_=N(),p=$("div"),h=$("ul");for(let F=0;F<O.length;F+=1)O[F].c();g(t,"class","backdrop svelte-fhv297"),g(r,"class","close icon svelte-fhv297"),g(a,"class","session svelte-fhv297"),g(u,"class","svelte-fhv297"),g(i,"class","top svelte-fhv297"),g(h,"class","items svelte-fhv297"),g(p,"class","main svelte-fhv297"),g(c,"class","menu svelte-fhv297"),g(s,"class","bar svelte-fhv297"),g(e,"class","side-menu svelte-fhv297"),Y(e,"collapsed",!l[0])},m(F,K){m(F,e,K),v(e,t),v(e,n),v(e,s),v(s,r),r.innerHTML=Er,v(s,o),v(s,c),v(c,i),v(i,a);for(let H=0;H<E.length;H+=1)E[H].m(a,null);v(i,f),v(i,u),v(c,_),v(c,p),v(p,h);for(let H=0;H<O.length;H+=1)O[H].m(h,null);S||(k=[x(t,"click",l[3]),x(r,"click",l[4])],S=!0)},p(F,[K]){if(K&4){w=F[2];let H;for(H=0;H<w.length;H+=1){const j=xs(F,w,H);E[H]?E[H].p(j,K):(E[H]=el(j),E[H].c(),E[H].m(a,null))}for(;H<E.length;H+=1)E[H].d(1);E.length=w.length}if(K&2){D=F[1];let H;for(H=0;H<D.length;H+=1){const j=Qs(F,D,H);O[H]?O[H].p(j,K):(O[H]=tl(j),O[H].c(),O[H].m(h,null))}for(;H<O.length;H+=1)O[H].d(1);O.length=D.length}K&1&&Y(e,"collapsed",!F[0])},i:C,o:C,d(F){F&&d(e),Oe(E,F),Oe(O,F),S=!1,Qe(k)}}}function qu(l,e,t){let n,s;X(l,yt,_=>t(7,n=_)),X(l,kt,_=>t(0,s=_)),ge("page");function r(_){_e(kt,s=!1,s),_===n.activeThread.id?n.activeThread.reset():n.activateThread(_)}return[s,[{label:"Accounts",icon:Du,click(){r(Ye.ACCOUNTS)}},{label:"Networks",icon:Bu,click(){r(Ye.NETWORKS)}}],[{label:"Log out",icon:Vu,async click(){await Tr(),globalThis.close()}}],()=>_e(kt,s=!1,s),()=>_e(kt,s=!1,s),_=>_.click(),_=>_.click()]}class Xu extends J{constructor(e){super(),Q(this,e,qu,Uu,Z,{})}}function Ku(l){let e;return{c(){e=B("[...]")},m(t,n){m(t,e,n)},p:C,d(t){t&&d(e)}}}function Wu(l){let e=(l[1]/1e3).toFixed(2)+"",t,n;return{c(){t=B(e),n=B(" seconds")},m(s,r){m(s,t,r),m(s,n,r)},p(s,r){r&2&&e!==(e=(s[1]/1e3).toFixed(2)+"")&&ee(t,e)},d(s){s&&d(t),s&&d(n)}}}function Gu(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h,S,k,w,E,D,O,F,K,H,j,T,q,M,U,P,A,V,se,pe,ie,le,ce,ae,re,z,G,Me,He,We,Be,Ae,$e,Re,De,Ee,ft,ut,W;function _t(Se,Xe){return Se[1]?Wu:Ku}let gt=_t(l),qe=gt(l);return{c(){e=$("div"),t=$("div"),n=N(),s=$("div"),r=$("div"),o=N(),c=$("div"),i=$("div"),a=$("div"),f=$("div"),u=N(),_=$("div"),_.textContent=`v${Ar}`,p=N(),h=$("div"),S=$("div"),S.textContent="Network Status",k=N(),w=$("div"),E=B(l[2]),D=N(),O=$("div"),F=$("div"),F.textContent="Chain Id",K=N(),H=$("div"),j=$("span"),T=B(l[4]),q=N(),M=$("div"),U=$("div"),U.textContent="Current Provider",P=N(),A=$("div"),V=$("span"),se=B(l[3]),pe=N(),ie=$("div"),le=$("div"),le.textContent="Current Block Height",ce=N(),ae=$("div"),re=B("#"),z=B(l[0]),G=N(),Me=$("div"),He=$("div"),He.textContent="Average Block Time",We=N(),Be=$("div"),qe.c(),Ae=N(),$e=$("div"),Re=$("div"),Re.textContent="Last Block Seen",De=N(),Ee=$("div"),ft=B(l[5]),g(t,"class","backdrop svelte-1y4wjl5"),g(r,"class","close icon svelte-1y4wjl5"),g(a,"class","app svelte-1y4wjl5"),g(S,"class","name svelte-1y4wjl5"),g(w,"class","value svelte-1y4wjl5"),g(h,"class","info svelte-1y4wjl5"),g(F,"class","name svelte-1y4wjl5"),g(j,"class","font-family_mono svelte-1y4wjl5"),g(H,"class","value svelte-1y4wjl5"),g(O,"class","info svelte-1y4wjl5"),g(U,"class","name svelte-1y4wjl5"),g(V,"class","font-family_mono svelte-1y4wjl5"),g(A,"class","value svelte-1y4wjl5"),g(M,"class","info svelte-1y4wjl5"),g(le,"class","name svelte-1y4wjl5"),g(ae,"class","value svelte-1y4wjl5"),g(ie,"class","info svelte-1y4wjl5"),g(He,"class","name svelte-1y4wjl5"),g(Be,"class","value svelte-1y4wjl5"),g(Me,"class","info svelte-1y4wjl5"),g(Re,"class","name svelte-1y4wjl5"),g(Ee,"class","value svelte-1y4wjl5"),g($e,"class","info svelte-1y4wjl5"),g(i,"class","main svelte-1y4wjl5"),g(c,"class","menu svelte-1y4wjl5"),g(s,"class","bar svelte-1y4wjl5"),g(e,"class","vendor-menu svelte-1y4wjl5"),Y(e,"collapsed",!l[6])},m(Se,Xe){m(Se,e,Xe),v(e,t),v(e,n),v(e,s),v(s,r),v(s,o),v(s,c),v(c,i),v(i,a),v(a,f),v(a,u),v(a,_),v(i,p),v(i,h),v(h,S),v(h,k),v(h,w),v(w,E),v(i,D),v(i,O),v(O,F),v(O,K),v(O,H),v(H,j),v(j,T),v(i,q),v(i,M),v(M,U),v(M,P),v(M,A),v(A,V),v(V,se),v(i,pe),v(i,ie),v(ie,le),v(ie,ce),v(ie,ae),v(ae,re),v(ae,z),v(i,G),v(i,Me),v(Me,He),v(Me,We),v(Me,Be),qe.m(Be,null),v(i,Ae),v(i,$e),v($e,Re),v($e,De),v($e,Ee),v(Ee,ft),ut||(W=[x(t,"click",l[8]),x(r,"click",l[9])],ut=!0)},p(Se,[Xe]){Xe&4&&ee(E,Se[2]),Xe&16&&ee(T,Se[4]),Xe&8&&ee(se,Se[3]),Xe&1&&ee(z,Se[0]),gt===(gt=_t(Se))&&qe?qe.p(Se,Xe):(qe.d(1),qe=gt(Se),qe&&(qe.c(),qe.m(Be,null))),Xe&32&&ee(ft,Se[5]),Xe&64&&Y(e,"collapsed",!Se[6])},i:C,o:C,d(Se){Se&&d(e),qe.d(),ut=!1,Qe(W)}}}function Yu(l,e,t){let n,s,r;X(l,$t,k=>t(11,n=k)),X(l,Rr,k=>t(7,s=k)),X(l,Et,k=>t(6,r=k));let o="",c=0,i=0,a="Loading",f="",u="";bl({blockInfo(k){if(n===k.chain){t(2,a="Online"),t(4,u=k.header.chain_id),t(0,o=k.header.height),c=Date.now();const w=k.recents;if(w.length>1){const E=[];for(let D=1;D<w.length;D++)E.push(w[D]-w[D-1]);t(1,i=E.reduce((D,O)=>D+O,0)/E.length)}}}});let _="[...]";const p=window.setInterval(()=>{if(c>0){const k=Date.now()-c;t(5,_=`${Math.round(k/1e3)} seconds ago`)}},500);Ot(()=>{clearInterval(p)});const h=()=>_e(Et,r=!1,r),S=()=>_e(Et,r=!1,r);return l.$$.update=()=>{l.$$.dirty&128&&s&&(t(0,o="[...]"),c=0,t(1,i=0),t(2,a="Connecting"),t(3,f=new URL(s.grpcWebUrl).host),t(4,u=""))},[o,i,a,f,u,_,r,s,h,S]}class Zu extends J{constructor(e){super(),Q(this,e,Yu,Gu,Z,{})}}class pn{constructor(e,t){we(this,"_dc_creator");we(this,"_yc_component");we(this,"_h_props");we(this,"_h_context");we(this,"_dm_page");we(this,"_si_page");we(this,"_h_events",{});we(this,"_sr_path");we(this,"_sx_pattern");this._kt_parent=t,{creator:this._dc_creator,props:this._h_props={},context:this._h_context={}}=e,this._si_page=crypto.randomUUID();const n=Rt("div"),s=new Map(ve({...this._h_context,page:this}));if(this._yc_component=new this._dc_creator({target:n,props:{...this._h_props,k_page:this},context:s}),e.events)for(const[o,c]of ve(e.events))this._yc_component.$on(o,c);const r=n.firstElementChild;if(!r)throw new Error(`No DOM element was created during page component spawning using: ${JSON.stringify(e)}`);this._dm_page=r}get id(){return this._si_page}get index(){return this.thread.history.length}get thread(){return this._kt_parent}get creator(){return this._dc_creator}get component(){return this._yc_component}get props(){return this._h_props}get dom(){return this._dm_page}equivalent(e){return e.creator===this.creator&&!kl(e.props||{},this.props)}peak(){return this._kt_parent.peak()}push(e){return this._kt_parent.push(e,this)}pop(e){return this._kt_parent.pop(e||{},this)}jump(e,t){return this._kt_parent.jump(e,t||{},this)}on(e){for(const[t,n]of ve(e))n&&(this._h_events[t]=this._h_events[t]||[]).push(n)}async fire(e,t){const n=this._h_events[e];n&&await Promise.all(n.map(s=>s(...t||[])))}destroy(){this._yc_component.$destroy()}reset(){this._kt_parent.reset()}}class Ju{constructor(e,t,n){we(this,"_dm_thread");we(this,"_a_history",[]);this._si_thread=e,this._gc_default=t,this._k_navigator=n,this._dm_thread=Rt("div",{class:"thread","data-thread-id":this._si_thread,style:"z-index: 100;"})}get id(){return this._si_thread}get default(){return this._gc_default}get history(){return this._a_history}get page(){return this._a_history[0]}get dom(){return this._dm_thread}_place(e){const t=new pn({...e,context:{...this._k_navigator.context,...e.context}},this);return this._dm_thread.appendChild(t.dom),this._a_history.unshift(t),t}reset(e=this.default,t){const{keepTop:n}=t||{},s=this._a_history;for(let o=n?1:0;o<s.length;o++)s[o].component.$destroy();s.length=0;const r=this._place(e);return this._k_navigator.after_reset(this,r,t||{}),r}peak(){return this._a_history[1]}push(e,t){if(t!==this.page)throw new Error("Prevented inactive page from pushing new screen");if(!this._k_navigator.before_push(e,t,this))throw new Error("Prevented inactive thread from pushing new screen");const n=this._place(e);return this._k_navigator.after_push(this,t,n),n}pop(e,t){if(t!==this.page)throw new Error("Prevented inactive page from popping active screen");if(this._a_history.length<2)throw new Error("Failed to pop empty history");if(!this._k_navigator.before_pop(e,this._a_history[1],t,this))throw new Error("Prevented inactive thread from popping active screen");this._a_history.shift();const n=this.page;return this._k_navigator.after_pop(this,t,n,e),n}jump(e,t,n){if(n!==this.page)throw new Error("Prevented inactive page from jumping to screen");if(!this._k_navigator.before_jump(t,e,n,this))throw new Error("Prevented inactive thread from jumping to screen");const s=this._a_history[1];if(!t.force&&s?.equivalent(e))return this.pop({},n);const r=new pn(e,this);return this.reset(),ql(r.dom,n.dom,1),this._k_navigator.after_jump(this,n,r,t).then(()=>{try{n.destroy()}catch{console.warn(`Failed to destroy stale component belonging to page: ${n.creator.name+""}`),n.dom.remove()}}),r}hide(){this._dm_thread.style.display="none"}show(){this._dm_thread.style.display="initial"}}function ql(l,e,t){const n=+l.style.zIndex,s=n+t;l.style.zIndex=n+"",e.style.zIndex=s+""}class Qu{constructor(e){we(this,"_h_threads",{});we(this,"_h_thread_spawners");we(this,"_dm_threads");we(this,"_dm_buffer",Rt("div"));we(this,"_g_hooks");we(this,"_h_context");we(this,"_si_thread",Ye.DEFAULT);we(this,"_c_thread_z",200);this._gc_navigator=e,{container:this._dm_threads,threads:this._h_thread_spawners,hooks:this._g_hooks,context:this._h_context={}}=e,this._new_thread(Ye.DEFAULT)}get context(){return this._h_context}_new_thread(e,t={},n={}){const s=this._h_thread_spawners[e];if(!s)throw new Error(`Navigator has no such thread registered: '${e}'`);const r=new Ju(e,s(t,n),this);return this._h_threads[e]=r,this._dm_threads.appendChild(r.dom),r.reset({...r.default,props:{...r.default.props,...t}}),r}get activeThread(){return this._h_threads[this._si_thread]}get activePage(){return this.activeThread.page}before_push(e,t,n){return!(this.activeThread!==n||this._g_hooks.before_change?.(n,t,"push")===!1||this._g_hooks.before_push?.(n,t,e)===!1)}before_pop(e,t,n,s){return!(this.activeThread!==s||this._g_hooks.before_change?.(s,n,"pop")===!1||this._g_hooks.before_pop?.(s,n,t,e)===!1)}before_jump(e,t,n,s){return!(this.activeThread!==s||this._g_hooks.before_change?.(s,n,"jump")===!1||this._g_hooks.before_jump?.(s,n,t,e)===!1)}async before_switch(e,t){if(this._g_hooks.before_change?.(e,e.page,"switch")===!1)throw new Error("Cannot stop thread switch");await this._g_hooks.before_switch?.(e,t)}async after_push(e,t,n){const s=await this._g_hooks.after_push?.(e,t,n);await this._g_hooks.after_change?.(e,t,n,"push",s||{})}async after_pop(e,t,n,s){const r=await this._g_hooks.after_pop?.(e,t,n,s);await this._g_hooks.after_change?.(e,t,n,"pop",r||{})}async after_jump(e,t,n,s){const r=await this._g_hooks.after_jump?.(e,t,n,s);await this._g_hooks.after_change?.(e,t,n,"jump",r||{})}async after_reset(e,t,n){const s=await this._g_hooks.after_reset?.(e,t,n);await this._g_hooks.after_change?.(e,null,t,"reset",s||{})}async after_switch(e,t){await this._g_hooks.after_switch?.(e,t)}async activateThread(e,t={}){const n=this.activeThread,s=this.activePage;let r=this._h_threads[e];if(e!==this._si_thread){if(await this.before_switch(n,e),this._si_thread,!r)r=this._new_thread(e,t);else if(kl(r.default.props||{},t)){const o=new pn({...r.default,props:t,context:this._h_context},r);r.reset(o,{keepTop:!0}),ql(s.dom,o.dom,-1)}return this._si_thread=e,this.activeThread.show(),this.activeThread.dom.style.zIndex=this._c_thread_z+++"",await this.after_switch(n,r),!0}return!1}}function xu(l){let e,t,n={ctx:l,current:null,token:null,hasCatch:!1,pending:s_,then:t_,catch:e_,value:25,blocks:[,,,]};return Te(Ut.getRootKey(),n),{c(){e=oe(),n.block.c()},m(s,r){m(s,e,r),n.block.m(s,n.anchor=r),n.mount=()=>e.parentNode,n.anchor=e,t=!0},p(s,r){l=s,Le(n,l,r)},i(s){t||(b(n.block),t=!0)},o(s){for(let r=0;r<3;r+=1){const o=n.blocks[r];y(o)}t=!1},d(s){s&&d(e),n.block.d(s),n.token=null,n=null}}}function e_(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function t_(l){let e,t,n=l[25]&&n_();return{c(){n&&n.c(),e=oe()},m(s,r){n&&n.m(s,r),m(s,e,r),t=!0},p:C,i(s){t||(b(n),t=!0)},o(s){y(n),t=!1},d(s){n&&n.d(s),s&&d(e)}}}function n_(l){let e,t,n,s,r,o,c,i,a,f,u,_;return e=new Lf({}),n=new Kf({}),r=new Hu({}),c=new Zu({}),a=new Xu({}),u=new jf({}),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),R(r.$$.fragment),o=N(),R(c.$$.fragment),i=N(),R(a.$$.fragment),f=N(),R(u.$$.fragment)},m(p,h){I(e,p,h),m(p,t,h),I(n,p,h),m(p,s,h),I(r,p,h),m(p,o,h),I(c,p,h),m(p,i,h),I(a,p,h),m(p,f,h),I(u,p,h),_=!0},i(p){_||(b(e.$$.fragment,p),b(n.$$.fragment,p),b(r.$$.fragment,p),b(c.$$.fragment,p),b(a.$$.fragment,p),b(u.$$.fragment,p),_=!0)},o(p){y(e.$$.fragment,p),y(n.$$.fragment,p),y(r.$$.fragment,p),y(c.$$.fragment,p),y(a.$$.fragment,p),y(u.$$.fragment,p),_=!1},d(p){L(e,p),p&&d(t),L(n,p),p&&d(s),L(r,p),p&&d(o),L(c,p),p&&d(i),L(a,p),p&&d(f),L(u,p)}}}function s_(l){return{c:C,m:C,p:C,i:C,o:C,d:C}}function l_(l){let e,t,n,s,r,o,c,i,a;const f=l[7].default,u=rt(f,l,l[6],null);c=new Fu({});let _=l[3]&&xu(l);return{c(){e=$("main"),t=$("div"),n=N(),s=$("div"),r=N(),u&&u.c(),o=N(),R(c.$$.fragment),i=N(),_&&_.c(),g(t,"class","content threads svelte-m1b0zj"),g(s,"class","content exitting svelte-m1b0zj"),g(e,"class","viewport svelte-m1b0zj")},m(p,h){m(p,e,h),v(e,t),l[8](t),v(e,n),v(e,s),l[9](s),v(e,r),u&&u.m(e,null),v(e,o),I(c,e,null),v(e,i),_&&_.m(e,null),l[10](e),a=!0},p(p,[h]){u&&u.p&&(!a||h&64)&&ot(u,f,p,p[6],a?ct(f,p[6],h,null):it(p[6]),null),p[3]&&_.p(p,h)},i(p){a||(b(u,p),b(c.$$.fragment,p),b(_),a=!0)},o(p){y(u,p),y(c.$$.fragment,p),y(_),a=!1},d(p){p&&d(e),l[8](null),l[9](null),u&&u.d(p),L(c),_&&_.d(),l[10](null)}}}function r_(l,e,t){let n,s,r,o,c,i,a,f,u;X(l,yt,M=>t(11,n=M)),X(l,Mt,M=>t(12,s=M)),X(l,Vt,M=>t(13,r=M)),X(l,xe,M=>t(14,o=M)),X(l,At,M=>t(15,c=M)),X(l,Ln,M=>t(16,i=M)),X(l,mt,M=>t(17,a=M)),X(l,$t,M=>t(18,f=M)),X(l,je,M=>t(19,u=M));let{$$slots:_={},$$scope:p}=e,{page:h}=e;const S=h;let{mode:k}=e;const w=k==="flow",E=k==="app";let D,O,F;const K=Object.fromEntries(Ir().entries());async function H(M,U=!1){return await Lr(0),new Promise(P=>{M.addEventListener("transitionend",function(V){V.propertyName==="transform"&&(M.classList.add("slid"),P())}),M.style.transform=`translateX(${U?"0px":"var(--app-window-width)"})`})}Gt(async()=>{const M={container:O,context:K,threads:{default:()=>({creator:vl})},hooks:{before_change(P,A,V){A.fire("blur")},after_push(P,A,V){ln().then(()=>{H(V.dom,!0)})},after_pop(P,A,V,se){V.fire("restore"),se.bypassAnimation||(A.dom.style.transform="translateX(var(--app-window-width))")},after_change(P,A,V,se,pe={}){_e(Vt,r=V,r),_e(Mt,s=P,s),V.fire("focus")},async before_switch(){try{await Promise.all([u||xt(je,!0),me.read().then(P=>_e($t,f=ve(P.raw)[0][0],f)),a||xt(mt,!0),bn.read().then(P=>_e(Ln,i=ve(P.raw)[0][0],i)),c||xt(At,!0),Ze.read().then(P=>_e(xe,o=ve(P.raw)[0][0],o))]),delete this.before_switch}catch{}},async after_switch(P,A){_e(Vt,r=A.page,r),_e(Mt,s=A,s),A.page.fire("focus"),await ln(),await H(A.page.dom,!0)}}};w?M.threads={default:()=>S}:E&&(M.threads=ml(Ol,(P,A)=>({[P]:V=>({creator:A,props:V})})),M.threads.init=(P,A)=>({...S,props:{...S.props,...P},context:{...S.context,...A}}));const U=new Qu(M);_e(yt,n=U,n)});function j(M){de[M?"unshift":"push"](()=>{O=M,t(1,O)})}function T(M){de[M?"unshift":"push"](()=>{F=M,t(2,F)})}function q(M){de[M?"unshift":"push"](()=>{D=M,t(0,D)})}return l.$$set=M=>{"page"in M&&t(4,h=M.page),"mode"in M&&t(5,k=M.mode),"$$scope"in M&&t(6,p=M.$$scope)},[D,O,F,E,h,k,p,_,j,T,q]}class g_ extends J{constructor(e){super(),Q(this,e,r_,l_,Z,{page:4,mode:5})}}function nl(l){let e,t,n,s;return{c(){e=$("div"),t=B(l[1]),g(e,"class","validation-message")},m(r,o){m(r,e,o),v(e,t),s=!0},p(r,o){(!s||o&2)&&ee(t,r[1])},i(r){s||(ht(()=>{n||(n=ze(e,Fe,{duration:300},!0)),n.run(1)}),s=!0)},o(r){n||(n=ze(e,Fe,{duration:300},!1)),n.run(0),s=!1},d(r){r&&d(e),r&&n&&n.end()}}}function o_(l){let e,t,n,s,r,o,c=l[1]&&nl(l);return{c(){e=$("input"),t=N(),c&&c.c(),n=oe(),g(e,"type","password"),g(e,"name","password"),g(e,"placeholder","Password"),Y(e,"invalid",l[1])},m(i,a){m(i,e,a),ye(e,l[0]),m(i,t,a),c&&c.m(i,a),m(i,n,a),s=!0,r||(o=x(e,"input",l[4]),r=!0)},p(i,a){a&1&&e.value!==i[0]&&ye(e,i[0]),a&2&&Y(e,"invalid",i[1]),i[1]?c?(c.p(i,a),a&2&&b(c,1)):(c=nl(i),c.c(),b(c,1),c.m(n.parentNode,n)):c&&(fe(),y(c,1,1,()=>{c=null}),ue())},i(i){s||(b(c),s=!0)},o(i){y(c),s=!1},d(i){i&&d(e),i&&d(t),c&&c.d(i),i&&d(n),r=!1,o()}}}function i_(l){let e,t,n,s,r,o,c,i,a,f,u,_,p,h;i=new he({props:{key:"password",name:"",$$slots:{default:[o_]},$$scope:{ctx:l}}}),f=new dt({props:{confirm:["Unlock",l[3]]}});function S(w){l[5](w)}let k={hide:!0};return l[2].items!==void 0&&(k.items=l[2].items),_=new Cl({props:k}),de.push(()=>Ce(_,"items",S)),{c(){e=$("div"),e.innerHTML='<img width="96" src="/media/vendor/logo-96px.png" srcset="/media/vendor/logo-96px.png 1x, /media/vendor/logo-192px.png 2x" alt="StarShell"/>',t=N(),n=$("div"),n.innerHTML='<img src="/media/vendor/title.svg" alt=""/>',s=N(),r=$("div"),r.textContent="\xA0",o=N(),c=$("div"),R(i.$$.fragment),a=N(),R(f.$$.fragment),u=N(),R(_.$$.fragment),g(e,"class","logo"),g(n,"class","title"),g(r,"class","line svelte-wsweyo"),g(c,"class","form flex-rows")},m(w,E){m(w,e,E),m(w,t,E),m(w,n,E),m(w,s,E),m(w,r,E),m(w,o,E),m(w,c,E),I(i,c,null),m(w,a,E),I(f,w,E),m(w,u,E),I(_,w,E),h=!0},p(w,E){const D={};E&1027&&(D.$$scope={dirty:E,ctx:w}),i.$set(D);const O={};!p&&E&4&&(p=!0,O.items=w[2].items,Ne(()=>p=!1)),_.$set(O)},i(w){h||(b(i.$$.fragment,w),b(f.$$.fragment,w),b(_.$$.fragment,w),h=!0)},o(w){y(i.$$.fragment,w),y(f.$$.fragment,w),y(_.$$.fragment,w),h=!1},d(w){w&&d(e),w&&d(t),w&&d(n),w&&d(s),w&&d(r),w&&d(o),w&&d(c),L(i),w&&d(a),L(f,w),w&&d(u),L(_,w)}}}function c_(l){let e,t,n;return t=new ke({props:{debug:"Authenticate",classNames:"welcome",$$slots:{default:[i_]},$$scope:{ctx:l}}}),{c(){e=N(),R(t.$$.fragment)},m(s,r){m(s,e,r),I(t,s,r),n=!0},p(s,[r]){const o={};r&1031&&(o.$$scope={dirty:r,ctx:s}),t.$set(o)},i(s){n||(b(t.$$.fragment,s),n=!0)},o(s){y(t.$$.fragment,s),n=!1},d(s){s&&d(e),L(t,s)}}}function a_(l,e,t){const n=ge("completed");let s="",r="",o=!1,c=0,i=new Sl;function a(p){t(2,i=i.event(p,Date.now()-c))}async function f(p=!1){if(o)return 1;o=!0;const h=()=>(o=!1,1);t(1,r=""),c=Date.now(),a("Estimating time to complete");{const S=window.performance.now();await Ut.deriveRootBits(ol,il,1/50);const w=window.performance.now()-S,E=2*(w*50);a(`About ${(E/1e3).toFixed(1)} seconds`)}try{await al(s,p,a)}catch(S){if(S instanceof Or)t(1,r="No accounts detected");else if(S instanceof cl)t(1,r="Invalid passphrase");else{if(S instanceof Pr)return t(1,r="Vault is partially corrupted; attempting recovery..."),await f(!0);p?t(1,r=`Recovery failed. Vault may be irreparably corrupted.
${S.message}`):S instanceof Hr?t(1,r=`Vault appears to be irreparably corrupted.
${S.message}`):t(1,r=`Unknown error occurred: ${S.stack||S.message}`)}return h()}return n&&n(!0),h()}function u(){s=this.value,t(0,s)}function _(p){l.$$.not_equal(i.items,p)&&(i.items=p,t(2,i))}return[s,r,i,f,u,_]}class b_ extends J{constructor(e){super(),Q(this,e,a_,c_,Z,{})}}const w_=Yt(document,"section#dom-log"),f_=Yt(document,"#dom-log-list");function k_(l){console.log(l),f_?.append(Rt("li",{},[Rt("pre",{},[l])]))}function u_(l){let e,t="&nbsp;";return{c(){e=$("div"),g(e,"class","no-margin horizon svelte-12kmiz9")},m(n,s){m(n,e,s),e.innerHTML=t},p:C,i:C,o:C,d(n){n&&d(e)}}}class __ extends J{constructor(e){super(),Q(this,e,null,u_,Z,{})}}function p_(l){let e,t,n,s,r,o,c,i,a,f,u,_;return e=new wn({props:{dim:96}}),n=new Nl({}),r=new __({}),u=new dt({props:{confirm:["Get Started"],contd:{creator:Ml}}}),{c(){R(e.$$.fragment),t=N(),R(n.$$.fragment),s=N(),R(r.$$.fragment),o=N(),c=$("div"),c.innerHTML=`<div>Welcome to the beta program.</div> 
		<div>Thank for you being a tester!</div>`,i=N(),a=$("p"),f=N(),R(u.$$.fragment),g(c,"class","large")},m(p,h){I(e,p,h),m(p,t,h),I(n,p,h),m(p,s,h),I(r,p,h),m(p,o,h),m(p,c,h),m(p,i,h),m(p,a,h),m(p,f,h),I(u,p,h),_=!0},p:C,i(p){_||(b(e.$$.fragment,p),b(n.$$.fragment,p),b(r.$$.fragment,p),b(u.$$.fragment,p),_=!0)},o(p){y(e.$$.fragment,p),y(n.$$.fragment,p),y(r.$$.fragment,p),y(u.$$.fragment,p),_=!1},d(p){L(e,p),p&&d(t),L(n,p),p&&d(s),L(r,p),p&&d(o),p&&d(c),p&&d(i),p&&d(a),p&&d(f),L(u,p)}}}function m_(l){let e,t;return e=new ke({props:{root:!0,classNames:"preregister",$$slots:{default:[p_]},$$scope:{ctx:l}}}),{c(){R(e.$$.fragment)},m(n,s){I(e,n,s),t=!0},p(n,[s]){const r={};s&1&&(r.$$scope={dirty:s,ctx:n}),e.$set(r)},i(n){t||(b(e.$$.fragment,n),t=!0)},o(n){y(e.$$.fragment,n),t=!1},d(n){L(e,n)}}}class v_ extends J{constructor(e){super(),Q(this,e,null,m_,Z,{})}}export{Ec as A,vl as B,Pe as H,v_ as P,ke as S,Ye as T,wn as a,Nl as b,__ as c,w_ as d,g_ as e,k_ as f,b_ as g};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
