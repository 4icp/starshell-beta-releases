var rr=Object.defineProperty;var or=(l,e,n)=>e in l?rr(l,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):l[e]=n;var $e=(l,e,n)=>(or(l,typeof e!="symbol"?e+"":e,n),n);import{S as x,i as ee,s as Q,j as y,Q as He,k as m,z as N,n as d,x as w,R as Y,T as v,U as Se,h as M,w as H,Y as J,Z as ir,a as ve,c as T,m as A,t as k,b as S,d as I,_ as he,A as at,$ as Nn,D as ol,a0 as me,f as de,g as Ce,l as Me,a1 as cr,a2 as ar,V as Ut,a3 as il,a4 as cl,M as fr,a5 as ur,a6 as al,N as fl,a7 as ie,a8 as Ne,a9 as te,aa as re,ab as oe,ac as rt,ad as Ge,ae as qe,af as ge,ag as Ie,ah as Re,e as K,ai as Rt,aj as ze,ak as _r,L as ke,al as Ae,am as ul,an as dt,ao as we,ap as Xt,aq as vn,ar as Kt,y as ht,v as st,as as $n,at as Zt,au as _l,av as Lt,aw as xe,ax as fe,ay as ot,az as pl,aA as pr,F as kn,K as kt,aB as an,aC as mr,aD as fn,aE as mt,aF as dr,aG as hr,aH as gr,aI as br,H as Ee,aJ as wr,aK as Ue,aL as ml,aM as vt,aN as Jt,aO as Qt,aP as xt,aQ as en,aR as vr,aS as it,aT as Wt,aU as gt,aV as dl,aW as nn,aX as Bt,aY as un,aZ as Mt,a_ as Nt,a$ as $r,b0 as Et,G as yn,b1 as kr,b2 as yr,C as hl,b3 as En,b4 as Tt,b5 as At,b6 as Ot,b7 as Sr,b8 as gl,b9 as bl,E as Cr,ba as Mr,bb as Nr,bc as Er,u as be,bd as tn,be as jt,bf as Tr,O as Ar,bg as Ir,bh as _n,bi as Rr,bj as wl,bk as Gt,bl as Lr,bm as Or,bn as Tn,bo as jr,bp as Pr,bq as sn,br as ln,bs as vl,I as Hr,bt as zr,bu as Ct,bv as Fr,bw as An,bx as Vt,by as qt,bz as wt,bA as In,bB as Rn,bC as Ln,bD as On,bE as jn,bF as Br,bG as $l,bH as Dr,bI as Vr,bJ as qr,bK as Ur,bL as Xr,bM as Kr,B as Wr,bN as Gr,bO as rn,bP as Yr,bQ as It,bR as kl,bS as Zr,bT as Jr,bU as Pn,bV as on,bW as Qr,bX as xr,bY as eo,bZ as to}from"./web-resource-cache.fb3e84c9.js";function no(l){let e;return{c(){e=y("span"),He(e,"display","none")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}class yl extends x{constructor(e){super(),ee(this,e,null,no,Q,{})}}function Hn(l,e,n){const t=l.slice();return t[2]=e[n],t}function so(l){let e,n,t,s=Fn(l[2].value.offset)+"",r,o,c,i,a=l[2].value.message+"",f;return{c(){e=y("span"),n=y("span"),t=H("+"),r=H(s),o=H("ms:"),c=M(),i=y("span"),f=H(a),w(n,"class","offset"),w(i,"class","message"),w(e,"class","event")},m(u,_){m(u,e,_),v(e,n),v(n,t),v(n,r),v(n,o),v(e,c),v(e,i),v(i,f)},p(u,_){_&1&&s!==(s=Fn(u[2].value.offset)+"")&&J(r,s),_&1&&a!==(a=u[2].value.message+"")&&J(f,a)},d(u){u&&d(e)}}}function lo(l){let e,n=l[2].value+"",t;return{c(){e=y("span"),t=H(n),w(e,"class","string")},m(s,r){m(s,e,r),v(e,t)},p(s,r){r&1&&n!==(n=s[2].value+"")&&J(t,n)},d(s){s&&d(e)}}}function zn(l){let e,n;function t(o,c){if(o[2].type==="string")return lo;if(o[2].type==="event")return so}let s=t(l),r=s&&s(l);return{c(){e=y("li"),r&&r.c(),n=M()},m(o,c){m(o,e,c),r&&r.m(e,null),v(e,n)},p(o,c){s===(s=t(o))&&r?r.p(o,c):(r&&r.d(1),r=s&&s(o),r&&(r.c(),r.m(e,n)))},d(o){o&&d(e),r&&r.d()}}}function ro(l){let e,n,t=l[0],s=[];for(let r=0;r<t.length;r+=1)s[r]=zn(Hn(l,t,r));return{c(){e=y("div"),n=y("ol");for(let r=0;r<s.length;r+=1)s[r].c();w(e,"class","log-container svelte-13jddbg"),Y(e,"display_none",l[1])},m(r,o){m(r,e,o),v(e,n);for(let c=0;c<s.length;c+=1)s[c].m(n,null)},p(r,[o]){if(o&1){t=r[0];let c;for(c=0;c<t.length;c+=1){const i=Hn(r,t,c);s[c]?s[c].p(i,o):(s[c]=zn(i),s[c].c(),s[c].m(n,null))}for(;c<s.length;c+=1)s[c].d(1);s.length=t.length}o&2&&Y(e,"display_none",r[1])},i:N,o:N,d(r){r&&d(e),Se(s,r)}}}class Sl{constructor(){this._a_items=[]}get items(){return this._a_items}set items(e){this._a_items=e}event(e,n){return this._a_items.push({type:"event",value:{message:e,offset:n}}),this}}function Fn(l){return(l/1e3).toFixed(2).padStart(5,"0")}function oo(l,e,n){let{items:t}=e,{hide:s=!1}=e;return l.$$set=r=>{"items"in r&&n(0,t=r.items),"hide"in r&&n(1,s=r.hide)},[t,s]}class Cl extends x{constructor(e){super(),ee(this,e,oo,ro,Q,{items:0,hide:1})}}function io(l){let e,n,t;return{c(){e=y("div"),n=y("img"),w(n,"alt","StarShell title"),ir(n.src,t="/media/vendor/title.svg")||w(n,"src",t),w(n,"class","svelte-1htd4i8"),w(e,"class","no-margin title svelte-1htd4i8"),He(e,"width",l[0]+"px")},m(s,r){m(s,e,r),v(e,n)},p:N,i:N,o:N,d(s){s&&d(e)}}}function co(l,e,n){let{width:t=180}=e;const s=t;return l.$$set=r=>{"width"in r&&n(1,t=r.width)},[s,t]}class Ml extends x{constructor(e){super(),ee(this,e,co,io,Q,{width:1})}}function ao(l){let e,n,t,s,r,o,c,i,a,f;return a=new at({props:{cancel:"pop",confirm:["Use anyway",l[0]],wait:5e3}}),{c(){e=y("h3"),e.textContent="Weak Password Warning",n=M(),t=y("p"),t.textContent="The password you entered was found on a list of the top ten thousand most commonly used passwords.",s=M(),r=y("p"),r.textContent="In order to help prevent the loss of funds, you are encouraged to create a strong, unique password.",o=M(),c=y("p"),c.textContent="How do you want to proceed?",i=M(),T(a.$$.fragment)},m(u,_){m(u,e,_),m(u,n,_),m(u,t,_),m(u,s,_),m(u,r,_),m(u,o,_),m(u,c,_),m(u,i,_),A(a,u,_),f=!0},p:N,i(u){f||(k(a.$$.fragment,u),f=!0)},o(u){S(a.$$.fragment,u),f=!1},d(u){u&&d(e),u&&d(n),u&&d(t),u&&d(s),u&&d(r),u&&d(o),u&&d(c),u&&d(i),I(a,u)}}}function fo(l){let e,n;return e=new ve({props:{$$slots:{default:[ao]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&32&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function uo(l,e,n){let{attempt_register:t}=e,{weakness:s}=e;const r=he("page");function o(){t(),r.pop()}return l.$$set=c=>{"attempt_register"in c&&n(1,t=c.attempt_register),"weakness"in c&&n(2,s=c.weakness)},[o,t,s]}class _o extends x{constructor(e){super(),ee(this,e,uo,fo,Q,{attempt_register:1,weakness:2})}}function Bn(l){let e,n,t,s;return{c(){e=y("div"),n=H(l[4]),w(e,"class","validation-message")},m(r,o){m(r,e,o),v(e,n),s=!0},p(r,o){(!s||o&16)&&J(n,r[4])},i(r){s||(Ge(()=>{t||(t=qe(e,ge,{duration:300},!0)),t.run(1)}),s=!0)},o(r){t||(t=qe(e,ge,{duration:300},!1)),t.run(0),s=!1},d(r){r&&d(e),r&&t&&t.end()}}}function po(l){let e,n,t,s,r,o,c=!l[2]&&l[4]&&Bn(l);return{c(){e=y("input"),n=M(),c&&c.c(),t=ie(),w(e,"type","password"),w(e,"autocomplete","new-password"),w(e,"name","password"),w(e,"placeholder","Password")},m(i,a){m(i,e,a),Ne(e,l[0]),m(i,n,a),c&&c.m(i,a),m(i,t,a),s=!0,r||(o=[te(e,"blur",l[10]),te(e,"input",l[11])],r=!0)},p(i,a){a&1&&e.value!==i[0]&&Ne(e,i[0]),!i[2]&&i[4]?c?(c.p(i,a),a&20&&k(c,1)):(c=Bn(i),c.c(),k(c,1),c.m(t.parentNode,t)):c&&(re(),S(c,1,1,()=>{c=null}),oe())},i(i){s||(k(c),s=!0)},o(i){S(c),s=!1},d(i){i&&d(e),i&&d(n),c&&c.d(i),i&&d(t),r=!1,rt(o)}}}function Dn(l){let e,n,t,s;return{c(){e=y("div"),n=H(l[5]),w(e,"class","validation-message")},m(r,o){m(r,e,o),v(e,n),s=!0},p(r,o){(!s||o&32)&&J(n,r[5])},i(r){s||(Ge(()=>{t||(t=qe(e,ge,{duration:300},!0)),t.run(1)}),s=!0)},o(r){t||(t=qe(e,ge,{duration:300},!1)),t.run(0),s=!1},d(r){r&&d(e),r&&t&&t.end()}}}function mo(l){let e,n,t,s,r,o,c=!l[2]&&l[5]&&Dn(l);return{c(){e=y("input"),n=M(),c&&c.c(),t=ie(),w(e,"type","password"),w(e,"autocomplete","new-password"),w(e,"name","verify"),w(e,"placeholder","Password")},m(i,a){m(i,e,a),Ne(e,l[1]),m(i,n,a),c&&c.m(i,a),m(i,t,a),s=!0,r||(o=[te(e,"blur",l[12]),te(e,"input",l[13])],r=!0)},p(i,a){a&2&&e.value!==i[1]&&Ne(e,i[1]),!i[2]&&i[5]?c?(c.p(i,a),a&36&&k(c,1)):(c=Dn(i),c.c(),k(c,1),c.m(t.parentNode,t)):c&&(re(),S(c,1,1,()=>{c=null}),oe())},i(i){s||(k(c),s=!0)},o(i){S(c),s=!1},d(i){i&&d(e),i&&d(n),c&&c.d(i),i&&d(t),r=!1,rt(o)}}}function Vn(l){let e,n;return{c(){e=y("pre"),n=H(l[3])},m(t,s){m(t,e,s),v(e,n)},p(t,s){s&8&&J(n,t[3])},d(t){t&&d(e)}}}function ho(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,g,b,$,C,j,R,D;t=new ol({props:{dim:96}}),r=new Ml({props:{width:150}}),_=new me({props:{key:"password",name:"New password",$$slots:{default:[po]},$$scope:{ctx:l}}}),h=new me({props:{key:"verify-password",name:"Verify password",$$slots:{default:[mo]},$$scope:{ctx:l}}});function G(O){l[14](O)}let B={};l[6].items!==void 0&&(B.items=l[6].items),b=new Cl({props:B}),de.push(()=>Ce(b,"items",G));let L=l[3]&&Vn(l);return R=new at({props:{confirm:l[7]}}),{c(){e=y("center"),n=y("div"),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),c=y("p"),c.textContent="Create a new password to protect your wallet's data.",i=M(),a=y("div"),f=y("input"),u=M(),T(_.$$.fragment),p=M(),T(h.$$.fragment),g=M(),T(b.$$.fragment),C=M(),L&&L.c(),j=M(),T(R.$$.fragment),w(n,"class","intro svelte-pdf2wg"),w(c,"class","narrow svelte-pdf2wg"),f.hidden=!0,w(f,"type","text"),w(f,"name","username"),w(f,"autocomplete","username"),f.value="StarShell Wallet User",w(a,"class","form flex-rows")},m(O,U){m(O,e,U),v(e,n),A(t,n,null),v(n,s),A(r,n,null),v(e,o),v(e,c),m(O,i,U),m(O,a,U),v(a,f),v(a,u),A(_,a,null),v(a,p),A(h,a,null),m(O,g,U),A(b,O,U),m(O,C,U),L&&L.m(O,U),m(O,j,U),A(R,O,U),D=!0},p(O,U){const E={};U&8388629&&(E.$$scope={dirty:U,ctx:O}),_.$set(E);const q={};U&8388646&&(q.$$scope={dirty:U,ctx:O}),h.$set(q);const z={};!$&&U&64&&($=!0,z.items=O[6].items,Me(()=>$=!1)),b.$set(z),O[3]?L?L.p(O,U):(L=Vn(O),L.c(),L.m(j.parentNode,j)):L&&(L.d(1),L=null);const P={};U&128&&(P.confirm=O[7]),R.$set(P)},i(O){D||(k(t.$$.fragment,O),k(r.$$.fragment,O),k(_.$$.fragment,O),k(h.$$.fragment,O),k(b.$$.fragment,O),k(R.$$.fragment,O),D=!0)},o(O){S(t.$$.fragment,O),S(r.$$.fragment,O),S(_.$$.fragment,O),S(h.$$.fragment,O),S(b.$$.fragment,O),S(R.$$.fragment,O),D=!1},d(O){O&&d(e),I(t),I(r),O&&d(i),O&&d(a),I(_),I(h),O&&d(g),I(b,O),O&&d(C),L&&L.d(O),O&&d(j),I(R,O)}}}function go(l){let e,n;return e=new ve({props:{$$slots:{default:[ho]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&8388863&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function bo(l,e,n){let t,s;const r=he("page"),o=he("completed");let c="",i="",a="",f="",u="",_=0,p=new Sl;function h(U){n(6,p=p.event(U,Date.now()-_))}r.on({restore(){n(0,c=n(1,i=""))}});function g(){if(c&&!Nn(c)){c.length<cr?n(4,f="Password must be at least 5 characters"):c.length>ar?n(4,f="Password must be 1024 characters or fewer"):n(4,f="Password is not acceptable");return}n(4,f="")}function b(){if(c&&!f&&c!==i){n(5,u="Passwords do not match");return}n(5,u="")}const $=(async()=>(await(await fetch("/data/passwords-top-10k.txt")).text()).split(`
`))();async function C(){(await $).includes(c)?r.push({creator:_o,props:{attempt_register:R}}):await R()}let j=!1;async function R(){if(!t||j)return 1;j=!0;const U=()=>(j=!1,1);n(3,a=""),_=Date.now(),h("Estimating time to complete");{const E=window.performance.now();await Ut.deriveRootBits(il,cl,1/50);const z=window.performance.now()-E,P=2*(2*(z*50));h(`About ${(P/1e3).toFixed(1)} seconds`)}try{await fr(c,h)}catch(E){return E instanceof ur?n(3,a="A passphrase is already registered"):E instanceof al?n(3,a="Invalid passphrase"):n(3,a=`Unexpected error occurred while attempting to register:
${E.stack||E.message}`),U()}h("Verifying passphrase");try{await fl(c,!1,h)}catch(E){debugger;return n(3,a=`Failed to verify passphrase immediately after registration:
${E.stack}`),await Ut.eraseBase(),U()}return h("Done"),n(3,a="Success"),o&&o(!0),U()}const D=()=>g();function G(){c=this.value,n(0,c)}const B=()=>b();function L(){i=this.value,n(1,i)}function O(U){l.$$.not_equal(p.items,U)&&(p.items=U,n(6,p))}return l.$$.update=()=>{l.$$.dirty&3&&n(2,t=!!c&&c===i&&Nn(c)),l.$$.dirty&4&&n(7,s=["Continue",C,!t])},[c,i,t,a,f,u,p,s,g,b,D,G,B,L,O]}class Nl extends x{constructor(e){super(),ee(this,e,bo,go,Q,{})}}var Sn=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M19 5v14H5V5h14m0-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 9c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6 10H6v-1.53c0-2.5 3.97-3.58 6-3.58s6 1.08 6 3.58V18zm-9.69-2h7.38c-.69-.56-2.38-1.12-3.69-1.12s-3.01.56-3.69 1.12z"/>
</svg>`,wo=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-analytics-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-analytics-fg" d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"/>
	<path class="s2r-analytics-fg" d="M7 12h2v5H7zm8-5h2v10h-2zm-4 7h2v3h-2zm0-4h2v2h-2z"/>
</svg>`,vo=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M13 5.08A7 7 0 0 1 18.92 11h3.03c-.47-4.72-4.23-8.48-8.95-8.95v3.03zM18.92 13A7 7 0 0 1 13 18.92v3.03c4.72-.47 8.48-4.23 8.95-8.95h-3.03zM11 18.92c-3.39-.49-6-3.4-6-6.92s2.61-6.43 6-6.92V2.05c-5.05.5-9 4.76-9 9.95 0 5.19 3.95 9.45 9 9.95v-3.03z"/>
</svg>`,El=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/>
</svg>`,Tl=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4z"/>
</svg>`;function $o(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function ko(l){let e,n,t;function s(o){l[4](o)}let r={id:"asset-select",pfpMap:l[1],placeholder:"Select asset",items:l[8]};return l[0]!==void 0&&(r.value=l[0]),e=new ul({props:r}),de.push(()=>Ce(e,"value",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};c&2&&(i.pfpMap=o[1]),!n&&c&1&&(n=!0,i.value=o[0],Me(()=>n=!1)),e.$set(i)},i(o){t||(k(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function yo(l){let e;return{c(){e=H("Loading assets...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function So(l){let e,n,t={ctx:l,current:null,token:null,hasCatch:!1,pending:yo,then:ko,catch:$o,value:8,blocks:[,,,]};return Ie(l[2](),t),{c(){e=y("div"),t.block.c(),w(e,"class","asset")},m(s,r){m(s,e,r),t.block.m(e,t.anchor=null),t.mount=()=>e,t.anchor=null,n=!0},p(s,[r]){l=s,Re(t,l,r)},i(s){n||(k(t.block),n=!0)},o(s){for(let r=0;r<3;r+=1){const o=t.blocks[r];S(o)}n=!1},d(s){s&&d(e),t.block.d(),t.token=null,t=null}}}function Co(l,e,n){let t,s;K(l,Rt,f=>n(5,t=f)),K(l,ze,f=>n(6,s=f));let{assetRef:r=""}=e;s?.id;let o={};async function c(){const f=[];n(1,o=await _r(s.coins,{dim:19}));for(const[u,_]of ke(s.coins))f.push({value:Ae.holdingPathFor(t,u),object:_,primary:u,secondary:_.name,pfp:_.pfp});return f}let i={value:r,object:null,primary:"",secondary:"",pfp:""};function a(f){i=f,n(0,i)}return l.$$set=f=>{"assetRef"in f&&n(3,r=f.assetRef)},l.$$.update=()=>{l.$$.dirty&1&&n(3,r=i?.value||"")},[i,o,c,r,a]}class Mo extends x{constructor(e){super(),ee(this,e,Co,So,Q,{assetRef:3})}}var No=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14l-6-6z"/>
</svg>`,Eo=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6-1.41-1.41z"/>
</svg>`;function qn(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h;return{c(){e=y("span"),n=y("span"),t=y("span"),s=H("= "),r=H(l[5]),o=M(),c=y("span"),c.textContent="USD",i=M(),a=y("span"),f=y("span"),u=M(),_=y("span"),w(t,"class","amount svelte-1o74by9"),w(c,"class","fiat svelte-1o74by9"),w(n,"class","equivalent svelte-1o74by9"),w(f,"class","icon increment clickable svelte-1o74by9"),w(_,"class","icon decrement clickable svelte-1o74by9"),w(a,"class","adjust svelte-1o74by9"),w(e,"class","occupy svelte-1o74by9")},m(g,b){m(g,e,b),v(e,n),v(n,t),v(t,s),v(t,r),v(n,o),v(n,c),v(e,i),v(e,a),v(a,f),f.innerHTML=No,v(a,u),v(a,_),_.innerHTML=Eo,p||(h=[te(f,"click",l[16]),te(f,"mousedown",l[17]),te(_,"click",l[18]),te(_,"mousedown",l[19])],p=!0)},p(g,b){b&32&&J(r,g[5])},d(g){g&&d(e),p=!1,rt(h)}}}function Un(l){let e,n;return{c(){e=y("span"),n=H(l[1]),w(e,"class","validation-message")},m(t,s){m(t,e,s),v(e,n)},p(t,s){s&2&&J(n,t[1])},d(t){t&&d(e)}}}function To(l){let e,n,t,s,r,o,c,i,a,f=l[3]&&qn(l),u=l[1]&&Un(l);return{c(){e=y("div"),n=y("input"),o=M(),f&&f.c(),c=M(),u&&u.c(),n.disabled=t=!l[2],w(n,"type","number"),w(n,"min","0"),w(n,"max",s=l[4]+""||"0"),w(n,"step",r="0."+"0".repeat((l[3]?.decimals||1)-1)+"1"),n.required=!0,n.value=l[0],w(n,"class","svelte-1o74by9"),Y(n,"invalid",l[1]),w(e,"class","amount-input svelte-1o74by9")},m(_,p){m(_,e,p),v(e,n),l[15](n),v(e,o),f&&f.m(e,null),v(e,c),u&&u.m(e,null),i||(a=[te(n,"change",l[14]),te(n,"input",l[7]),te(n,"invalid",Ao)],i=!0)},p(_,[p]){p&4&&t!==(t=!_[2])&&(n.disabled=t),p&16&&s!==(s=_[4]+""||"0")&&w(n,"max",s),p&8&&r!==(r="0."+"0".repeat((_[3]?.decimals||1)-1)+"1")&&w(n,"step",r),p&1&&n.value!==_[0]&&(n.value=_[0]),p&2&&Y(n,"invalid",_[1]),_[3]?f?f.p(_,p):(f=qn(_),f.c(),f.m(e,c)):f&&(f.d(1),f=null),_[1]?u?u.p(_,p):(u=Un(_),u.c(),u.m(e,null)):u&&(u.d(1),u=null)},i:N,o:N,d(_){_&&d(e),l[15](null),f&&f.d(),u&&u.d(),i=!1,rt(a)}}}function Xn(l){let e=0;const n=window.setTimeout(()=>{e=window.setInterval(l,90)},1e3);window.addEventListener("mouseup",()=>{clearTimeout(n),clearInterval(e)},{once:!0})}const Ao=l=>l.preventDefault();function Io(l,e,n){let t,s,r;K(l,ze,V=>n(21,t=V)),K(l,Rt,V=>n(22,s=V)),K(l,dt,V=>n(23,r=V));let{value:o=""}=e;const c=new we(0),i=new we(1);let{assetRef:a=""}=e,{bufferMax:f=0}=e,u,_=c,p=c,h="",g="";async function b(){n(5,h="[...]");const V=Ae.parseEntityPath(a);if(V?.type==="holding"){const se=V.coin;n(3,u=t.coins[se]);const Z=r.cachedBalance(s,se);Z&&Z.timestamp>Date.now()-5*Xt&&n(4,_=new we(Z.data.amount).shiftedBy(-u.decimals).minus(new we(f)));const le=await r.bankBalance(s,se);if(a===le.holding){const ue=new we(le.balance.amount).shiftedBy(-u.decimals).minus(new we(f));ue.eq(_)||n(4,_=ue);const ce=t.coins[se];n(13,g=ce?.extra?.coingecko_id||"")}}else V?.type==="token"&&n(3,u=null);u?p=i.shiftedBy(-u.decimals):(p=c,n(4,_=c))}function $(V){n(0,o=V.target.value)}function C(){const V=p.plus(o||0);V.lte(_)?n(0,o=V+""):n(0,o=_+""),B()}function j(){const V=p.negated().plus(o||0);V.gte(0)?V.gt(_)?n(0,o=_+""):n(0,o=V+""):n(0,o="0"),B()}let{error:R=""}=e,D;function G(V){D.setCustomValidity(V),n(1,R=V)}function B(){if(!o)return G("Enter an amount");let V;try{V=new we(o)}catch{return G("Invalid number")}if(V.lt(c))return G("Value must be positive");if(V.gt(_))return G("Insufficient balance");n(1,R="")}let{showValidation:L=0}=e;const O=()=>B();function U(V){de[V?"unshift":"push"](()=>{D=V,n(6,D)})}const E=()=>C(),q=()=>Xn(C),z=()=>j(),P=()=>Xn(j);return l.$$set=V=>{"value"in V&&n(0,o=V.value),"assetRef"in V&&n(2,a=V.assetRef),"bufferMax"in V&&n(11,f=V.bufferMax),"error"in V&&n(1,R=V.error),"showValidation"in V&&n(12,L=V.showValidation)},l.$$.update=()=>{l.$$.dirty&4&&(a?b():n(3,u=null)),l.$$.dirty&8193&&(g?(async()=>{const V=await vn.coinsVersus([g],"usd",1*Xt);g in V?n(5,h=Kt(+o*+V[g],!0)):n(5,h="(?)")})():n(5,h="")),l.$$.dirty&4097&&(L?B():o||n(1,R=""))},[o,R,a,u,_,h,D,$,C,j,B,f,L,g,O,U,E,q,z,P]}class Ro extends x{constructor(e){super(),ee(this,e,Io,To,Q,{value:0,assetRef:2,bufferMax:11,error:1,showValidation:12})}}function Lo(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Oo(l){let e,n,t;function s(o){l[4](o)}let r={id:"sender-select",placeholder:"Select account",secondaryClass:"balance",items:l[1]};return l[0]!==void 0&&(r.value=l[0]),e=new ul({props:r}),de.push(()=>Ce(e,"value",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};!n&&c&1&&(n=!0,i.value=o[0],Me(()=>n=!1)),e.$set(i)},i(o){t||(k(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function jo(l){let e;return{c(){e=H("Loading accounts...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Po(l){let e,n,t={ctx:l,current:null,token:null,hasCatch:!1,pending:jo,then:Oo,catch:Lo,value:1,blocks:[,,,]};return Ie(l[2](),t),{c(){e=y("div"),t.block.c(),w(e,"class","sender")},m(s,r){m(s,e,r),t.block.m(e,t.anchor=null),t.mount=()=>e,t.anchor=null,n=!0},p(s,[r]){l=s,Re(t,l,r)},i(s){n||(k(t.block),n=!0)},o(s){for(let r=0;r<3;r+=1){const o=t.blocks[r];S(o)}n=!1},d(s){s&&d(e),t.block.d(),t.token=null,t=null}}}function Ho(l,e,n){let t;K(l,ht,f=>n(5,t=f));let{accountRef:s=t}=e;const r=(f,u)=>({value:f,primary:u.name,secondary:u.extra?.total_fiat_cache||"(?)"});let o,c;async function i(){const f=await st.read();return n(1,c=$n(f.raw,r)),n(0,o=c.find(u=>s===u.value)),c}function a(f){o=f,n(0,o)}return l.$$set=f=>{"accountRef"in f&&n(3,s=f.accountRef)},l.$$.update=()=>{l.$$.dirty&1&&o&&n(3,s=o.value)},[o,c,i,s,a]}class zo extends x{constructor(e){super(),ee(this,e,Ho,Po,Q,{accountRef:3})}}function Fo(l){let e;return{c(){e=y("span"),e.textContent="Failed to locate contact",w(e,"class","warning")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Bo(l){let e,n,t;return n=new ot({props:{address:l[0]}}),{c(){e=y("span"),T(n.$$.fragment),w(e,"class","manual")},m(s,r){m(s,e,r),A(n,e,null),t=!0},p(s,r){const o={};r&1&&(o.address=s[0]),n.$set(o)},i(s){t||(k(n.$$.fragment,s),t=!0)},o(s){S(n.$$.fragment,s),t=!1},d(s){s&&d(e),I(n)}}}function Do(l){let e,n,t,s,r,o=l[1].name+"",c,i,a,f,u=l[1]&&Kn(l);return a=new ot({props:{address:fe.bech32(l[1].address)}}),{c(){e=y("div"),n=y("span"),u&&u.c(),t=M(),s=y("span"),r=y("span"),c=H(o),i=M(),T(a.$$.fragment),w(n,"class","contact-pfp svelte-1ontxbe"),w(r,"class","name svelte-1ontxbe"),w(s,"class","info svelte-1ontxbe"),w(e,"class","contact svelte-1ontxbe")},m(_,p){m(_,e,p),v(e,n),u&&u.m(n,null),v(e,t),v(e,s),v(s,r),v(r,c),v(s,i),A(a,s,null),f=!0},p(_,p){_[1]?u?(u.p(_,p),p&2&&k(u,1)):(u=Kn(_),u.c(),k(u,1),u.m(n,null)):u&&(re(),S(u,1,1,()=>{u=null}),oe()),(!f||p&2)&&o!==(o=_[1].name+"")&&J(c,o);const h={};p&2&&(h.address=fe.bech32(_[1].address)),a.$set(h)},i(_){f||(k(u),k(a.$$.fragment,_),f=!0)},o(_){S(u),S(a.$$.fragment,_),f=!1},d(_){_&&d(e),u&&u.d(),I(a)}}}function Kn(l){let e,n;return e=new pl({props:{dim:28,resource:l[1],genStyle:"font-size:18px;"}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.resource=t[1]),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Vo(l){let e,n,t,s;const r=[Do,Bo,Fo],o=[];function c(i,a){return i[1]?0:i[0]?1:2}return e=c(l),n=o[e]=r[e](l),{c(){n.c(),t=ie()},m(i,a){o[e].m(i,a),m(i,t,a),s=!0},p(i,[a]){let f=e;e=c(i),e===f?o[e].p(i,a):(re(),S(o[f],1,1,()=>{o[f]=null}),oe(),n=o[e],n?n.p(i,a):(n=o[e]=r[e](i),n.c()),k(n,1),n.m(t.parentNode,t))},i(i){s||(k(n),s=!0)},o(i){S(n),s=!1},d(i){o[e].d(i),i&&d(t)}}}function qo(l,e,n){let t;K(l,Zt,a=>n(3,t=a));let{contact:s=null}=e,r=s,{address:o=""}=e;async function c(){const f=(await xe.read()).contacts(t);if(!r&&o){for(const[,u]of f)if(o===fe.bech32(u.address)){n(1,r=u);break}}}c();const i=_l("agents",c);return Lt(()=>{i()}),l.$$set=a=>{"contact"in a&&n(2,s=a.contact),"address"in a&&n(0,o=a.address)},[o,r,s]}class Al extends x{constructor(e){super(),ee(this,e,qo,Vo,Q,{contact:2,address:0})}}function Uo(l){let e,n,t,s;return n=new Al({props:{contact:l[1].contact,address:l[1].value}}),{c(){e=y("div"),T(n.$$.fragment),w(e,"class",t="item "+l[2]+" svelte-pgx3pp"),Y(e,"display_none",l[0]||!l[1].value)},m(r,o){m(r,e,o),A(n,e,null),s=!0},p(r,[o]){const c={};o&2&&(c.contact=r[1].contact),o&2&&(c.address=r[1].value),n.$set(c),(!s||o&4&&t!==(t="item "+r[2]+" svelte-pgx3pp"))&&w(e,"class",t),o&7&&Y(e,"display_none",r[0]||!r[1].value)},i(r){s||(k(n.$$.fragment,r),s=!0)},o(r){S(n.$$.fragment,r),s=!1},d(r){r&&d(e),I(n)}}}function Xo(l,e,n){let{isActive:t=!1}=e,{isFirst:s=!1}=e,{isHover:r=!1}=e,{isSelectable:o=!1}=e,{getOptionLabel:c=void 0}=e,{item:i}=e,{filterText:a=""}=e,f="";return l.$$set=u=>{"isActive"in u&&n(0,t=u.isActive),"isFirst"in u&&n(3,s=u.isFirst),"isHover"in u&&n(4,r=u.isHover),"isSelectable"in u&&n(5,o=u.isSelectable),"getOptionLabel"in u&&n(6,c=u.getOptionLabel),"item"in u&&n(1,i=u.item),"filterText"in u&&n(7,a=u.filterText)},l.$$.update=()=>{if(l.$$.dirty&57){const u=[];t&&u.push("active"),s&&u.push("first"),r&&u.push("hover"),o||u.push("notSelectable"),n(2,f=u.join(" "))}},[t,i,f,s,r,o,c,a]}class Ko extends x{constructor(e){super(),ee(this,e,Xo,Uo,Q,{isActive:0,isFirst:3,isHover:4,isSelectable:5,getOptionLabel:6,item:1,filterText:7})}}function Wo(l){let e,n,t;return n=new Al({props:{contact:l[0].contact,address:l[0].value}}),{c(){e=y("div"),T(n.$$.fragment),w(e,"class","selection svelte-aitqlq")},m(s,r){m(s,e,r),A(n,e,null),t=!0},p(s,[r]){const o={};r&1&&(o.contact=s[0].contact),r&1&&(o.address=s[0].value),n.$set(o)},i(s){t||(k(n.$$.fragment,s),t=!0)},o(s){S(n.$$.fragment,s),t=!1},d(s){s&&d(e),I(n)}}}function Go(l,e,n){let{getSelectionLabel:t}=e,{item:s}=e;return l.$$set=r=>{"getSelectionLabel"in r&&n(1,t=r.getSelectionLabel),"item"in r&&n(0,s=r.item)},[s,t]}class Yo extends x{constructor(e){super(),ee(this,e,Go,Wo,Q,{getSelectionLabel:1,item:0})}}function Zo(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Jo(l){let e,n,t,s;function r(i){l[14](i)}function o(i){l[15](i)}let c={id:"recipient-select",placeholder:"Address or contact",listOffset:1,isClearable:!!l[0],isCreatable:!!l[3],Item:Ko,Selection:Yo,items:l[8],value:l[4],noOptionsMessage:`Stop typing in the address. 
 Use copy/paste instead!`,containerClasses:l[1]?"invalid":""};return l[2]!==void 0&&(c.filterText=l[2]),l[6]!==void 0&&(c.listOpen=l[6]),e=new pr({props:c}),de.push(()=>Ce(e,"filterText",r)),de.push(()=>Ce(e,"listOpen",o)),e.$on("select",l[10]),e.$on("clear",l[11]),{c(){T(e.$$.fragment)},m(i,a){A(e,i,a),s=!0},p(i,a){const f={};a&1&&(f.isClearable=!!i[0]),a&8&&(f.isCreatable=!!i[3]),a&16&&(f.value=i[4]),a&2&&(f.containerClasses=i[1]?"invalid":""),!n&&a&4&&(n=!0,f.filterText=i[2],Me(()=>n=!1)),!t&&a&64&&(t=!0,f.listOpen=i[6],Me(()=>t=!1)),e.$set(f)},i(i){s||(k(e.$$.fragment,i),s=!0)},o(i){S(e.$$.fragment,i),s=!1},d(i){I(e,i)}}}function Qo(l){let e;return{c(){e=H("Loading contacts...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Wn(l){let e,n;return{c(){e=y("span"),n=H(l[1]),w(e,"class","validation-message")},m(t,s){m(t,e,s),v(e,n)},p(t,s){s&2&&J(n,t[1])},d(t){t&&d(e)}}}function xo(l){let e,n,t,s={ctx:l,current:null,token:null,hasCatch:!1,pending:Qo,then:Jo,catch:Zo,value:8,blocks:[,,,]};Ie(l[9](),s);let r=l[1]&&Wn(l);return{c(){e=y("div"),s.block.c(),n=M(),r&&r.c(),w(e,"class","sender svelte-1rmr362"),Y(e,"hide-cursor",l[5])},m(o,c){m(o,e,c),s.block.m(e,s.anchor=null),s.mount=()=>e,s.anchor=n,v(e,n),r&&r.m(e,null),l[16](e),t=!0},p(o,[c]){l=o,Re(s,l,c),l[1]?r?r.p(l,c):(r=Wn(l),r.c(),r.m(e,null)):r&&(r.d(1),r=null),c&32&&Y(e,"hide-cursor",l[5])},i(o){t||(k(s.block),t=!0)},o(o){for(let c=0;c<3;c+=1){const i=s.blocks[c];S(i)}t=!1},d(o){o&&d(e),s.block.d(),s.token=null,s=null,r&&r.d(),l[16](null)}}}function ei(l,e,n){let t,s;K(l,ze,L=>n(13,t=L)),K(l,Zt,L=>n(17,s=L));let{address:r=""}=e;const o=r;let{error:c=""}=e,i,a,f;const u=L=>({value:fe.bech32(L.address),label:L.name,contact:L});async function _(){const L=await xe.read(),O=[{value:"",label:"",contact:null}];n(8,f=[...L.contacts(s)]);for(const[,U]of f){const E=u(U),q=fe.bech32(U.address);o&&q===o&&n(4,a=E),O.push(E)}return O}function p(L){n(0,r=L.detail.value),n(1,c="")}function h(){n(0,r="")}let g="",b=!1,$=!1;function C(){if(n(3,g=""),!t)n(1,c="No chain set");else if(!fe.isValidAddressFor(t,i,"acc"))console.error("Invalid address"),n(1,c="Invalid address for this chain");else{n(1,c="");for(const[,L]of f)if(i===fe.bech32(L.address)){n(2,i=""),n(4,a=u(L)),n(6,$=!1),n(5,b=!0);return}n(3,g=i),setTimeout(()=>{kn(j,".manual>.address").click(),n(6,$=!1)},0)}}let j,{showValidation:R=0}=e;function D(L){i=L,n(2,i)}function G(L){$=L,n(6,$)}function B(L){de[L?"unshift":"push"](()=>{j=L,n(7,j)})}return l.$$set=L=>{"address"in L&&n(0,r=L.address),"error"in L&&n(1,c=L.error),"showValidation"in L&&n(12,R=L.showValidation)},l.$$.update=()=>{l.$$.dirty&12&&(n(5,b=!1),i?C():(n(5,b=!!g),n(3,g=""))),l.$$.dirty&12293&&(R?r?fe.isValidAddressFor(t,r,"acc")?n(1,c=""):n(1,c="Invalid address for this chain"):i?C():n(1,c="Enter a recipient"):r||n(1,c=""))},[r,c,i,g,a,b,$,j,f,_,p,h,R,t,D,G,B]}class ti extends x{constructor(e){super(),ee(this,e,ei,xo,Q,{address:0,error:1,showValidation:12})}}function ni(l){let e,n=(l[1]?.name||"[...]")+"",t,s,r,o=(l[1]?.extra?.total_fiat_cache||"(?)")+"",c;return{c(){e=y("div"),t=H(n),s=M(),r=y("div"),c=H(o),w(e,"class","title"),w(r,"class","subtitle svelte-m8l3qm")},m(i,a){m(i,e,a),v(e,t),m(i,s,a),m(i,r,a),v(r,c)},p(i,a){a&2&&n!==(n=(i[1]?.name||"[...]")+"")&&J(t,n),a&2&&o!==(o=(i[1]?.extra?.total_fiat_cache||"(?)")+"")&&J(c,o)},d(i){i&&d(e),i&&d(s),i&&d(r)}}}function si(l){let e,n=(l[3]||"[...]")+"",t,s,r,o,c;return o=new ot({props:{address:l[10]}}),{c(){e=y("div"),t=H(n),s=M(),r=y("div"),T(o.$$.fragment),w(e,"class","title"),w(r,"class","subtitle svelte-m8l3qm")},m(i,a){m(i,e,a),v(e,t),m(i,s,a),m(i,r,a),A(o,r,null),c=!0},p(i,a){(!c||a&8)&&n!==(n=(i[3]||"[...]")+"")&&J(t,n)},i(i){c||(k(o.$$.fragment,i),c=!0)},o(i){S(o.$$.fragment,i),c=!1},d(i){i&&d(e),i&&d(s),i&&d(r),I(o)}}}function li(l){let e;return{c(){e=H("=[...]")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function ri(l){let e=Ue(new we(l[9]).times(l[4]).toNumber())+"",n;return{c(){n=H(e)},m(t,s){m(t,n,s)},p(t,s){s&16&&e!==(e=Ue(new we(t[9]).times(t[4]).toNumber())+"")&&J(n,e)},d(t){t&&d(n)}}}function oi(l){let e,n,t;function s(c,i){return c[4]?ri:li}let r=s(l),o=r(l);return{c(){e=y("div"),e.textContent=`${l[9]}  ${l[8]}`,n=M(),t=y("div"),o.c(),w(e,"class","title"),w(t,"class","subtitle svelte-m8l3qm")},m(c,i){m(c,e,i),m(c,n,i),m(c,t,i),o.m(t,null)},p(c,i){r===(r=s(c))&&o?o.p(c,i):(o.d(1),o=r(c),o&&(o.c(),o.m(t,null)))},d(c){c&&d(e),c&&d(n),c&&d(t),o.d()}}}function ii(l){let e;return{c(){e=H("=[...]")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function ci(l){let e=Ue(new we(l[11]).times(l[4]).toNumber())+"",n;return{c(){n=H(e)},m(t,s){m(t,n,s)},p(t,s){s&16&&e!==(e=Ue(new we(t[11]).times(t[4]).toNumber())+"")&&J(n,e)},d(t){t&&d(n)}}}function ai(l){let e,n,t;function s(c,i){return c[4]?ci:ii}let r=s(l),o=r(l);return{c(){e=y("div"),e.textContent=`${l[11]}  ${l[8]}`,n=M(),t=y("div"),o.c(),w(e,"class","title"),w(t,"class","subtitle svelte-m8l3qm")},m(c,i){m(c,e,i),m(c,n,i),m(c,t,i),o.m(t,null)},p(c,i){r===(r=s(c))&&o?o.p(c,i):(o.d(1),o=r(c),o&&(o.c(),o.m(t,null)))},d(c){c&&d(e),c&&d(n),c&&d(t),o.d()}}}function fi(l){let e;return{c(){e=H("=[...]")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function ui(l){let e=Ue(new we(l[5]).times(l[4]).toNumber())+"",n;return{c(){n=H(e)},m(t,s){m(t,n,s)},p(t,s){s&48&&e!==(e=Ue(new we(t[5]).times(t[4]).toNumber())+"")&&J(n,e)},d(t){t&&d(n)}}}function _i(l){let e,n=(l[5]||"[...]")+"",t,s,r,o,c;function i(u,_){return u[4]?ui:fi}let a=i(l),f=a(l);return{c(){e=y("div"),t=H(n),s=M(),r=H(l[8]),o=M(),c=y("div"),f.c(),w(e,"class","title"),w(c,"class","subtitle svelte-m8l3qm")},m(u,_){m(u,e,_),v(e,t),v(e,s),v(e,r),m(u,o,_),m(u,c,_),f.m(c,null)},p(u,_){_&32&&n!==(n=(u[5]||"[...]")+"")&&J(t,n),a===(a=i(u))&&f?f.p(u,_):(f.d(1),f=a(u),f&&(f.c(),f.m(c,null)))},d(u){u&&d(e),u&&d(o),u&&d(c),f.d()}}}function pi(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,g,b,$,C,j,R,D,G,B,L,O,U;return e=new Ee({props:{pops:!0,exits:!0,title:"Sending",symbol:l[8],subtitle:l[6].name}}),e.$on("close",l[19]),t=new me({props:{short:!0,key:"sender",name:"From",$$slots:{default:[ni]},$$scope:{ctx:l}}}),c=new me({props:{short:!0,key:"recipient",name:"To",$$slots:{default:[si]},$$scope:{ctx:l}}}),u=new me({props:{short:!0,key:"amount",name:"Amount",$$slots:{default:[oi]},$$scope:{ctx:l}}}),g=new me({props:{short:!0,key:"fee-review",name:"Fee",$$slots:{default:[ai]},$$scope:{ctx:l}}}),j=new me({props:{short:!0,key:"total",name:"Total",$$slots:{default:[_i]},$$scope:{ctx:l}}}),B=new wr({props:{memoPlaintext:l[0],memoCiphertext:l[2]}}),O=new at({props:{back:!0,confirm:["Approve",l[20]]}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),r=y("hr"),o=M(),T(c.$$.fragment),i=M(),a=y("hr"),f=M(),T(u.$$.fragment),_=M(),p=y("hr"),h=M(),T(g.$$.fragment),b=M(),$=y("hr"),C=M(),T(j.$$.fragment),R=M(),D=y("hr"),G=M(),T(B.$$.fragment),L=M(),T(O.$$.fragment)},m(E,q){A(e,E,q),m(E,n,q),A(t,E,q),m(E,s,q),m(E,r,q),m(E,o,q),A(c,E,q),m(E,i,q),m(E,a,q),m(E,f,q),A(u,E,q),m(E,_,q),m(E,p,q),m(E,h,q),A(g,E,q),m(E,b,q),m(E,$,q),m(E,C,q),A(j,E,q),m(E,R,q),m(E,D,q),m(E,G,q),A(B,E,q),m(E,L,q),A(O,E,q),U=!0},p(E,q){const z={};q&64&&(z.subtitle=E[6].name),e.$set(z);const P={};q&1073741826&&(P.$$scope={dirty:q,ctx:E}),t.$set(P);const V={};q&1073741832&&(V.$$scope={dirty:q,ctx:E}),c.$set(V);const se={};q&1073741840&&(se.$$scope={dirty:q,ctx:E}),u.$set(se);const Z={};q&1073741840&&(Z.$$scope={dirty:q,ctx:E}),g.$set(Z);const le={};q&1073741872&&(le.$$scope={dirty:q,ctx:E}),j.$set(le);const ue={};q&1&&(ue.memoPlaintext=E[0]),q&4&&(ue.memoCiphertext=E[2]),B.$set(ue)},i(E){U||(k(e.$$.fragment,E),k(t.$$.fragment,E),k(c.$$.fragment,E),k(u.$$.fragment,E),k(g.$$.fragment,E),k(j.$$.fragment,E),k(B.$$.fragment,E),k(O.$$.fragment,E),U=!0)},o(E){S(e.$$.fragment,E),S(t.$$.fragment,E),S(c.$$.fragment,E),S(u.$$.fragment,E),S(g.$$.fragment,E),S(j.$$.fragment,E),S(B.$$.fragment,E),S(O.$$.fragment,E),U=!1},d(E){I(e,E),E&&d(n),I(t,E),E&&d(s),E&&d(r),E&&d(o),I(c,E),E&&d(i),E&&d(a),E&&d(f),I(u,E),E&&d(_),E&&d(p),E&&d(h),I(g,E),E&&d(b),E&&d($),E&&d(C),I(j,E),E&&d(R),E&&d(D),E&&d(G),I(B,E),E&&d(L),I(O,E)}}}function mi(l){let e,n;return e=new ve({props:{debug:"SendNative",slides:!0,$$slots:{default:[pi]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&1073741951&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}const Gn=20000n,di=.25;function hi(l,e,n){let t,s,r,o,c;K(l,kt,Z=>n(24,s=Z)),K(l,an,Z=>n(25,r=Z)),K(l,dt,Z=>n(26,o=Z)),K(l,ze,Z=>n(6,c=Z));const i=he("page"),a=browser.runtime;let{coin:f}=e;const u=f,_=c.coins[u];let{accountRef:p}=e,h,g,{amount:b}=e;const $=b;let{recipient:C}=e;const j=C;let{encryptMemo:R=!1}=e;const D=R;let G="",B="",L="",O,{fee:U}=e;const E=U;let{memoPlaintext:q}=e,z=0;(async Z=>{const le=_.extra?.coingecko_id||"";if(le){const ue=await vn.coinsVersus([le],"usd",0);n(4,z=ue[le])}})(),(async()=>{const Z=await st.read();n(1,h=Z.at(p)),g=fe.addressFor(h.pubkey);const le=xe.pathForContact(j);if(O=await xe.getContact(le),n(3,L=O?.name||""),D){const ue=mr(q);if(ue.byteLength>fn)throw mt({title:"Invalid Memo",text:"Your memo text exceeds the character limitation for private memos"});const ce=new Uint8Array(fn);ce.set(ue,0);let ae;try{({pubkey:ae}=await o.e2eInfoFor(j))}catch(pe){throw mt({title:"Recipient Account Unpublished",error:pe})}let _e;try{({sequence:_e}=await o.e2eInfoFor(g))}catch(pe){throw mt({title:"Invalid Account for Private Memos",error:pe})}const F=await dr(`${BigInt(_e)+1n}`,`${Gn}`),X=await o.ecdhEncrypt(ae,ce,F);G=n(2,B=hr(X));{if(!B.startsWith("\u{1F512}1"))throw new Error("Failed to verify encrypted memo prefix");const pe=gr(B.slice(3)),Fe=await o.ecdhDecrypt(ae,pe,F),Te=br(Fe).replace(/\0+$/,"");if(Te!==q)throw new Error(`Simulated decrypted memo did not match original: ${Te}`)}}})();async function P(){const Z=BigInt(new we($).shiftedBy(_.decimals).toString()),le=setTimeout(()=>{mt({title:"Service worker is inactive",text:"Your browser is preventing StarShell from waking the background thread."})},2e3);await a.sendMessage({type:"wake"}),a.sendMessage({type:"bankSend",value:{network:r,sender:g,recipient:j,coin:u,amount:`${Z}`,limit:`${Gn}`,price:di,memo:G}}).then(()=>{clearTimeout(le),i.reset(),s.activateThread(Qe.HISTORY)})}const V=()=>i.reset(),se=()=>P();return l.$$set=Z=>{"coin"in Z&&n(13,f=Z.coin),"accountRef"in Z&&n(14,p=Z.accountRef),"amount"in Z&&n(15,b=Z.amount),"recipient"in Z&&n(16,C=Z.recipient),"encryptMemo"in Z&&n(17,R=Z.encryptMemo),"fee"in Z&&n(18,U=Z.fee),"memoPlaintext"in Z&&n(0,q=Z.memoPlaintext)},l.$$.update=()=>{l.$$.dirty&262144&&n(5,t=new we($).plus(U).toString())},[q,h,B,L,z,t,c,i,u,$,j,E,P,f,p,b,C,R,U,V,se]}class gi extends x{constructor(e){super(),ee(this,e,hi,mi,Q,{coin:13,accountRef:14,amount:15,recipient:16,encryptMemo:17,fee:18,memoPlaintext:0})}}var bi=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>
</svg>`;function Yn(l){let e,n,t,s,r,o,c,i,a,f,u,_,p=l[0]&&Zn(l),h=l[2]&&Jn(l);const g=l[9].default,b=Jt(g,l,l[8],null);let $=l[3]&&Qn(l);return{c(){e=y("div"),n=y("div"),p&&p.c(),t=M(),s=y("span"),r=H(l[1]),o=M(),h&&h.c(),c=M(),i=y("div"),b&&b.c(),a=M(),f=y("div"),$&&$.c(),w(s,"class","title svelte-19fzls0"),w(n,"class","header svelte-19fzls0"),w(i,"class","body svelte-19fzls0"),w(f,"class","actions svelte-19fzls0"),w(e,"class","notice svelte-19fzls0"),w(e,"style",l[4])},m(C,j){m(C,e,j),v(e,n),p&&p.m(n,null),v(n,t),v(n,s),v(s,r),v(n,o),h&&h.m(n,null),v(e,c),v(e,i),b&&b.m(i,null),v(e,a),v(e,f),$&&$.m(f,null),_=!0},p(C,j){C[0]?p?p.p(C,j):(p=Zn(C),p.c(),p.m(n,t)):p&&(p.d(1),p=null),(!_||j&2)&&J(r,C[1]),C[2]?h?(h.p(C,j),j&4&&k(h,1)):(h=Jn(C),h.c(),k(h,1),h.m(n,null)):h&&(re(),S(h,1,1,()=>{h=null}),oe()),b&&b.p&&(!_||j&256)&&Qt(b,g,C,C[8],_?en(g,C[8],j,null):xt(C[8]),null),C[3]?$?$.p(C,j):($=Qn(C),$.c(),$.m(f,null)):$&&($.d(1),$=null),(!_||j&16)&&w(e,"style",C[4])},i(C){_||(k(h),k(b,C),Ge(()=>{u||(u=qe(e,ge,{},!0)),u.run(1)}),_=!0)},o(C){S(h),S(b,C),u||(u=qe(e,ge,{},!1)),u.run(0),_=!1},d(C){C&&d(e),p&&p.d(),h&&h.d(),b&&b.d(C),$&&$.d(),C&&u&&u.end()}}}function Zn(l){let e,n=l[6][l[0]].svg+"",t;return{c(){e=y("span"),w(e,"class","global_svg-icon"),w(e,"style",t=`color:${l[6][l[0]].color};`)},m(s,r){m(s,e,r),e.innerHTML=n},p(s,r){r&1&&n!==(n=s[6][s[0]].svg+"")&&(e.innerHTML=n),r&1&&t!==(t=`color:${s[6][s[0]].color};`)&&w(e,"style",t)},d(s){s&&d(e)}}}function Jn(l){let e,n,t;return n=new vr({props:{bgColor:"var(--theme-color-black)"}}),n.$on("click",l[7]),{c(){e=y("span"),T(n.$$.fragment),w(e,"class","exit svelte-19fzls0")},m(s,r){m(s,e,r),A(n,e,null),t=!0},p:N,i(s){t||(k(n.$$.fragment,s),t=!0)},o(s){S(n.$$.fragment,s),t=!1},d(s){s&&d(e),I(n)}}}function Qn(l){let e,n=l[3][0]+"",t,s,r;return{c(){e=y("button"),t=H(n),w(e,"class","pill")},m(o,c){m(o,e,c),v(e,t),s||(r=te(e,"click",l[10]),s=!0)},p(o,c){c&8&&n!==(n=o[3][0]+"")&&J(t,n)},d(o){o&&d(e),s=!1,r()}}}function wi(l){let e,n,t=l[5]&&Yn(l);return{c(){t&&t.c(),e=ie()},m(s,r){t&&t.m(s,r),m(s,e,r),n=!0},p(s,[r]){s[5]?t?(t.p(s,r),r&32&&k(t,1)):(t=Yn(s),t.c(),k(t,1),t.m(e.parentNode,e)):t&&(re(),S(t,1,1,()=>{t=null}),oe())},i(s){n||(k(t),n=!0)},o(s){S(t),n=!1},d(s){t&&t.d(s),s&&d(e)}}}function vi(l,e,n){let{$$slots:t={},$$scope:s}=e;const r=ml(),o={error:{svg:bi,color:"var(--theme-color-orange);"}};let{icon:c=""}=e,{title:i}=e,{dismissable:a=!1}=e;const f=typeof a=="string"?a:"",u=f?`notice_${f}`:"";let{action:_=null}=e,{rootStyle:p=""}=e,h=!u;(async function(){u&&await vt.get(u)!==!0&&n(5,h=!0)})();async function g(){r("dismiss"),n(5,h=!1),u&&await vt.set(u,!0)}const b=()=>_?.[1]();return l.$$set=$=>{"icon"in $&&n(0,c=$.icon),"title"in $&&n(1,i=$.title),"dismissable"in $&&n(2,a=$.dismissable),"action"in $&&n(3,_=$.action),"rootStyle"in $&&n(4,p=$.rootStyle),"$$scope"in $&&n(8,s=$.$$scope)},[c,i,a,_,p,h,o,g,s,t,b]}class Il extends x{constructor(e){super(),ee(this,e,vi,wi,Q,{icon:0,title:1,dismissable:2,action:3,rootStyle:4})}}function xn(l,e,n){const t=l.slice();return t[1]=e[n],t[3]=n,t}function es(l){let e,n;return e=new it({props:{name:"Loading..."}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function $i(l){let e,n,t=Array(l[0]),s=[];for(let o=0;o<t.length;o+=1)s[o]=es(xn(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){e=y("div");for(let o=0;o<s.length;o+=1)s[o].c();w(e,"class","rows")},m(o,c){m(o,e,c);for(let i=0;i<s.length;i+=1)s[i].m(e,null);n=!0},p(o,[c]){if(c&1){t=Array(o[0]);let i;for(i=0;i<t.length;i+=1){const a=xn(o,t,i);s[i]?(s[i].p(a,c),k(s[i],1)):(s[i]=es(),s[i].c(),k(s[i],1),s[i].m(e,null))}for(re(),i=t.length;i<s.length;i+=1)r(i);oe()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)k(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){o&&d(e),Se(s,o)}}}function ki(l,e,n){let{count:t=1}=e;return l.$$set=s=>{"count"in s&&n(0,t=s.count)},[t]}class yi extends x{constructor(e){super(),ee(this,e,ki,$i,Q,{count:0})}}const Si=l=>({label:l&2,button:l&1}),ts=l=>({label:l[1],button:l[0]});function Ci(l){let e;const n=l[6].default,t=Jt(n,l,l[5],ts);return{c(){t&&t.c()},m(s,r){t&&t.m(s,r),e=!0},p(s,[r]){t&&t.p&&(!e||r&35)&&Qt(t,n,s,s[5],e?en(n,s[5],r,Si):xt(s[5]),ts)},i(s){e||(k(t,s),e=!0)},o(s){S(t,s),e=!1},d(s){t&&t.d(s)}}}function Mi(l,e,n){let t,s;const r=["id","toggled","disabled"];let o=Wt(e,r),{$$slots:c={},$$scope:i}=e,{id:a="toggle"+Math.random().toString(36)}=e,{toggled:f=!0}=e,{disabled:u=!1}=e;return l.$$set=_=>{e=gt(gt({},e),dl(_)),n(7,o=Wt(e,r)),"id"in _&&n(2,a=_.id),"toggled"in _&&n(3,f=_.toggled),"disabled"in _&&n(4,u=_.disabled),"$$scope"in _&&n(5,i=_.$$scope)},l.$$.update=()=>{l.$$.dirty&4&&n(1,t={for:a}),n(0,s={...o,id:a,disabled:u,"aria-checked":f,type:"button",role:"switch"})},[s,t,a,f,u,i,c]}class Ni extends x{constructor(e){super(),ee(this,e,Mi,Ci,Q,{id:2,toggled:3,disabled:4})}}const Ei=l=>({toggled:l&1}),ns=l=>({toggled:l[0]});function ss(l){let e,n=(l[0]?l[5]:l[6])+"",t;return{c(){e=y("span"),t=H(n),w(e,"class","svelte-n6hnvc")},m(s,r){m(s,e,r),v(e,t)},p(s,r){r&97&&n!==(n=(s[0]?s[5]:s[6])+"")&&J(t,n)},d(s){s&&d(e)}}}function Ti(l){let e,n=l[5]&&l[6]&&ss(l);return{c(){n&&n.c(),e=ie()},m(t,s){n&&n.m(t,s),m(t,e,s)},p(t,s){t[5]&&t[6]?n?n.p(t,s):(n=ss(t),n.c(),n.m(e.parentNode,e)):n&&(n.d(1),n=null)},d(t){n&&n.d(t),t&&d(e)}}}function Ai(l){let e,n,t,s,r,o,c,i,a,f,u=[l[20]],_={};for(let C=0;C<u.length;C+=1)_=gt(_,u[C]);let p=[l[11],l[21],{style:o="font-size:"+l[10]+"px; color: "+l[7]+"; background-color: "+(l[0]?l[8]:l[9])+"; "+l[11].style},{disabled:l[4]}],h={};for(let C=0;C<p.length;C+=1)h=gt(h,p[C]);const g=l[12].default,b=Jt(g,l,l[18],ns),$=b||Ti(l);return{c(){e=y("label"),n=H(l[1]),t=M(),s=y("div"),r=y("button"),c=M(),$&&$.c(),Bt(e,_),Y(e,"hideLabel",l[2]),Y(e,"svelte-n6hnvc",!0),Bt(r,h),Y(r,"small",l[3]),Y(r,"svelte-n6hnvc",!0),w(s,"class","svelte-n6hnvc")},m(C,j){m(C,e,j),v(e,n),m(C,t,j),m(C,s,j),v(s,r),r.autofocus&&r.focus(),v(s,c),$&&$.m(s,null),i=!0,a||(f=[te(r,"click",l[13]),te(r,"click",l[16]),te(r,"focus",l[14]),te(r,"blur",l[15])],a=!0)},p(C,j){(!i||j&2)&&J(n,C[1]),Bt(e,_=un(u,[j&1048576&&C[20]])),Y(e,"hideLabel",C[2]),Y(e,"svelte-n6hnvc",!0),Bt(r,h=un(p,[j&2048&&C[11],j&2097152&&C[21],(!i||j&3969&&o!==(o="font-size:"+C[10]+"px; color: "+C[7]+"; background-color: "+(C[0]?C[8]:C[9])+"; "+C[11].style))&&{style:o},(!i||j&16)&&{disabled:C[4]}])),Y(r,"small",C[3]),Y(r,"svelte-n6hnvc",!0),b?b.p&&(!i||j&262145)&&Qt(b,g,C,C[18],i?en(g,C[18],j,Ei):xt(C[18]),ns):$&&$.p&&(!i||j&97)&&$.p(C,i?j:-1)},i(C){i||(k($,C),i=!0)},o(C){S($,C),i=!1},d(C){C&&d(e),C&&d(t),C&&d(s),$&&$.d(C),a=!1,rt(f)}}}function Ii(l){let e,n,t;function s(o){l[17](o)}let r={$$slots:{default:[Ai,({label:o,button:c})=>({20:o,21:c}),({label:o,button:c})=>(o?1048576:0)|(c?2097152:0)]},$$scope:{ctx:l}};return l[0]!==void 0&&(r.toggled=l[0]),e=new Ni({props:r}),de.push(()=>Ce(e,"toggled",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,[c]){const i={};c&3411967&&(i.$$scope={dirty:c,ctx:o}),!n&&c&1&&(n=!0,i.toggled=o[0],Me(()=>n=!1)),e.$set(i)},i(o){t||(k(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function Ri(l,e,n){const t=["toggled","label","hideLabel","small","disabled","on","off","switchColor","toggledColor","untoggledColor","size"];let s=Wt(e,t),{$$slots:r={},$$scope:o}=e,{toggled:c=!0}=e,{label:i=""}=e,{hideLabel:a=!1}=e,{small:f=!1}=e,{disabled:u=!1}=e,{on:_=void 0}=e,{off:p=void 0}=e,{switchColor:h="var(--theme-color-black, #fff)"}=e,{toggledColor:g="var(--theme-color-primary, #0f62fe)"}=e,{untoggledColor:b="var(--theme-color-graymed, #8d8d8d)"}=e,{size:$=20}=e;const C=ml();function j(L){nn.call(this,l,L)}function R(L){nn.call(this,l,L)}function D(L){nn.call(this,l,L)}const G=()=>n(0,c=!c);function B(L){c=L,n(0,c)}return l.$$set=L=>{e=gt(gt({},e),dl(L)),n(11,s=Wt(e,t)),"toggled"in L&&n(0,c=L.toggled),"label"in L&&n(1,i=L.label),"hideLabel"in L&&n(2,a=L.hideLabel),"small"in L&&n(3,f=L.small),"disabled"in L&&n(4,u=L.disabled),"on"in L&&n(5,_=L.on),"off"in L&&n(6,p=L.off),"switchColor"in L&&n(7,h=L.switchColor),"toggledColor"in L&&n(8,g=L.toggledColor),"untoggledColor"in L&&n(9,b=L.untoggledColor),"size"in L&&n(10,$=L.size),"$$scope"in L&&n(18,o=L.$$scope)},l.$$.update=()=>{l.$$.dirty&1&&C("toggle",c)},[c,i,a,f,u,_,p,h,g,b,$,s,r,j,R,D,G,B,o]}class Li extends x{constructor(e){super(),ee(this,e,Ri,Ii,Q,{toggled:0,label:1,hideLabel:2,small:3,disabled:4,on:5,off:6,switchColor:7,toggledColor:8,untoggledColor:9,size:10})}}function ls(l,e,n){const t=l.slice();return t[10]=e[n][0],t[11]=e[n][1],t}function Oi(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function ji(l){let e,n,t=l[9].entries(),s=[];for(let o=0;o<t.length;o+=1)s[o]=rs(ls(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=ie()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c&35){t=o[9].entries();let i;for(i=0;i<t.length;i+=1){const a=ls(o,t,i);s[i]?(s[i].p(a,c),k(s[i],1)):(s[i]=rs(a),s[i].c(),k(s[i],1),s[i].m(e.parentNode,e))}for(re(),i=t.length;i<s.length;i+=1)r(i);oe()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)k(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Se(s,o),o&&d(e)}}}function Pi(l){let e,n,t;function s(...r){return l[6](l[10],l[11],...r)}return e=new Li({props:{size:20,on:"On",off:"Off",disabled:l[0],toggled:l[1][l[10]]?.enabled&&l[1][l[10]]?.published}}),e.$on("toggle",s),{c(){T(e.$$.fragment),n=M()},m(r,o){A(e,r,o),m(r,n,o),t=!0},p(r,o){l=r;const c={};o&1&&(c.disabled=l[0]),o&2&&(c.toggled=l[1][l[10]]?.enabled&&l[1][l[10]]?.published),e.$set(c)},i(r){t||(k(e.$$.fragment,r),t=!0)},o(r){S(e.$$.fragment,r),t=!1},d(r){I(e,r),r&&d(n)}}}function rs(l){let e,n;return e=new it({props:{resource:l[11],resourcePath:l[10],$$slots:{right:[Pi]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&16387&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Hi(l){let e,n;return e=new yi({props:{count:5}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function zi(l){let e,n;return e=new at({props:{confirm:["Done",l[7],l[0]]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&1&&(r.confirm=["Done",t[7],t[0]]),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Fi(l){let e,n,t,s,r=l[2].name+"",o,c,i,a,f,u;e=new Ee({props:{plain:!0,pops:!0,account:!0,title:"Settings",subtitle:"Memos"}});let _={ctx:l,current:null,token:null,hasCatch:!1,pending:Hi,then:ji,catch:Oi,value:9,blocks:[,,,]};Ie(fe.read(),_);let p=l[4]&&zi(l);return{c(){T(e.$$.fragment),n=M(),t=y("h3"),s=H("Private Memos for "),o=H(r),c=M(),i=y("div"),_.block.c(),a=M(),p&&p.c(),f=ie(),w(i,"class","rows no-margin")},m(h,g){A(e,h,g),m(h,n,g),m(h,t,g),v(t,s),v(t,o),m(h,c,g),m(h,i,g),_.block.m(i,_.anchor=null),_.mount=()=>i,_.anchor=null,m(h,a,g),p&&p.m(h,g),m(h,f,g),u=!0},p(h,g){l=h,(!u||g&4)&&r!==(r=l[2].name+"")&&J(o,r),Re(_,l,g),l[4]&&p.p(l,g)},i(h){u||(k(e.$$.fragment,h),k(_.block),k(p),u=!0)},o(h){S(e.$$.fragment,h);for(let g=0;g<3;g+=1){const b=_.blocks[g];S(b)}S(p),u=!1},d(h){I(e,h),h&&d(n),h&&d(t),h&&d(c),h&&d(i),_.block.d(),_.token=null,_=null,h&&d(a),p&&p.d(h),h&&d(f)}}}function Bi(l){let e,n;return e=new ve({props:{debug:"SettingsMemos",$$slots:{default:[Fi]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&16391&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Di(l,e,n){let t,s;K(l,Rt,_=>n(8,t=_)),K(l,Mt,_=>n(2,s=_));const r=he("page"),o=he("intent")||null;let c=!1,i={};(async function(){n(1,i=await vt.get("e2e_encrypted_memos")||{})})();async function a(_,p,h){if(c)return;n(0,c=!0),n(1,i=await vt.get("e2e_encrypted_memos")||{}),i[_]||n(1,i[_]={enabled:!1,published:!1},i);const g=i[_];if(g.enabled=h,h)try{const b=await Nt.read();let $;for(const[C,j]of b.entries()){const R=j.chain;if(_===R){$=Nt.activate(j,p);break}}if(!$)throw new Error(`No network provider found for ${_}`);await $.e2eInfoFor(t),g.published=!0}catch(b){g.enabled=g.published=!1,b instanceof $r?mt({title:"Account Unpublished",text:`In order to enable private memos on ${p.name}, you must first send at least one transaction.`}):mt({title:b.constructor.name,error:b})}await vt.set("e2e_encrypted_memos",i),n(1,i),queueMicrotask(()=>{n(0,c=!1)})}return[c,i,s,r,o,a,(_,p,h)=>a(_,p,h.detail),()=>r.pop()]}class Vi extends x{constructor(e){super(),ee(this,e,Di,Bi,Q,{})}}function qi(l){let e,n,t;function s(o){l[45](o)}let r={};return l[13]!==void 0&&(r.accountRef=l[13]),e=new zo({props:r}),de.push(()=>Ce(e,"accountRef",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};!n&&c[0]&8192&&(n=!0,i.accountRef=o[13],Me(()=>n=!1)),e.$set(i)},i(o){t||(k(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function Ui(l){let e,n,t,s;function r(i){l[46](i)}function o(i){l[47](i)}let c={showValidation:l[4]};return l[6]!==void 0&&(c.error=l[6]),l[0]!==void 0&&(c.address=l[0]),e=new ti({props:c}),de.push(()=>Ce(e,"error",r)),de.push(()=>Ce(e,"address",o)),{c(){T(e.$$.fragment)},m(i,a){A(e,i,a),s=!0},p(i,a){const f={};a[0]&16&&(f.showValidation=i[4]),!n&&a[0]&64&&(n=!0,f.error=i[6],Me(()=>n=!1)),!t&&a[0]&1&&(t=!0,f.address=i[0],Me(()=>t=!1)),e.$set(f)},i(i){s||(k(e.$$.fragment,i),s=!0)},o(i){S(e.$$.fragment,i),s=!1},d(i){I(e,i)}}}function os(l){let e,n,t,s;function r(c){l[48](c)}let o={id:"save-contact",$$slots:{default:[Xi]},$$scope:{ctx:l}};return l[5]!==void 0&&(o.checked=l[5]),n=new hl({props:o}),de.push(()=>Ce(n,"checked",r)),{c(){e=y("div"),T(n.$$.fragment),w(e,"class","new-address svelte-1bqjv2w")},m(c,i){m(c,e,i),A(n,e,null),s=!0},p(c,i){const a={};i[2]&2048&&(a.$$scope={dirty:i,ctx:c}),!t&&i[0]&32&&(t=!0,a.checked=c[5],Me(()=>t=!1)),n.$set(a)},i(c){s||(k(n.$$.fragment,c),s=!0)},o(c){S(n.$$.fragment,c),s=!1},d(c){c&&d(e),I(n)}}}function Xi(l){let e;return{c(){e=H("Save to contacts")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function Ki(l){let e,n,t=l[21].icon+"",s,r,o=l[21].text+"",c,i,a,f,u,_=l[9]&&os(l);return{c(){e=y("span"),n=y("span"),s=M(),r=y("span"),c=H(o),a=M(),_&&_.c(),f=ie(),w(n,"class","icon svelte-1bqjv2w"),w(r,"class","text svelte-1bqjv2w"),w(e,"class",i="status "+l[3]+" svelte-1bqjv2w")},m(p,h){m(p,e,h),v(e,n),n.innerHTML=t,v(e,s),v(e,r),v(r,c),m(p,a,h),_&&_.m(p,h),m(p,f,h),u=!0},p(p,h){(!u||h[0]&2097152)&&t!==(t=p[21].icon+"")&&(n.innerHTML=t),(!u||h[0]&2097152)&&o!==(o=p[21].text+"")&&J(c,o),(!u||h[0]&8&&i!==(i="status "+p[3]+" svelte-1bqjv2w"))&&w(e,"class",i),p[9]?_?(_.p(p,h),h[0]&512&&k(_,1)):(_=os(p),_.c(),k(_,1),_.m(f.parentNode,f)):_&&(re(),S(_,1,1,()=>{_=null}),oe())},i(p){u||(k(_),u=!0)},o(p){S(_),u=!1},d(p){p&&d(e),p&&d(a),_&&_.d(p),p&&d(f)}}}function is(l){let e,n;return e=new me({props:{short:!0,slides:!0,key:"new-contact-name",name:"Contact Name",$$slots:{default:[Wi]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s[0]&256|s[2]&2048&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function cs(l){let e,n;return{c(){e=y("span"),n=H(l[8]),w(e,"class","validation-message")},m(t,s){m(t,e,s),v(e,n)},p(t,s){s[0]&256&&J(n,t[8])},d(t){t&&d(e)}}}function Wi(l){let e,n,t,s,r,o=l[8]&&cs(l);return{c(){e=y("input"),n=M(),o&&o.c(),t=ie(),w(e,"id","new-contact-name-value"),w(e,"type","text"),Y(e,"invalid",l[8])},m(c,i){m(c,e,i),m(c,n,i),o&&o.m(c,i),m(c,t,i),s||(r=te(e,"input",l[30]),s=!0)},p(c,i){i[0]&256&&Y(e,"invalid",c[8]),c[8]?o?o.p(c,i):(o=cs(c),o.c(),o.m(t.parentNode,t)):o&&(o.d(1),o=null)},d(c){c&&d(e),c&&d(n),o&&o.d(c),c&&d(t),s=!1,r()}}}function Gi(l){let e,n,t;function s(o){l[49](o)}let r={};return l[1]!==void 0&&(r.assetRef=l[1]),e=new Mo({props:r}),de.push(()=>Ce(e,"assetRef",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};!n&&c[0]&2&&(n=!0,i.assetRef=o[1],Me(()=>n=!1)),e.$set(i)},i(o){t||(k(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function Yi(l){let e,n,t,s;function r(i){l[50](i)}function o(i){l[51](i)}let c={bufferMax:l[10]?$t:0,assetRef:l[1],showValidation:l[4]};return l[7]!==void 0&&(c.error=l[7]),l[2]!==void 0&&(c.value=l[2]),e=new Ro({props:c}),de.push(()=>Ce(e,"error",r)),de.push(()=>Ce(e,"value",o)),{c(){T(e.$$.fragment)},m(i,a){A(e,i,a),s=!0},p(i,a){const f={};a[0]&1024&&(f.bufferMax=i[10]?$t:0),a[0]&2&&(f.assetRef=i[1]),a[0]&16&&(f.showValidation=i[4]),!n&&a[0]&128&&(n=!0,f.error=i[7],Me(()=>n=!1)),!t&&a[0]&4&&(t=!0,f.value=i[2],Me(()=>t=!1)),e.$set(f)},i(i){s||(k(e.$$.fragment,i),s=!0)},o(i){S(e.$$.fragment,i),s=!1},d(i){I(e,i)}}}function as(l){let e,n,t,s,r,o,c,i,a,f,u,_;return{c(){e=y("span"),n=y("span"),n.textContent="Balance",t=M(),s=y("span"),r=H(l[11]),o=M(),c=H(l[24]),i=M(),a=y("span"),f=y("span"),f.textContent="USE MAX",w(n,"class","label svelte-1bqjv2w"),w(s,"class","amount svelte-1bqjv2w"),w(e,"class","balance svelte-1bqjv2w"),w(f,"class","link svelte-1bqjv2w"),Y(f,"disabled",l[23]),w(a,"class","use-max")},m(p,h){m(p,e,h),v(e,n),v(e,t),v(e,s),v(s,r),v(s,o),v(s,c),m(p,i,h),m(p,a,h),v(a,f),u||(_=te(f,"click",l[52]),u=!0)},p(p,h){h[0]&2048&&J(r,p[11]),h[0]&16777216&&J(c,p[24]),h[0]&8388608&&Y(f,"disabled",p[23])},d(p){p&&d(e),p&&d(i),p&&d(a),u=!1,_()}}}function Zi(l){let e,n=l[1]&&as(l);return{c(){e=y("span"),n&&n.c(),w(e,"class","balance-line svelte-1bqjv2w")},m(t,s){m(t,e,s),n&&n.m(e,null)},p(t,s){t[1]?n?n.p(t,s):(n=as(t),n.c(),n.m(e,null)):n&&(n.d(1),n=null)},d(t){t&&d(e),n&&n.d()}}}function Ji(l){let e,n,t,s;return{c(){e=y("div"),e.textContent=`${$t} SCRT`,n=M(),t=y("div"),s=H(l[22]),w(e,"class","fee-amount"),w(t,"class","fee-fiat svelte-1bqjv2w")},m(r,o){m(r,e,o),m(r,n,o),m(r,t,o),v(t,s)},p(r,o){o[0]&4194304&&J(s,r[22])},d(r){r&&d(e),r&&d(n),r&&d(t)}}}function Qi(l){let e;return{c(){e=y("div"),w(e,"class","manual-fee svelte-1bqjv2w")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function fs(l){let e,n,t=l[14]&&l[16]&&us(l);return{c(){t&&t.c(),e=ie()},m(s,r){t&&t.m(s,r),m(s,e,r),n=!0},p(s,r){s[14]&&s[16]?t?(t.p(s,r),r[0]&81920&&k(t,1)):(t=us(s),t.c(),k(t,1),t.m(e.parentNode,e)):t&&(re(),S(t,1,1,()=>{t=null}),oe())},i(s){n||(k(t),n=!0)},o(s){S(t),n=!1},d(s){t&&t.d(s),s&&d(e)}}}function us(l){let e,n,t;function s(o){l[53](o)}let r={containerClass:"encrypt",id:"encrypted",$$slots:{default:[xi]},$$scope:{ctx:l}};return l[18]!==void 0&&(r.checked=l[18]),e=new hl({props:r}),de.push(()=>Ce(e,"checked",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};c[2]&2048&&(i.$$scope={dirty:c,ctx:o}),!n&&c[0]&262144&&(n=!0,i.checked=o[18],Me(()=>n=!1)),e.$set(i)},i(o){t||(k(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function xi(l){let e;return{c(){e=H("Private")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function _s(l){let e,n,t,s,r,o,c,i,a,f,u,_=!l[14]&&ps(l);const p=[sc,nc,tc],h=[];function g(b,$){return b[16]?b[18]?2:1:0}return c=g(l),i=h[c]=p[c](l),{c(){_&&_.c(),e=M(),n=y("div"),t=y("textarea"),r=M(),o=y("div"),i.c(),w(n,"class","input svelte-1bqjv2w"),w(o,"class","submemo svelte-1bqjv2w")},m(b,$){_&&_.m(b,$),m(b,e,$),m(b,n,$),v(n,t),Ne(t,l[19]),m(b,r,$),m(b,o,$),h[c].m(o,null),a=!0,f||(u=te(t,"input",l[55]),f=!0)},p(b,$){b[14]?_&&(re(),S(_,1,1,()=>{_=null}),oe()):_?(_.p(b,$),$[0]&16384&&k(_,1)):(_=ps(b),_.c(),k(_,1),_.m(e.parentNode,e)),$[0]&524288&&Ne(t,b[19]);let C=c;c=g(b),c===C?h[c].p(b,$):(re(),S(h[C],1,1,()=>{h[C]=null}),oe(),i=h[c],i?i.p(b,$):(i=h[c]=p[c](b),i.c()),k(i,1),i.m(o,null))},i(b){a||(k(_),Ge(()=>{s||(s=qe(n,ge,{duration:350},!0)),s.run(1)}),k(i),a=!0)},o(b){S(_),s||(s=qe(n,ge,{duration:350},!1)),s.run(0),S(i),a=!1},d(b){_&&_.d(b),b&&d(e),b&&d(n),b&&s&&s.end(),b&&d(r),b&&d(o),h[c].d(),f=!1,u()}}}function ps(l){let e,n;return e=new Il({props:{dismissable:"send_encrypted_memo",title:"Make Your Memos Private",action:["Enable Private Memos",l[31]],$$slots:{default:[ec]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s[2]&2048&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function ec(l){let e,n,t;return{c(){e=H(`StarShell allows you to send end-to-end encrypted memos that can only be seen by you and the recipient.
					`),n=y("br"),t=H(`
					Enable this feature to send and receive encrypted memos. You can always change this later in settings.`),He(n,"display","block"),He(n,"content","''"),He(n,"margin","0.75em")},m(s,r){m(s,e,r),m(s,n,r),m(s,t,r)},p:N,d(s){s&&d(e),s&&d(n),s&&d(t)}}}function tc(l){let e,n=En(l[19]||"").byteLength+"",t,s,r,o,c,i,a,f,u,_,p,h,g,b,$,C,j;return{c(){e=y("span"),t=H(n),s=H(" / "),r=H(fn),i=M(),a=y("span"),f=y("span"),u=M(),_=y("span"),p=H("This memo will be private, using encryption. "),h=y("span"),h.textContent="Memo Settings",w(e,"class","memo-length-indicator svelte-1bqjv2w"),w(f,"class","global_svg-icon display_inline icon-diameter_18px"),He(f,"color","var(--theme-color-sky)"),w(h,"class","link"),w(_,"class","text vertical-align_middle svelte-1bqjv2w"),w(a,"class","disclaimer svelte-1bqjv2w")},m(R,D){m(R,e,D),v(e,t),v(e,s),v(e,r),m(R,i,D),m(R,a,D),v(a,f),f.innerHTML=Tl,v(a,u),v(a,_),v(_,p),v(_,h),$=!0,C||(j=te(h,"click",l[59]),C=!0)},p(R,D){l=R,(!$||D[0]&524288)&&n!==(n=En(l[19]||"").byteLength+"")&&J(t,n)},i(R){$||(Ge(()=>{c&&c.end(1),o=Tt(e,ge,l[25]),o.start()}),Ge(()=>{b&&b.end(1),g=Tt(a,ge,l[25]),g.start()}),$=!0)},o(R){o&&o.invalidate(),c=At(e,ge,l[26]),g&&g.invalidate(),b=At(a,ge,l[26]),$=!1},d(R){R&&d(e),R&&c&&c.end(),R&&d(i),R&&d(a),R&&b&&b.end(),C=!1,j()}}}function nc(l){let e,n,t,s;const r=[rc,lc],o=[];function c(i,a){return!i[19].length&&i[14]&&i[15]?0:1}return e=c(l),n=o[e]=r[e](l),{c(){n.c(),t=ie()},m(i,a){o[e].m(i,a),m(i,t,a),s=!0},p(i,a){let f=e;e=c(i),e===f?o[e].p(i,a):(re(),S(o[f],1,1,()=>{o[f]=null}),oe(),n=o[e],n?n.p(i,a):(n=o[e]=r[e](i),n.c()),k(n,1),n.m(t.parentNode,t))},i(i){s||(k(n),s=!0)},o(i){S(n),s=!1},d(i){o[e].d(i),i&&d(t)}}}function sc(l){let e,n,t,s,r,o,c,i,a,f,u;return{c(){e=y("span"),n=y("span"),t=M(),s=y("span"),r=H("Recipient isn't published, memo will be public. "),o=y("span"),o.textContent="Settings",w(n,"class","global_svg-icon display_inline icon-diameter_18px"),w(o,"class","link"),w(s,"class","text vertical-align_middle svelte-1bqjv2w"),w(e,"class","disclaimer svelte-1bqjv2w")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=El,v(e,t),v(e,s),v(s,r),v(s,o),a=!0,f||(u=te(o,"click",l[56]),f=!0)},p(_,p){l=_},i(_){a||(Ge(()=>{i&&i.end(1),c=Tt(e,ge,l[25]),c.start()}),a=!0)},o(_){c&&c.invalidate(),i=At(e,ge,l[26]),a=!1},d(_){_&&d(e),_&&i&&i.end(),f=!1,u()}}}function lc(l){let e,n,t,s,r,o,c,i,a,f,u;return{c(){e=y("span"),n=y("span"),t=M(),s=y("span"),r=H("This memo will be public. "),o=y("span"),o.textContent="Memo Settings",w(n,"class","global_svg-icon display_inline icon-diameter_18px"),w(o,"class","link"),w(s,"class","text vertical-align_middle svelte-1bqjv2w"),w(e,"class","disclaimer svelte-1bqjv2w")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=El,v(e,t),v(e,s),v(s,r),v(s,o),a=!0,f||(u=te(o,"click",l[58]),f=!0)},p(_,p){l=_},i(_){a||(Ge(()=>{i&&i.end(1),c=Tt(e,ge,l[25]),c.start()}),a=!0)},o(_){c&&c.invalidate(),i=At(e,ge,l[26]),a=!1},d(_){_&&d(e),_&&i&&i.end(),f=!1,u()}}}function rc(l){let e,n,t,s,r,o,c,i,a,f,u;return{c(){e=y("span"),n=y("span"),t=M(),s=y("span"),r=H("Empty memos will still appear encrypted. "),o=y("span"),o.textContent="Memo Settings",w(n,"class","global_svg-icon display_inline icon-diameter_18px"),w(o,"class","link"),w(s,"class","text vertical-align_middle svelte-1bqjv2w"),w(e,"class","disclaimer svelte-1bqjv2w")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=Tl,v(e,t),v(e,s),v(s,r),v(s,o),a=!0,f||(u=te(o,"click",l[57]),f=!0)},p(_,p){l=_},i(_){a||(Ge(()=>{i&&i.end(1),c=Tt(e,ge,l[25]),c.start()}),a=!0)},o(_){c&&c.invalidate(),i=At(e,ge,l[26]),a=!1},d(_){_&&d(e),_&&i&&i.end(),f=!1,u()}}}function oc(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,g,b,$,C,j,R,D,G,B,L,O,U,E,q,z,P,V,se,Z,le,ue;e=new Ee({props:{pops:!0,title:l[27]?"Transferring":"Sending",symbol:l[27]?l[27].symbol:"",subtitle:l[12]?.name||"?"}}),t=new me({props:{short:!0,key:"sender-select",name:"From",$$slots:{default:[qi]},$$scope:{ctx:l}}}),r=new me({props:{short:!0,key:"recipient-select",name:"To",$$slots:{default:[Ui]},$$scope:{ctx:l}}}),c=new me({props:{short:!0,key:"recipient-status",name:"",$$slots:{default:[Ki]},$$scope:{ctx:l}}});let ce=l[9]&&l[5]&&is(l);_=new me({props:{short:!0,key:"asset-select",name:"Asset",$$slots:{default:[Gi]},$$scope:{ctx:l}}}),h=new me({props:{short:!0,key:"amount",name:"Amount",$$slots:{default:[Yi]},$$scope:{ctx:l}}}),b=new me({props:{short:!0,key:"balance",name:"",$$slots:{default:[Zi]},$$scope:{ctx:l}}}),R=new me({props:{short:!0,key:"fee-manual",name:"Fee",$$slots:{post:[Qi],default:[Ji]},$$scope:{ctx:l}}});let ae=l[17]&&fs(l),_e=l[17]&&_s(l);return se=new at({props:{cancel:"pop",confirm:["Next",l[60],!l[20]]}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),T(c.$$.fragment),i=M(),ce&&ce.c(),a=M(),f=y("hr"),u=M(),T(_.$$.fragment),p=M(),T(h.$$.fragment),g=M(),T(b.$$.fragment),$=M(),C=y("hr"),j=M(),T(R.$$.fragment),D=M(),G=y("hr"),B=M(),L=y("div"),O=y("div"),U=y("span"),E=M(),q=y("span"),q.textContent="Add memo",z=M(),ae&&ae.c(),P=M(),_e&&_e.c(),V=M(),T(se.$$.fragment),w(U,"class","icon dropdown svelte-1bqjv2w"),w(q,"class","text svelte-1bqjv2w"),w(O,"class","title clickable svelte-1bqjv2w"),w(L,"class","memo svelte-1bqjv2w"),Y(L,"expanded",l[17])},m(F,X){A(e,F,X),m(F,n,X),A(t,F,X),m(F,s,X),A(r,F,X),m(F,o,X),A(c,F,X),m(F,i,X),ce&&ce.m(F,X),m(F,a,X),m(F,f,X),m(F,u,X),A(_,F,X),m(F,p,X),A(h,F,X),m(F,g,X),A(b,F,X),m(F,$,X),m(F,C,X),m(F,j,X),A(R,F,X),m(F,D,X),m(F,G,X),m(F,B,X),m(F,L,X),v(L,O),v(O,U),U.innerHTML=kr,v(O,E),v(O,q),v(O,z),ae&&ae.m(O,null),v(L,P),_e&&_e.m(L,null),m(F,V,X),A(se,F,X),Z=!0,le||(ue=te(O,"click",l[54]),le=!0)},p(F,X){const pe={};X[0]&4096&&(pe.subtitle=F[12]?.name||"?"),e.$set(pe);const Fe={};X[0]&8192|X[2]&2048&&(Fe.$$scope={dirty:X,ctx:F}),t.$set(Fe);const Te={};X[0]&81|X[2]&2048&&(Te.$$scope={dirty:X,ctx:F}),r.$set(Te);const Ye={};X[0]&2097704|X[2]&2048&&(Ye.$$scope={dirty:X,ctx:F}),c.$set(Ye),F[9]&&F[5]?ce?(ce.p(F,X),X[0]&544&&k(ce,1)):(ce=is(F),ce.c(),k(ce,1),ce.m(a.parentNode,a)):ce&&(re(),S(ce,1,1,()=>{ce=null}),oe());const Be={};X[0]&2|X[2]&2048&&(Be.$$scope={dirty:X,ctx:F}),_.$set(Be);const Le={};X[0]&1174|X[2]&2048&&(Le.$$scope={dirty:X,ctx:F}),h.$set(Le);const Oe={};X[0]&25167874|X[2]&2048&&(Oe.$$scope={dirty:X,ctx:F}),b.$set(Oe);const Xe={};X[0]&4194304|X[2]&2048&&(Xe.$$scope={dirty:X,ctx:F}),R.$set(Xe),F[17]?ae?(ae.p(F,X),X[0]&131072&&k(ae,1)):(ae=fs(F),ae.c(),k(ae,1),ae.m(O,null)):ae&&(re(),S(ae,1,1,()=>{ae=null}),oe()),F[17]?_e?(_e.p(F,X),X[0]&131072&&k(_e,1)):(_e=_s(F),_e.c(),k(_e,1),_e.m(L,null)):_e&&(re(),S(_e,1,1,()=>{_e=null}),oe()),X[0]&131072&&Y(L,"expanded",F[17]);const Ke={};X[0]&1048576&&(Ke.confirm=["Next",F[60],!F[20]]),se.$set(Ke)},i(F){Z||(k(e.$$.fragment,F),k(t.$$.fragment,F),k(r.$$.fragment,F),k(c.$$.fragment,F),k(ce),k(_.$$.fragment,F),k(h.$$.fragment,F),k(b.$$.fragment,F),k(R.$$.fragment,F),k(ae),k(_e),k(se.$$.fragment,F),Z=!0)},o(F){S(e.$$.fragment,F),S(t.$$.fragment,F),S(r.$$.fragment,F),S(c.$$.fragment,F),S(ce),S(_.$$.fragment,F),S(h.$$.fragment,F),S(b.$$.fragment,F),S(R.$$.fragment,F),S(ae),S(_e),S(se.$$.fragment,F),Z=!1},d(F){I(e,F),F&&d(n),I(t,F),F&&d(s),I(r,F),F&&d(o),I(c,F),F&&d(i),ce&&ce.d(F),F&&d(a),F&&d(f),F&&d(u),I(_,F),F&&d(p),I(h,F),F&&d(g),I(b,F),F&&d($),F&&d(C),F&&d(j),I(R,F),F&&d(D),F&&d(G),F&&d(B),F&&d(L),ae&&ae.d(),_e&&_e.d(),F&&d(V),I(se,F),le=!1,ue()}}}function ic(l){let e,n;return e=new ve({props:{form:!0,slides:!0,$$slots:{default:[oc]},$$scope:{ctx:l}}}),e.$on("submit",l[61]),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s[0]&33554431|s[2]&2048&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}const ms="usd",$t=.01,cc=/^\S.{0,1023}$/;function ac(l,e,n){let t,s,r,o,c,i,a,f,u,_,p,h,g,b,$,C,j;K(l,dt,W=>n(42,h=W)),K(l,Rt,W=>n(43,g=W)),K(l,Mt,W=>n(44,b=W)),K(l,Et,W=>n(65,$=W)),K(l,ze,W=>n(12,C=W)),K(l,ht,W=>n(66,j=W));const R={duration:350,delay:110},D={duration:150},G=he("page");let{sender:B=b}=e,L=j,{native:O=Object.keys(C.coins)[0]}=e;const U=O;let{token:E=null}=e;const q=E;let{recipient:z=""}=e,P=z,V=U?Ae.holdingPathFor(g,U):"",se,Z=!1,le=!1,ue=!1;async function ce(){const W=await vt.get("e2e_encrypted_memos")||null;if(W?.[$]){const _t=W[$];n(14,{enabled:Z,published:le}=_t,Z,n(15,le)),ae()}}ce(),yn({updateStore({key:W}){W==="settings"&&ce()}});function ae(){n(16,ue=!1),h.e2eInfoFor(P).then(W=>{n(16,ue=!!W.sequence)}).catch(()=>{n(18,Oe=!1)})}let _e=!1;async function F(W=!1){if(_e)return;_e=!0;const nr=[...(await xe.read()).contacts()];n(36,se=yr(nr,([sr,lr])=>({[fe.bech32(lr.address)]:sr}))),_e=!1}{const W=_l("agents",F),_t=ze.subscribe(F);Lt(()=>{W(),_t()})}let X=null,pe="";function Fe(){n(2,pe=o),t&&n(2,pe=new we(pe).minus($t).toString()),n(4,We++,We)}let Te=null;const Ye={none:{icon:"<svg></svg>",text:""},unknown:{icon:vo,text:"Determining address type..."},personal:{icon:Sn,text:"Personal address"},contract:{icon:wo,text:"Contract address"}};let Be="none",Le=!1,Oe=!1,Xe="";function Ke(){if(p)U&&G.push({creator:gi,props:{accountRef:L,coin:U,recipient:P,amount:pe,memoPlaintext:Xe,encryptMemo:(Oe||!Xe.length&&Z&&le)&&ue,fee:$t+""}});else{n(4,We++,We);return}}let We=0,et=!1,De="",Ze="",tt="";function ut(W){n(39,tt=W.target.value)}function nt(){G.push({creator:Vi,context:{intent:{id:"send_adjust_memo_settings"}}})}function Ht(W){L=W,n(13,L)}function St(W){De=W,n(6,De)}function zt(W){P=W,n(0,P)}function Ft(W){et=W,n(5,et)}function bt(W){V=W,n(1,V)}function Ve(W){Ze=W,n(7,Ze)}function ye(W){pe=W,n(2,pe)}const je=()=>Fe();function Wl(W){Oe=W,n(18,Oe)}const Gl=()=>n(17,Le=!Le);function Yl(){Xe=this.value,n(19,Xe)}const Zl=()=>nt(),Jl=()=>nt(),Ql=()=>nt(),xl=()=>nt(),er=()=>Ke(),tr=W=>{W.preventDefault(),Ke()};return l.$$set=W=>{"sender"in W&&n(32,B=W.sender),"native"in W&&n(33,O=W.native),"token"in W&&n(34,E=W.token),"recipient"in W&&n(35,z=W.recipient)},l.$$.update=()=>{l.$$.dirty[0]&4098&&n(10,t=V&&Ae.parseEntityPath(V)?.type==="holding"&&U?C.coins?.[U]:null),l.$$.dirty[0]&2&&n(41,s=V&&Ae.parseEntityPath(V)?.type==="token"&&q?Ae.pathFrom(q):""),l.$$.dirty[0]&1026|l.$$.dirty[1]&1024&&console.log({si_native:U,g_coin:t,p_asset:V,p_token:s,g_token:q}),l.$$.dirty[0]&2|l.$$.dirty[1]&14336&&b&&V&&(n(37,X=null),queueMicrotask(async()=>{n(11,o="[...]");const W=h.cachedBalance(g,U);W&&W.timestamp>Date.now()-5*Xt&&n(37,X=new we(W.data.amount));const _t=await h.bankBalance(g,U);_t&&n(37,X=new we(_t.balance.amount))})),l.$$.dirty[0]&1024|l.$$.dirty[1]&64&&n(11,o=X?Kt(X.shiftedBy(-(t||q).decimals).toNumber()):""),l.$$.dirty[0]&2052&&n(23,c=pe===o),l.$$.dirty[0]&1024&&n(40,i=(q||t)?.extra?.coingecko_id||""),l.$$.dirty[1]&640&&i&&(async()=>{const W=await vn.coinsVersus([i],ms);n(38,Te=W[i]),typeof Te=="number"&&Ue(Te,ms)})(),l.$$.dirty[1]&128&&n(22,a=typeof Te=="number"?Ue($t*Te,"usd"):""),l.$$.dirty[0]&1|l.$$.dirty[1]&2048&&(P?(n(3,Be="unknown"),h.isContract(P).then(W=>{W?n(3,Be="contract"):n(3,Be="personal")}),ae()):n(3,Be="none")),l.$$.dirty[0]&8&&n(21,f=Ye[Be]),l.$$.dirty[0]&1|l.$$.dirty[1]&32&&n(9,u=P&&se&&!(P in se)),l.$$.dirty[0]&48|l.$$.dirty[1]&256&&n(8,_=et&&(We||!0)?tt?cc.test(tt)?"":tt.length>1024?"That name is way too long":"Cannot begin with space":"Enter a contact name to save new address":""),l.$$.dirty[0]&48&&et&&!We&&n(8,_=""),l.$$.dirty[0]&997|l.$$.dirty[1]&256&&n(20,p=P&&pe&&!De&&!Ze&&(!u||!et||tt&&!_)||!1),l.$$.dirty[0]&197&&console.log({to:P,s_amount:pe,s_err_recipient:De,s_err_amount:Ze})},n(24,r=U||q?.symbol||""),[P,V,pe,Be,We,et,De,Ze,_,u,t,o,C,L,Z,le,ue,Le,Oe,Xe,p,f,a,c,r,R,D,q,Fe,Ke,ut,nt,B,O,E,z,se,X,Te,tt,i,s,h,g,b,Ht,St,zt,Ft,bt,Ve,ye,je,Wl,Gl,Yl,Zl,Jl,Ql,xl,er,tr]}class Pt extends x{constructor(e){super(),ee(this,e,ac,ic,Q,{sender:32,native:33,token:34,recipient:35},null,[-1,-1,-1])}}function fc(l){let e;return{c(){e=y("div"),e.textContent="\xA0",w(e,"class","gap no-margin svelte-1rn5flx")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}class Rl extends x{constructor(e){super(),ee(this,e,null,fc,Q,{})}}function uc(l){let e,n,t,s,r,o;return e=new Ee({props:{pops:!0,account:!0,network:!0,title:l[3],subtitle:l[4]}}),t=new Ot({props:{pfp:l[2],resource:l[1]||ds||null,resourcePath:l[8],title:l[5]?`${Kt(l[5].toNumber())} ${l[3]}`:"...",subtitle:`${l[6]} (${l[7]} per ${l[0]})`,actions:l[9],circular:!0}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),r=y("div"),w(r,"class","txns no-margin")},m(c,i){A(e,c,i),m(c,n,i),A(t,c,i),m(c,s,i),m(c,r,i),o=!0},p(c,i){const a={};i&8&&(a.title=c[3]),i&16&&(a.subtitle=c[4]),e.$set(a);const f={};i&4&&(f.pfp=c[2]),i&2&&(f.resource=c[1]||ds||null),i&40&&(f.title=c[5]?`${Kt(c[5].toNumber())} ${c[3]}`:"..."),i&193&&(f.subtitle=`${c[6]} (${c[7]} per ${c[0]})`),t.$set(f)},i(c){o||(k(e.$$.fragment,c),k(t.$$.fragment,c),o=!0)},o(c){S(e.$$.fragment,c),S(t.$$.fragment,c),o=!1},d(c){I(e,c),c&&d(n),I(t,c),c&&d(s),c&&d(r)}}}function _c(l){let e,n;return e=new ve({props:{debug:"HoldingView",nav:!0,slides:!0,$$slots:{default:[uc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&262399&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}let ds=null;function pc(l,e,n){let t,s,r;K(l,ze,R=>n(13,t=R)),K(l,dt,R=>n(14,s=R)),K(l,Et,R=>n(15,r=R));const o=he("page");let{entityRef:c}=e;const i=c;let a="",f="",u=null,_="",p="",h="",g=null,b="",$="";async function C(){await Ae.read();const R=Ae.parseEntityPath(i);if(!R)throw new Error(`Attempted to load holding view on non-entity path "${i}"`);switch(R.type){case"holding":{n(0,a="coin"),{coin:f}=R;const D=R.chainRef,G=D===r?t:await fe.at(D);n(1,u=G.coins[f]),n(3,p=f),n(4,h=u.name),n(2,_=u.pfp);const B=s.cachedBalance(R.bech32,f);let L;B&&B.timestamp>=Date.now()-2*Xt?L=B.data:{balance:L}=await s.bankBalance(R.bech32,f),n(5,g=new we(L.amount).shiftedBy(-u.decimals)),Sr(L,u).then(O=>{n(6,b=Ue(O.fiat,O.versus)),n(7,$=Ue(O.worth,O.versus))});break}case"token":{n(0,a="token"),(await Ae.read()).tokens(R.entityRef,Ae.fungibleInterfacesFor(t));debugger;break}default:throw new Error(`Unhandled entity type: "${R.type}"`)}}C();const j={send:{label:"Send",trigger(){o.push({creator:Pt,props:f?{native:f}:{}})}}};return l.$$set=R=>{"entityRef"in R&&n(10,c=R.entityRef)},[a,u,_,p,h,g,b,$,i,j,c]}class hs extends x{constructor(e){super(),ee(this,e,pc,_c,Q,{entityRef:10})}}function gs(l,e,n){const t=l.slice();return t[23]=e[n][0],t[24]=e[n][1],t}function bs(l,e,n){const t=l.slice();t[27]=e[n][0],t[33]=e[n][1],t[34]=e[n][2],t[35]=e[n][3];const s=Ae.holdingPathFor(t[3],t[27]);t[29]=s;const r={name:t[27],pfp:t[0].pfp};t[36]=r;const o=t[35](Er(t[34],t[33]));return t[37]=o,t}function ws(l,e,n){const t=l.slice();t[27]=e[n][0],t[28]=e[n][1];const s=Ae.holdingPathFor(t[3],t[27]);return t[29]=s,t}function vs(l){let e;return{c(){e=y("div"),e.textContent="TESTNET",w(e,"class","testnet-reminder no-margin svelte-8v4b7t")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function $s(l){let e,n,t,s,r=l[0].testnet?"testnet ":"",o,c=l[1].join(" or ")+"",i,a,f,u;function _(g,b){return g[0].testnet?dc:mc}let p=_(l),h=p(l);return{c(){e=y("div"),n=y("div"),t=y("span"),t.textContent="Warning:",s=H(" you don't have any "),o=H(r),i=H(c),a=H(" to pay gas fees."),f=M(),u=y("div"),h.c(),w(t,"class","warning"),w(n,"class","message svelte-8v4b7t"),w(u,"class","buttons"),w(e,"class","no-gas text-align_center subinfo svelte-8v4b7t")},m(g,b){m(g,e,b),v(e,n),v(n,t),v(n,s),v(n,o),v(n,i),v(n,a),v(e,f),v(e,u),h.m(u,null)},p(g,b){b[0]&1&&r!==(r=g[0].testnet?"testnet ":"")&&J(o,r),b[0]&2&&c!==(c=g[1].join(" or ")+"")&&J(i,c),p===(p=_(g))&&h?h.p(g,b):(h.d(1),h=p(g),h&&(h.c(),h.m(u,null)))},d(g){g&&d(e),h.d()}}}function mc(l){let e,n,t=l[1].join(" or ")+"",s;return{c(){e=y("button"),n=H("Buy "),s=H(t),w(e,"class","pill")},m(r,o){m(r,e,o),v(e,n),v(e,s)},p(r,o){o[0]&2&&t!==(t=r[1].join(" or ")+"")&&J(s,t)},d(r){r&&d(e)}}}function dc(l){let e,n,t=l[1].join(" or ")+"",s,r,o,c;return{c(){e=y("button"),n=H("Get "),s=H(t),r=H(" from faucet"),w(e,"class","pill")},m(i,a){m(i,e,a),v(e,n),v(e,s),v(e,r),o||(c=te(e,"click",l[14]),o=!0)},p(i,a){a[0]&2&&t!==(t=i[1].join(" or ")+"")&&J(s,t)},d(i){i&&d(e),o=!1,c()}}}function ks(l){let e,n,t,s,r=l[1].length&&$s(l);return t=new ot({props:{address:l[3],copyable:"icon"}}),{c(){r&&r.c(),e=M(),n=y("div"),T(t.$$.fragment),w(n,"class","owner-address subinfo svelte-8v4b7t")},m(o,c){r&&r.m(o,c),m(o,e,c),m(o,n,c),A(t,n,null),s=!0},p(o,c){o[1].length?r?r.p(o,c):(r=$s(o),r.c(),r.m(e.parentNode,e)):r&&(r.d(1),r=null);const i={};c[0]&8&&(i.address=o[3]),t.$set(i)},i(o){s||(k(t.$$.fragment,o),s=!0)},o(o){S(t.$$.fragment,o),s=!1},d(o){r&&r.d(o),o&&d(e),o&&d(n),I(t)}}}function hc(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function gc(l){let e,n,t=l[32],s=[];for(let o=0;o<t.length;o+=1)s[o]=ys(bs(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=ie()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c[0]&777){t=o[32];let i;for(i=0;i<t.length;i+=1){const a=bs(o,t,i);s[i]?(s[i].p(a,c),k(s[i],1)):(s[i]=ys(a),s[i].c(),k(s[i],1),s[i].m(e.parentNode,e))}for(re(),i=t.length;i<s.length;i+=1)r(i);oe()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)k(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Se(s,o),o&&d(e)}}}function ys(l){let e,n;function t(){return l[17](l[29])}return e=new it({props:{lockIcon:!0,detail:"Native Coin",resourcePath:l[29],resource:l[36],amount:Mr(l[34],l[33]),fiat:l[37].then(l[16])}}),e.$on("click",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r[0]&8&&(o.resourcePath=l[29]),r[0]&1&&(o.resource=l[36]),e.$set(o)},i(s){n||(k(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function bc(l){let e,n,t=ke(l[0].coins),s=[];for(let o=0;o<t.length;o+=1)s[o]=Ss(ws(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=ie()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c[0]&265){t=ke(o[0].coins);let i;for(i=0;i<t.length;i+=1){const a=ws(o,t,i);s[i]?(s[i].p(a,c),k(s[i],1)):(s[i]=Ss(a),s[i].c(),k(s[i],1),s[i].m(e.parentNode,e))}for(re(),i=t.length;i<s.length;i+=1)r(i);oe()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)k(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Se(s,o),o&&d(e)}}}function Ss(l){let e,n;function t(){return l[15](l[29])}return e=new it({props:{lockIcon:!0,detail:"Native Coin",name:l[27],pfp:l[0].pfp,amount:Nr()}}),e.$on("click",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r[0]&1&&(o.name=l[27]),r[0]&1&&(o.pfp=l[0].pfp),e.$set(o)},i(s){n||(k(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function wc(l){return{c:N,m:N,p:N,d:N}}function vc(l){let e,n=ke(l[7](l[22])),t=[];for(let s=0;s<n.length;s+=1)t[s]=Cs(gs(l,n,s));return{c(){for(let s=0;s<t.length;s+=1)t[s].c();e=ie()},m(s,r){for(let o=0;o<t.length;o+=1)t[o].m(s,r);m(s,e,r)},p(s,r){if(r[0]&129){n=ke(s[7](s[22]));let o;for(o=0;o<n.length;o+=1){const c=gs(s,n,o);t[o]?t[o].p(c,r):(t[o]=Cs(c),t[o].c(),t[o].m(e.parentNode,e))}for(;o<t.length;o+=1)t[o].d(1);t.length=n.length}},d(s){Se(t,s),s&&d(e)}}}function Cs(l){let e=l[24].spec+"",n;return{c(){n=H(e)},m(t,s){m(t,n,s)},p(t,s){s[0]&1&&e!==(e=t[24].spec+"")&&J(n,e)},d(t){t&&d(n)}}}function $c(l){let e;return{c(){e=H("Loading tokens...")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function Ms(l){let e,n,t,s,r={ctx:l,current:null,token:null,hasCatch:!1,pending:bc,then:gc,catch:hc,value:32,blocks:[,,,]};Ie(l[9](),r);let o={ctx:l,current:null,token:null,hasCatch:!1,pending:$c,then:vc,catch:wc,value:22};return Ie(t=Ae.readFungibleTokens(l[0]),o),{c(){e=y("div"),r.block.c(),n=M(),o.block.c(),w(e,"class","rows no-margin")},m(c,i){m(c,e,i),r.block.m(e,r.anchor=null),r.mount=()=>e,r.anchor=n,v(e,n),o.block.m(e,o.anchor=null),o.mount=()=>e,o.anchor=null,s=!0},p(c,i){l=c,Re(r,l,i),o.ctx=l,i[0]&1&&t!==(t=Ae.readFungibleTokens(l[0]))&&Ie(t,o)||Re(o,l,i)},i(c){s||(k(r.block),s=!0)},o(c){for(let i=0;i<3;i+=1){const a=r.blocks[i];S(a)}s=!1},d(c){c&&d(e),r.block.d(),r.token=null,r=null,o.block.d(),o.token=null,o=null}}}function kc(l){let e,n,t,s,r,o=l[0],c,i,a,f=l[4],u,_;e=new Ee({props:{search:!0,network:!0,account:!0}});let p=l[0].testnet&&vs();s=new Ot({props:{noPfp:!0,title:l[2],subtitle:l[5].name,resource:l[5],resourcePath:l[6],actions:{send:{label:"Send",trigger:l[12]},recv:{label:"Receive",trigger:l[13]}}}});let h=ks(l);i=new Rl({});let g=Ms(l);return{c(){T(e.$$.fragment),n=M(),p&&p.c(),t=M(),T(s.$$.fragment),r=M(),h.c(),c=M(),T(i.$$.fragment),a=M(),g.c(),u=ie()},m(b,$){A(e,b,$),m(b,n,$),p&&p.m(b,$),m(b,t,$),A(s,b,$),m(b,r,$),h.m(b,$),m(b,c,$),A(i,b,$),m(b,a,$),g.m(b,$),m(b,u,$),_=!0},p(b,$){b[0].testnet?p||(p=vs(),p.c(),p.m(t.parentNode,t)):p&&(p.d(1),p=null);const C={};$[0]&4&&(C.title=b[2]),$[0]&32&&(C.subtitle=b[5].name),$[0]&32&&(C.resource=b[5]),$[0]&64&&(C.resourcePath=b[6]),$[0]&96&&(C.actions={send:{label:"Send",trigger:b[12]},recv:{label:"Receive",trigger:b[13]}}),s.$set(C),$[0]&1&&Q(o,o=b[0])?(re(),S(h,1,1,N),oe(),h=ks(b),h.c(),k(h,1),h.m(c.parentNode,c)):h.p(b,$),$[0]&16&&Q(f,f=b[4])?(re(),S(g,1,1,N),oe(),g=Ms(b),g.c(),k(g,1),g.m(u.parentNode,u)):g.p(b,$)},i(b){_||(k(e.$$.fragment,b),k(s.$$.fragment,b),k(h),k(i.$$.fragment,b),k(g),_=!0)},o(b){S(e.$$.fragment,b),S(s.$$.fragment,b),S(h),S(i.$$.fragment,b),S(g),_=!1},d(b){I(e,b),b&&d(n),p&&p.d(b),b&&d(t),I(s,b),b&&d(r),h.d(b),b&&d(c),I(i,b),b&&d(a),b&&d(u),g.d(b)}}}function yc(l){let e,n;return e=new ve({props:{debug:"HoldingsHome",nav:!0,root:!0,keyed:!0,$$slots:{default:[kc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s[0]&127|s[1]&512&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Sc(l,e,n){let t,s,r,o,c;K(l,ze,O=>n(0,t=O)),K(l,Rt,O=>n(3,s=O)),K(l,dt,O=>n(4,r=O)),K(l,Mt,O=>n(5,o=O)),K(l,ht,O=>n(6,c=O));const i=O=>gl(O,(U,E)=>E),a=he("page");let f=new we(0),u=0,_=[],p,h=new Promise(O=>{p=O}),g=t;function b(){if(u-=1,!u){const O=Ue(f.toNumber(),"usd");p(O);const U=o;st.open(E=>E.put({...U,extra:{total_fiat_cache:O}}))}}async function $(){let O;try{O=await r.bankBalances(s)}catch(E){return mt({title:"Network Error",error:E}),[]}const U=[];for(const[E,q]of ke(t.coins)){const z=O[E];(!z||z.balance.amount==="0")&&_.push(E),u+=1,U.push([E,t.coins[E],z?.balance||{amount:"0",denom:q.denom},async P=>{const V=await P;return f=f.plus(V),b(),V}])}return U.length||(u+=1,b()),n(1,_),n(0,t),n(11,g),U}const C={"theta-testnet-001":"https://discord.com/channels/669268347736686612/953697793476821092","pulsar-2":"https://faucet.pulsar.scrttestnet.com/"},j=function(){a.push({creator:Pt,props:{from:o}})},R=function(){bl(c)},D=()=>Cr(C[t.id]),G=O=>{a.push({creator:hs,props:{entityRef:O}})},B=O=>Ue(O.toNumber(),"usd"),L=O=>{a.push({creator:hs,props:{entityRef:O}})};return l.$$.update=()=>{l.$$.dirty[0]&2049&&t!==g&&(n(11,g=t),f=new we(0),u=0,n(2,h=new Promise(O=>{p=O})),n(1,_=[]))},[t,_,h,s,r,o,c,i,a,$,C,g,j,R,D,G,B,L]}class Cc extends x{constructor(e){super(),ee(this,e,Sc,yc,Q,{},null,[-1,-1])}}function Mc(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Nc(l){let e,n,t,s,r,o,c,i;return e=new me({props:{key:"profile-icon",name:"Profile icon"}}),t=new me({props:{key:"account-name",name:"Name",$$slots:{default:[Ec]},$$scope:{ctx:l}}}),r=new me({props:{key:"account-address",name:"Public address",$$slots:{default:[Ac]},$$scope:{ctx:l}}}),c=new at({props:{cancel:!l[4],back:!0,confirm:["Finish",l[6],!l[3]]}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),T(c.$$.fragment)},m(a,f){A(e,a,f),m(a,n,f),A(t,a,f),m(a,s,f),A(r,a,f),m(a,o,f),A(c,a,f),i=!0},p(a,f){const u={};f&8194&&(u.$$scope={dirty:f,ctx:a}),t.$set(u);const _={};f&8196&&(_.$$scope={dirty:f,ctx:a}),r.$set(_);const p={};f&8&&(p.confirm=["Finish",a[6],!a[3]]),c.$set(p)},i(a){i||(k(e.$$.fragment,a),k(t.$$.fragment,a),k(r.$$.fragment,a),k(c.$$.fragment,a),i=!0)},o(a){S(e.$$.fragment,a),S(t.$$.fragment,a),S(r.$$.fragment,a),S(c.$$.fragment,a),i=!1},d(a){I(e,a),a&&d(n),I(t,a),a&&d(s),I(r,a),a&&d(o),I(c,a)}}}function Ec(l){let e,n,t;return{c(){e=y("input"),w(e,"id","account-name"),w(e,"type","text"),w(e,"placeholder","Satoshi")},m(s,r){m(s,e,r),Ne(e,l[1]),n||(t=te(e,"input",l[9]),n=!0)},p(s,r){r&2&&e.value!==s[1]&&Ne(e,s[1])},d(s){s&&d(e),n=!1,t()}}}function Tc(l){let e,n;return e=new ot({props:{copyable:!0,address:l[2]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&4&&(r.address=t[2]),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Ac(l){let e,n;return e=new tn({props:{address:!0,key:"account-address",$$slots:{default:[Tc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&8196&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Ic(l){let e;return{c(){e=H("Loading accounts...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Rc(l){let e,n=l[0]?"Edit":"New",t,s,r,o,c,i={ctx:l,current:null,token:null,hasCatch:!1,pending:Ic,then:Nc,catch:Mc,blocks:[,,,]};return Ie(l[5](),i),{c(){e=y("h3"),t=H(n),s=H(" account"),r=M(),o=ie(),i.block.c()},m(a,f){m(a,e,f),v(e,t),v(e,s),m(a,r,f),m(a,o,f),i.block.m(a,i.anchor=f),i.mount=()=>o.parentNode,i.anchor=o,c=!0},p(a,f){l=a,(!c||f&1)&&n!==(n=l[0]?"Edit":"New")&&J(t,n),Re(i,l,f)},i(a){c||(k(i.block),c=!0)},o(a){for(let f=0;f<3;f+=1){const u=i.blocks[f];S(u)}c=!1},d(a){a&&d(e),a&&d(r),a&&d(o),i.block.d(a),i.token=null,i=null}}}function Lc(l){let e,n;return e=new ve({props:{$$slots:{default:[Rc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&8207&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Oc(l,e,n){let t,s,r;K(l,ht,b=>n(10,s=b)),K(l,ze,b=>n(8,r=b));let{account:o}=e;const c=o;let i,a="",f;const u=he("completed"),_=he("page");async function p(){const b=await st.read();n(7,i=b.at(c)),n(1,a=i.name)}async function h(){Object.assign(i,{name:a}),await st.open(b=>b.put(i)),c===s&&be(ht,s=c,s),u?u(!0):_.reset()}function g(){a=this.value,n(1,a)}return l.$$set=b=>{"account"in b&&n(0,o=b.account)},l.$$.update=()=>{l.$$.dirty&2&&n(3,t=!!a),l.$$.dirty&384&&n(2,f=i?fe.addressFor(i.pubkey,r):"")},[o,a,f,t,u,p,h,i,r,g]}class jc extends x{constructor(e){super(),ee(this,e,Oc,Lc,Q,{account:0})}}function Pc(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Hc(l){let e,n;return e=new Ot({props:{resource:l[0],resourcePath:l[1],actions:l[3],$$slots:{subtitle:[zc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&1&&(r.resource=t[0]),s&65&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function zc(l){let e,n;return e=new ot({props:{copyable:!0,address:fe.addressFor(l[0].pubkey)}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&1&&(r.address=fe.addressFor(t[0].pubkey)),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Fc(l){let e;return{c(){e=H("Loading...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Bc(l){let e,n,t,s;e=new Ee({props:{pops:!0,search:!0,network:!0,title:"Account"}});let r={ctx:l,current:null,token:null,hasCatch:!1,pending:Fc,then:Hc,catch:Pc,blocks:[,,,]};return Ie(l[2](),r),{c(){T(e.$$.fragment),n=M(),t=ie(),r.block.c()},m(o,c){A(e,o,c),m(o,n,c),m(o,t,c),r.block.m(o,r.anchor=c),r.mount=()=>t.parentNode,r.anchor=t,s=!0},p(o,c){l=o,Re(r,l,c)},i(o){s||(k(e.$$.fragment,o),k(r.block),s=!0)},o(o){S(e.$$.fragment,o);for(let c=0;c<3;c+=1){const i=r.blocks[c];S(i)}s=!1},d(o){I(e,o),o&&d(n),o&&d(t),r.block.d(o),r.token=null,r=null}}}function Dc(l){let e,n;return e=new ve({props:{nav:!0,$$slots:{default:[Bc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&65&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Vc(l,e,n){let{accountRef:t}=e;const s=t;let r;const o=he("page");async function c(){const a=await st.read();return n(0,r=a.at(s))}const i={send:{label:"Send",trigger(){o.push({creator:Pt,props:{from:fe.addressFor(r.pubkey)}})}},recv:{label:"Receive",trigger(){bl(s)}},edit:{label:"Edit",trigger(){o.push({creator:jc,props:{account:s}})}}};return l.$$set=a=>{"accountRef"in a&&n(4,t=a.accountRef)},[r,s,c,i,t]}class qc extends x{constructor(e){super(),ee(this,e,Vc,Dc,Q,{accountRef:4})}}function Ns(l,e,n){const t=l.slice();t[5]=e[n][0],t[6]=e[n][1];const s=fe.addressFor(t[6].pubkey);return t[7]=s,t}function Uc(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Xc(l){let e=l[1],n,t,s=Ts(l);return{c(){s.c(),n=ie()},m(r,o){s.m(r,o),m(r,n,o),t=!0},p(r,o){o&2&&Q(e,e=r[1])?(re(),S(s,1,1,N),oe(),s=Ts(r),s.c(),k(s,1),s.m(n.parentNode,n)):s.p(r,o)},i(r){t||(k(s),t=!0)},o(r){S(s),t=!1},d(r){r&&d(n),s.d(r)}}}function Kc(l){let e,n,t,s,r;return t=new ot({props:{address:l[7]}}),{c(){e=y("div"),e.textContent="StarShell - - m/44'/118'/0'/0/??",n=M(),T(t.$$.fragment),s=M(),w(e,"class","hd-path")},m(o,c){m(o,e,c),m(o,n,c),A(t,o,c),m(o,s,c),r=!0},p(o,c){const i={};c&1&&(i.address=o[7]),t.$set(i)},i(o){r||(k(t.$$.fragment,o),r=!0)},o(o){S(t.$$.fragment,o),r=!1},d(o){o&&d(e),o&&d(n),I(t,o),o&&d(s)}}}function Es(l){let e,n;function t(){return l[4](l[5])}return e=new it({props:{resource:l[6],resourcePath:l[5],address:l[7],iconClass:"square pfp",$$slots:{detail:[Kc]},$$scope:{ctx:l}}}),e.$on("click",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r&1&&(o.resource=l[6]),r&1&&(o.resourcePath=l[5]),r&1&&(o.address=l[7]),r&1025&&(o.$$scope={dirty:r,ctx:l}),e.$set(o)},i(s){n||(k(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function Ts(l){let e,n,t=l[0],s=[];for(let o=0;o<t.length;o+=1)s[o]=Es(Ns(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=ie()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c&5){t=o[0];let i;for(i=0;i<t.length;i+=1){const a=Ns(o,t,i);s[i]?(s[i].p(a,c),k(s[i],1)):(s[i]=Es(a),s[i].c(),k(s[i],1),s[i].m(e.parentNode,e))}for(re(),i=t.length;i<s.length;i+=1)r(i);oe()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)k(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Se(s,o),o&&d(e)}}}function Wc(l){let e;return{c(){e=H("Loading...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Gc(l){let e,n,t,s,r,o;e=new Ee({props:{search:!0,network:!0,account:!0}}),t=new jt({props:{title:"Accounts"}});let c={ctx:l,current:null,token:null,hasCatch:!1,pending:Wc,then:Xc,catch:Uc,blocks:[,,,]};return Ie(l[3](),c),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),r=y("div"),c.block.c(),w(r,"class","rows no-margin")},m(i,a){A(e,i,a),m(i,n,a),A(t,i,a),m(i,s,a),m(i,r,a),c.block.m(r,c.anchor=null),c.mount=()=>r,c.anchor=null,o=!0},p(i,a){l=i,Re(c,l,a)},i(i){o||(k(e.$$.fragment,i),k(t.$$.fragment,i),k(c.block),o=!0)},o(i){S(e.$$.fragment,i),S(t.$$.fragment,i);for(let a=0;a<3;a+=1){const f=c.blocks[a];S(f)}o=!1},d(i){I(e,i),i&&d(n),I(t,i),i&&d(s),i&&d(r),c.block.d(),c.token=null,c=null}}}function Yc(l){let e,n;return e=new ve({props:{debug:"Accounts",nav:!0,root:!0,$$slots:{default:[Gc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&1027&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Zc(l,e,n){let t;K(l,ze,i=>n(1,t=i));const s=he("page");let r;async function o(){const i=await st.read();return n(0,r=i.entries())}return[r,t,s,o,i=>s.push({creator:qc,props:{accountRef:i}})]}class Jc extends x{constructor(e){super(),ee(this,e,Zc,Yc,Q,{})}}var Qc='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M64 224h13.5c24.7 56.5 80.9 96 146.5 96s121.8-39.5 146.5-96H384c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-13.5C345.8 39.5 289.6 0 224 0S102.2 39.5 77.5 96H64c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zm40-88c0-22.1 21.5-40 48-40h144c26.5 0 48 17.9 48 40v24c0 53-43 96-96 96h-48c-53 0-96-43-96-96v-24zm72 72l12-36 36-12-36-12-12-36-12 36-36 12 36 12 12 36zm151.6 113.4C297.7 340.7 262.2 352 224 352s-73.7-11.3-103.6-30.6C52.9 328.5 0 385 0 454.4v9.6c0 26.5 21.5 48 48 48h80v-64c0-17.7 14.3-32 32-32h128c17.7 0 32 14.3 32 32v64h80c26.5 0 48-21.5 48-48v-9.6c0-69.4-52.9-125.9-120.4-133zM272 448c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-96 0c-8.8 0-16 7.2-16 16v48h32v-48c0-8.8-7.2-16-16-16z"/></svg>';function xc(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,g,b;return e=new Ee({props:{pops:!0,title:"Not yet available"}}),{c(){T(e.$$.fragment),n=M(),t=y("h3"),t.textContent="Nothing to see here!",s=M(),r=y("p"),r.textContent="This screen has not yet been implemented.",o=M(),c=y("p"),c.textContent="Please continue exploring the beta.",i=M(),a=y("center"),f=y("span"),u=M(),_=y("div"),p=y("button"),p.textContent="Continue",w(f,"class","icon svelte-o7n71o"),w(p,"class","primary"),w(_,"class","action-line")},m($,C){A(e,$,C),m($,n,C),m($,t,C),m($,s,C),m($,r,C),m($,o,C),m($,c,C),m($,i,C),m($,a,C),v(a,f),f.innerHTML=Qc,m($,u,C),m($,_,C),v(_,p),h=!0,g||(b=te(p,"click",l[2]),g=!0)},p:N,i($){h||(k(e.$$.fragment,$),h=!0)},o($){S(e.$$.fragment,$),h=!1},d($){I(e,$),$&&d(n),$&&d(t),$&&d(s),$&&d(r),$&&d(o),$&&d(c),$&&d(i),$&&d(a),$&&d(u),$&&d(_),g=!1,b()}}}function ea(l){let e,n;return e=new ve({props:{$$slots:{default:[xc]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&64&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function ta(l,e,n){let t;K(l,kt,a=>n(3,t=a));let{reset:s=!1}=e;const r=s,o=he("page");function c(){r?(o.reset(),t.activateThread(Qe.TOKENS)):o.pop()}const i=()=>c();return l.$$set=a=>{"reset"in a&&n(1,s=a.reset)},[c,s,i]}class Ll extends x{constructor(e){super(),ee(this,e,ta,ea,Q,{reset:1})}}function na(l){let e,n;return e=new Ot({props:{resource:l[0],resourcePath:l[1],actions:l[2],$$slots:{subtitle:[ra],default:[la]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&1&&(r.resource=t[0]),s&65&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function sa(l){let e;return{c(){e=H("Loading contact...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function la(l){let e;return{c(){e=H("address")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function ra(l){let e,n;return e=new ot({props:{copyable:!0,address:fe.bech32(l[0].address)}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&1&&(r.address=fe.bech32(t[0].address)),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function oa(l){let e,n,t,s,r,o;e=new Ee({props:{pops:!0,search:!0,network:!0,account:!0}});const c=[sa,na],i=[];function a(f,u){return f[0]?1:0}return t=a(l),s=i[t]=c[t](l),{c(){T(e.$$.fragment),n=M(),s.c(),r=ie()},m(f,u){A(e,f,u),m(f,n,u),i[t].m(f,u),m(f,r,u),o=!0},p(f,u){let _=t;t=a(f),t===_?i[t].p(f,u):(re(),S(i[_],1,1,()=>{i[_]=null}),oe(),s=i[t],s?s.p(f,u):(s=i[t]=c[t](f),s.c()),k(s,1),s.m(r.parentNode,r))},i(f){o||(k(e.$$.fragment,f),k(s),o=!0)},o(f){S(e.$$.fragment,f),S(s),o=!1},d(f){I(e,f),f&&d(n),i[t].d(f),f&&d(r)}}}function ia(l){let e,n;return e=new ve({props:{nav:!0,slides:!0,$$slots:{default:[oa]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&65&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function ca(l,e,n){let{contactRef:t}=e;const s=t;let r;xe.getContact(s).then(i=>n(0,r=i));const o=he("page"),c={send:{label:"Send",trigger(){o.push({creator:Pt,props:{to:fe.bech32(r.address)}})}},edit:{label:"Edit",trigger(){o.push({creator:jl,props:{contactRef:s}})}},delete:{label:"Delete",trigger(){o.push({creator:Ll})}}};return l.$$set=i=>{"contactRef"in i&&n(3,t=i.contactRef)},l.$$.update=()=>{l.$$.dirty&1&&r&&fe.bech32(r.address)},[r,s,c,t]}class Ol extends x{constructor(e){super(),ee(this,e,ca,ia,Q,{contactRef:3})}}var aa=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86-3 3.87L9 13.14 6 17h12l-3.86-5.14z"/>
</svg>`;function fa(l){let e,n;return e=new pl({props:{dim:48,ref:l[0],name:l[1]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function ua(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,g,b=l[0]&&fa(l);return{c(){e=y("div"),n=y("div"),t=y("span"),b&&b.c(),s=M(),r=y("span"),o=y("div"),o.innerHTML=`<span class="warning svelte-1i7pjsy">Notice:</span> 
				<span class="info">Uploaded icons will be resized to be square. Only JPG &amp; PNG files less than 1MB allowed.</span>`,c=M(),i=y("div"),a=y("div"),f=y("span"),u=M(),_=y("span"),_.textContent="Upload Icon",w(t,"class","left svelte-1i7pjsy"),w(o,"class","disclaimer svelte-1i7pjsy"),w(f,"class","icon svelte-1i7pjsy"),w(_,"class","text svelte-1i7pjsy"),w(a,"class","upload svelte-1i7pjsy"),w(i,"class","actions svelte-1i7pjsy"),w(r,"class","right svelte-1i7pjsy"),w(n,"class","row svelte-1i7pjsy"),w(e,"class","area svelte-1i7pjsy"),Y(e,"intent-person",l[2]==="person")},m($,C){m($,e,C),v(e,n),v(n,t),b&&b.m(t,null),v(n,s),v(n,r),v(r,o),v(r,c),v(r,i),v(i,a),v(a,f),f.innerHTML=aa,v(a,u),v(a,_),p=!0,h||(g=te(a,"click",l[6]),h=!0)},p($,[C]){$[0]&&b.p($,C)},i($){p||(k(b),p=!0)},o($){S(b),p=!1},d($){$&&d(e),b&&b.d(),h=!1,g()}}}function _a(l,e,n){let{pfpRef:t}=e;const s=t||"";let{name:r=""}=e;const o=r;let{intent:c="token"}=e;const i=c;(async()=>s&&await Tr.at(s))();const a=()=>Ar;return l.$$set=f=>{"pfpRef"in f&&n(3,t=f.pfpRef),"name"in f&&n(4,r=f.name),"intent"in f&&n(5,c=f.intent)},[s,o,i,t,r,c,a]}class pa extends x{constructor(e){super(),ee(this,e,_a,ua,Q,{pfpRef:3,name:4,intent:5})}}function ma(l){let e,n,t;function s(o){l[17](o)}let r={intent:"person",pfpRef:l[0]?.pfp};return l[1]!==void 0&&(r.name=l[1]),e=new pa({props:r}),de.push(()=>Ce(e,"name",s)),{c(){T(e.$$.fragment)},m(o,c){A(e,o,c),t=!0},p(o,c){const i={};c&1&&(i.pfpRef=o[0]?.pfp),!n&&c&2&&(n=!0,i.name=o[1],Me(()=>n=!1)),e.$set(i)},i(o){t||(k(e.$$.fragment,o),t=!0)},o(o){S(e.$$.fragment,o),t=!1},d(o){I(e,o)}}}function da(l){let e,n,t,s=Gt(l[9])+"",r,o,c,i,a=ke(l[3]).filter(l[18]).map(Rs).join(", ")+"",f,u;return{c(){e=y("style"),e.textContent=`.font-family_mono {
  font-family: 'PT Mono';
  white-space: pre;
}
.hide-scrollbar {
  scrollbar-width: none;
}
.hide-scrollbar::-webkit-scrollbar {
  display: none;
}
.hide-scrollbar::-webkit-scrollbar-track {
  display: none;
}
.hide-scrollbar::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.2);
}
.title {
  font-family: Poppins;
  font-weight: 400;
  font-size: 14px;
  color: var(--theme-color-text-light);
}
.examples {
  margin-left: 0.5em;
}`,n=M(),t=y("span"),r=H(s),o=M(),c=y("span"),i=H("("),f=H(a),u=H(")"),w(e,"lang","less"),w(t,"class","title"),w(c,"class","examples")},m(_,p){m(_,e,p),m(_,n,p),m(_,t,p),v(t,r),m(_,o,p),m(_,c,p),v(c,i),v(c,f),v(c,u)},p(_,p){p&512&&s!==(s=Gt(_[9])+"")&&J(r,s),p&520&&a!==(a=ke(_[3]).filter(_[18]).map(Rs).join(", ")+"")&&J(f,a)},d(_){_&&d(e),_&&d(n),_&&d(t),_&&d(o),_&&d(c)}}}function ha(l){let e,n;return e=new tn({props:{key:"chain-family",$$slots:{default:[da]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&268435976&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function As(l){let e,n;return{c(){e=y("span"),n=H(l[4]),w(e,"class","validation-message")},m(t,s){m(t,e,s),v(e,n)},p(t,s){s&16&&J(n,t[4])},d(t){t&&d(e)}}}function ga(l){let e,n,t,s,r,o=l[4]&&As(l);return{c(){e=y("input"),n=M(),o&&o.c(),t=ie(),w(e,"type","text"),w(e,"spellcheck","false"),w(e,"placeholder","Enter a name"),Y(e,"invalid",l[4])},m(c,i){m(c,e,i),Ne(e,l[1]),m(c,n,i),o&&o.m(c,i),m(c,t,i),s||(r=te(e,"input",l[19]),s=!0)},p(c,i){i&2&&e.value!==c[1]&&Ne(e,c[1]),i&16&&Y(e,"invalid",c[4]),c[4]?o?o.p(c,i):(o=As(c),o.c(),o.m(t.parentNode,t)):o&&(o.d(1),o=null)},d(c){c&&d(e),c&&d(n),o&&o.d(c),c&&d(t),s=!1,r()}}}function Is(l){let e,n;return{c(){e=y("span"),n=H(l[5]),w(e,"class","validation-message")},m(t,s){m(t,e,s),v(e,n)},p(t,s){s&32&&J(n,t[5])},d(t){t&&d(e)}}}function ba(l){let e,n,t,s,r,o,c=l[5]&&Is(l);return{c(){e=y("input"),t=M(),c&&c.c(),s=ie(),w(e,"type","text"),w(e,"class","address"),w(e,"spellcheck","false"),w(e,"placeholder",n=l[10].bech32s.acc+"1..."),Y(e,"invalid",l[5])},m(i,a){m(i,e,a),Ne(e,l[2]),m(i,t,a),c&&c.m(i,a),m(i,s,a),r||(o=te(e,"input",l[20]),r=!0)},p(i,a){a&1024&&n!==(n=i[10].bech32s.acc+"1...")&&w(e,"placeholder",n),a&4&&e.value!==i[2]&&Ne(e,i[2]),a&32&&Y(e,"invalid",i[5]),i[5]?c?c.p(i,a):(c=Is(i),c.c(),c.m(s.parentNode,s)):c&&(c.d(1),c=null)},d(i){i&&d(e),i&&d(t),c&&c.d(i),i&&d(s),r=!1,o()}}}function wa(l){let e,n,t;return{c(){e=y("textarea"),w(e,"placeholder","")},m(s,r){m(s,e,r),Ne(e,l[7]),n||(t=te(e,"input",l[21]),n=!0)},p(s,r){r&128&&Ne(e,s[7])},d(s){s&&d(e),n=!1,t()}}}function va(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,g,b,$,C,j,R,D,G,B=l[12]?"Save":"Add",L,O,U,E,q;return e=new Ee({props:{plain:!0,pops:!0,title:(l[12]?"Edit":"Add New")+" Contact"}}),t=new me({props:{key:"contact-pfp",name:"Profile Icon",$$slots:{default:[ma]},$$scope:{ctx:l}}}),r=new me({props:{key:"chain-family",name:"Chain Family",$$slots:{default:[ha]},$$scope:{ctx:l}}}),c=new me({props:{key:"contact-name",name:"Name",$$slots:{default:[ga]},$$scope:{ctx:l}}}),a=new me({props:{key:"contact-address",name:"Address",$$slots:{default:[ba]},$$scope:{ctx:l}}}),u=new me({props:{key:"contact-notes",name:"Secure Notes",$$slots:{default:[wa]},$$scope:{ctx:l}}}),$=new wl({props:{editable:!0,resourcePath:l[12]}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),T(c.$$.fragment),i=M(),T(a.$$.fragment),f=M(),T(u.$$.fragment),_=M(),p=y("hr"),h=M(),g=y("h3"),g.textContent=`${l[12]?"Edit":"Add"} Tags`,b=M(),T($.$$.fragment),C=M(),j=y("div"),R=y("button"),R.textContent="Back",D=M(),G=y("button"),L=H(B),w(G,"class","primary"),w(G,"readonly",O=!l[8]),w(j,"class","action-line")},m(z,P){A(e,z,P),m(z,n,P),A(t,z,P),m(z,s,P),A(r,z,P),m(z,o,P),A(c,z,P),m(z,i,P),A(a,z,P),m(z,f,P),A(u,z,P),m(z,_,P),m(z,p,P),m(z,h,P),m(z,g,P),m(z,b,P),A($,z,P),m(z,C,P),m(z,j,P),v(j,R),v(j,D),v(j,G),v(G,L),U=!0,E||(q=[te(R,"click",l[22]),te(G,"click",l[23])],E=!0)},p(z,P){const V={};P&268435459&&(V.$$scope={dirty:P,ctx:z}),t.$set(V);const se={};P&268435976&&(se.$$scope={dirty:P,ctx:z}),r.$set(se);const Z={};P&268435474&&(Z.$$scope={dirty:P,ctx:z}),c.$set(Z);const le={};P&268436516&&(le.$$scope={dirty:P,ctx:z}),a.$set(le);const ue={};P&268435584&&(ue.$$scope={dirty:P,ctx:z}),u.$set(ue),(!U||P&256&&O!==(O=!z[8]))&&w(G,"readonly",O)},i(z){U||(k(e.$$.fragment,z),k(t.$$.fragment,z),k(r.$$.fragment,z),k(c.$$.fragment,z),k(a.$$.fragment,z),k(u.$$.fragment,z),k($.$$.fragment,z),U=!0)},o(z){S(e.$$.fragment,z),S(t.$$.fragment,z),S(r.$$.fragment,z),S(c.$$.fragment,z),S(a.$$.fragment,z),S(u.$$.fragment,z),S($.$$.fragment,z),U=!1},d(z){I(e,z),z&&d(n),I(t,z),z&&d(s),I(r,z),z&&d(o),I(c,z),z&&d(i),I(a,z),z&&d(f),I(u,z),z&&d(_),z&&d(p),z&&d(h),z&&d(g),z&&d(b),I($,z),z&&d(C),z&&d(j),E=!1,rt(q)}}}function $a(l){let e,n,t={leaves:!0,$$slots:{default:[va]},$$scope:{ctx:l}};return e=new ve({props:t}),l[24](e),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,[r]){const o={};r&268437439&&(o.$$scope={dirty:r,ctx:s}),e.$set(o)},i(s){n||(k(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){l[24](null),I(e,s)}}}const Rs=([,l])=>l.bech32s.acc.hrp;function ka(l,e,n){let t,s,r,o,c,i,a,f;K(l,Zt,P=>n(9,a=P)),K(l,ze,P=>n(10,f=P));const u=he("page");let{contactRef:_=""}=e;const p=_||"";let h;p&&xe.getContact(p).then(P=>n(0,h=P));let g={};(async function(){n(3,g=Ir((await fe.read()).entries()))})();let b="",$="";function C(P,V=!1){const se=Rr.exec(P);if(!se)return V&&n(5,$="Invalid Bech32 address"),"";const[,Z,le]=se;let ue=null;for(const[,ce]of ke(H_CHAINS))if(ce.def.bechPrefix===Z){ue=ce;break}return V&&(ue?n(5,$=""):n(5,$=`No Cosmos SDK chains matched '${Z}'`)),n(16,s=le)}let j=0,R;async function D(){if(i)p?(Object.assign(h,{name:t,address:s,pfp:h.pfp,agentType:c,notes:o}),u.reset()):n(0,h={name:t,family:a,address:s,pfp:h.pfp,agentType:c,notes:o,space:"acc",origin:"user",chains:{}});else{n(15,j++,j);return}try{await xe.open(async P=>{await P.putContact(h)}),u.reset(),u.push({creator:Ol,props:{contactRef:p}})}catch{}}function G(P){t=P,n(1,t),n(0,h)}const B=([,P])=>a===P.family;function L(){t=this.value,n(1,t),n(0,h)}function O(){r=this.value,n(2,r),n(16,s),n(0,h)}function U(){o=this.value,n(7,o),n(0,h)}const E=()=>u.pop(),q=()=>D();function z(P){de[P?"unshift":"push"](()=>{R=P,n(6,R)})}return l.$$set=P=>{"contactRef"in P&&n(14,_=P.contactRef)},l.$$.update=()=>{l.$$.dirty&1&&n(1,t=h?.name||""),l.$$.dirty&1&&n(16,s=h?.address||""),l.$$.dirty&65536&&n(2,r=s?fe.bech32(s):""),l.$$.dirty&1&&n(7,o=h?.notes||""),l.$$.dirty&1&&(c=h?.agentType||_n.PERSON),l.$$.dirty&6&&n(8,i=!!(t&&C(r))),l.$$.dirty&32774&&j&&(n(4,b=t?"":"Name must not be empty"),C(r,!0))},[h,t,r,g,b,$,R,o,i,a,f,u,p,D,_,j,s,G,B,L,O,U,E,q,z]}class jl extends x{constructor(e){super(),ee(this,e,ka,$a,Q,{contactRef:14})}}var ya=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-more-vert-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-more-vert-fg" d="M12 8C13.1 8 14 7.1 14 6C14 4.9 13.1 4 12 4C10.9 4 10 4.9 10 6C10 7.1 10.9 8 12 8ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10ZM12 16C10.9 16 10 16.9 10 18C10 19.1 10.9 20 12 20C13.1 20 14 19.1 14 18C14 16.9 13.1 16 12 16Z" fill="#FFB61A"/>
</svg>
`,Sa=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M9 16h6v-6h4l-7-7-7 7h4v6zm3-10.17L14.17 8H13v6h-2V8H9.83L12 5.83zM5 18h14v2H5z"/>
</svg>`;function Ls(l,e,n){const t=l.slice();return t[13]=e[n][0],t[14]=e[n][1],t}function Os(l,e,n){const t=l.slice();return t[17]=e[n],t}function Ca(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Ma(l){let e,n,t=l[12],s=[];for(let o=0;o<t.length;o+=1)s[o]=Hs(Ls(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=ie()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c&63){t=o[12];let i;for(i=0;i<t.length;i+=1){const a=Ls(o,t,i);s[i]?(s[i].p(a,c),k(s[i],1)):(s[i]=Hs(a),s[i].c(),k(s[i],1),s[i].m(e.parentNode,e))}for(re(),i=t.length;i<s.length;i+=1)r(i);oe()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)k(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Se(s,o),o&&d(e)}}}function Na(l){let e,n,t;return e=new ot({props:{address:fe.bech32(l[14].address+"")}}),{c(){T(e.$$.fragment),n=M()},m(s,r){A(e,s,r),m(s,n,r),t=!0},p:N,i(s){t||(k(e.$$.fragment,s),t=!0)},o(s){S(e.$$.fragment,s),t=!1},d(s){I(e,s),s&&d(n)}}}function Ea(l){let e;return{c(){e=y("span"),w(e,"class","icon contact-type svelte-1l93agm"),w(e,"slot","prefix")},m(n,t){m(n,e,t),e.innerHTML=Sn},p:N,d(n){n&&d(e)}}}function Ta(l){let e,n,t;return e=new wl({props:{collapsed:!0,rootStyle:"margin: 0px;",resourcePath:l[13],$$slots:{prefix:[Ea]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment),n=M()},m(s,r){A(e,s,r),m(s,n,r),t=!0},p(s,r){const o={};r&1048576&&(o.$$scope={dirty:r,ctx:s}),e.$set(o)},i(s){t||(k(e.$$.fragment,s),t=!0)},o(s){S(e.$$.fragment,s),t=!1},d(s){I(e,s),s&&d(n)}}}function js(l){let e,n,t,s=l[5],r=[];for(let o=0;o<s.length;o+=1)r[o]=Ps(Os(l,s,o));return{c(){e=y("span");for(let o=0;o<r.length;o+=1)r[o].c();w(e,"class","overlay")},m(o,c){m(o,e,c);for(let i=0;i<r.length;i+=1)r[i].m(e,null);t=!0},p(o,c){if(l=o,c&36){s=l[5];let i;for(i=0;i<s.length;i+=1){const a=Os(l,s,i);r[i]?r[i].p(a,c):(r[i]=Ps(a),r[i].c(),r[i].m(e,null))}for(;i<r.length;i+=1)r[i].d(1);r.length=s.length}},i(o){t||(Ge(()=>{n||(n=qe(e,ge,{duration:300,easing:Tn},!0)),n.run(1)}),t=!0)},o(o){n||(n=qe(e,ge,{duration:300,easing:Tn},!1)),n.run(0),t=!1},d(o){o&&d(e),Se(r,o),o&&n&&n.end()}}}function Ps(l){let e,n,t=l[17].icon+"",s,r,o=l[17].label+"",c,i,a,f;function u(..._){return l[9](l[17],l[14],..._)}return{c(){e=y("div"),n=y("span"),s=M(),r=y("span"),c=H(o),i=M(),w(n,"class","icon"),w(r,"class","text"),w(e,"class","action")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=t,v(e,s),v(e,r),v(r,c),v(e,i),a||(f=te(e,"click",u),a=!0)},p(_,p){l=_},d(_){_&&d(e),a=!1,f()}}}function Aa(l){let e,n,t,s,r,o,c=l[0]===l[13]&&js(l);return{c(){e=y("span"),n=M(),c&&c.c(),t=M(),w(e,"class","icon more-menu"),Y(e,"active",l[0]===l[13])},m(i,a){m(i,e,a),e.innerHTML=ya,m(i,n,a),c&&c.m(i,a),m(i,t,a),s=!0,r||(o=te(e,"click",l[4](l[13],l[14])),r=!0)},p(i,a){l=i,a&5&&Y(e,"active",l[0]===l[13]),l[0]===l[13]?c?(c.p(l,a),a&1&&k(c,1)):(c=js(l),c.c(),k(c,1),c.m(t.parentNode,t)):c&&(re(),S(c,1,1,()=>{c=null}),oe())},i(i){s||(k(c),s=!0)},o(i){S(c),s=!1},d(i){i&&d(e),i&&d(n),c&&c.d(i),i&&d(t),r=!1,o()}}}function Hs(l){let e,n;function t(...s){return l[10](l[14],...s)}return e=new it({props:{resource:l[14],resourcePath:l[13],$$slots:{status:[Aa],tags:[Ta],detail:[Na]},$$scope:{ctx:l}}}),e.$on("click",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r&1048577&&(o.$$scope={dirty:r,ctx:l}),e.$set(o)},i(s){n||(k(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function Ia(l){let e;return{c(){e=H("Loading contacts...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Ra(l){let e,n,t={ctx:l,current:null,token:null,hasCatch:!1,pending:Ia,then:Ma,catch:Ca,value:12,blocks:[,,,]};return Ie(l[2](),t),{c(){e=y("div"),t.block.c(),w(e,"class","rows svelte-1l93agm")},m(s,r){m(s,e,r),t.block.m(e,t.anchor=null),t.mount=()=>e,t.anchor=null,n=!0},p(s,[r]){l=s,Re(t,l,r)},i(s){n||(k(t.block),n=!0)},o(s){for(let r=0;r<3;r+=1){const o=t.blocks[r];S(o)}n=!1},d(s){s&&d(e),t.block.d(),t.token=null,t=null}}}function La(l,e,n){let t;K(l,Zt,g=>n(11,t=g));const s=he("page");let{filter:r=g=>!0}=e,{sort:o=(g,b)=>g.name<b.name?-1:1}=e,{append:c=[]}=e;async function i(){return[...(await xe.read()).contacts(t)]}const a=new WeakMap;let f="";function u(g,b){return $=>{$.stopImmediatePropagation();const C=g;if(a.get($)?.cancelMenu===C){n(0,f="");return}n(0,f=C),window.addEventListener("click",()=>{a.set($,{cancelMenu:f}),n(0,f="")},{capture:!0,once:!0})}}const _=[{label:"Edit",icon:Lr,click(g){s.push({creator:jl,props:{contact:g}})}},{label:"Send",icon:Sa,click(g){s.push({creator:Pt,props:{recipient:fe.bech32(g.address)}})}},{label:"Delete",icon:Or,click(g){s.push({creator:Ll,props:{}})}}],p=(g,b,$)=>{$.stopPropagation(),g.click(b)},h=(g,b)=>{a.get(b)?.cancelMenu||s.push({creator:Ol,props:{contact:g}})};return l.$$set=g=>{"filter"in g&&n(6,r=g.filter),"sort"in g&&n(7,o=g.sort),"append"in g&&n(8,c=g.append)},[f,s,i,a,u,_,r,o,c,p,h]}class Cn extends x{constructor(e){super(),ee(this,e,La,Ra,Q,{filter:6,sort:7,append:8})}}function Oa(l){let e;return{c(){e=H("All")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function ja(l){let e;return{c(){e=H("Humans")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function Pa(l){let e;return{c(){e=H("Contracts")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function Ha(l){let e,n,t,s,r,o;return e=new ln({props:{$$slots:{default:[Oa]},$$scope:{ctx:l}}}),t=new ln({props:{$$slots:{default:[ja]},$$scope:{ctx:l}}}),r=new ln({props:{$$slots:{default:[Pa]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment)},m(c,i){A(e,c,i),m(c,n,i),A(t,c,i),m(c,s,i),A(r,c,i),o=!0},p(c,i){const a={};i&8&&(a.$$scope={dirty:i,ctx:c}),e.$set(a);const f={};i&8&&(f.$$scope={dirty:i,ctx:c}),t.$set(f);const u={};i&8&&(u.$$scope={dirty:i,ctx:c}),r.$set(u)},i(c){o||(k(e.$$.fragment,c),k(t.$$.fragment,c),k(r.$$.fragment,c),o=!0)},o(c){S(e.$$.fragment,c),S(t.$$.fragment,c),S(r.$$.fragment,c),o=!1},d(c){I(e,c),c&&d(n),I(t,c),c&&d(s),I(r,c)}}}function za(l){let e,n;return e=new Cn({}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Fa(l){let e,n;return e=new Cn({props:{filter:l[0]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Ba(l){let e,n;return e=new Cn({props:{filter:l[1]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Da(l){let e,n,t,s,r,o,c,i;return e=new Pr({props:{$$slots:{default:[Ha]},$$scope:{ctx:l}}}),t=new sn({props:{$$slots:{default:[za]},$$scope:{ctx:l}}}),r=new sn({props:{$$slots:{default:[Fa]},$$scope:{ctx:l}}}),c=new sn({props:{$$slots:{default:[Ba]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),T(c.$$.fragment)},m(a,f){A(e,a,f),m(a,n,f),A(t,a,f),m(a,s,f),A(r,a,f),m(a,o,f),A(c,a,f),i=!0},p(a,f){const u={};f&8&&(u.$$scope={dirty:f,ctx:a}),e.$set(u);const _={};f&8&&(_.$$scope={dirty:f,ctx:a}),t.$set(_);const p={};f&8&&(p.$$scope={dirty:f,ctx:a}),r.$set(p);const h={};f&8&&(h.$$scope={dirty:f,ctx:a}),c.$set(h)},i(a){i||(k(e.$$.fragment,a),k(t.$$.fragment,a),k(r.$$.fragment,a),k(c.$$.fragment,a),i=!0)},o(a){S(e.$$.fragment,a),S(t.$$.fragment,a),S(r.$$.fragment,a),S(c.$$.fragment,a),i=!1},d(a){I(e,a),a&&d(n),I(t,a),a&&d(s),I(r,a),a&&d(o),I(c,a)}}}function Va(l){let e,n,t,s,r,o;return e=new Ee({props:{search:!0,network:!0,account:!0}}),t=new jt({props:{title:"Contacts"}}),r=new jr({props:{$$slots:{default:[Da]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment)},m(c,i){A(e,c,i),m(c,n,i),A(t,c,i),m(c,s,i),A(r,c,i),o=!0},p(c,i){const a={};i&8&&(a.$$scope={dirty:i,ctx:c}),r.$set(a)},i(c){o||(k(e.$$.fragment,c),k(t.$$.fragment,c),k(r.$$.fragment,c),o=!0)},o(c){S(e.$$.fragment,c),S(t.$$.fragment,c),S(r.$$.fragment,c),o=!1},d(c){I(e,c),c&&d(n),I(t,c),c&&d(s),I(r,c)}}}function qa(l){let e,n;return e=new ve({props:{nav:!0,root:!0,classNames:"contacts",$$slots:{default:[Va]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&8&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Ua(l){return he("page"),[t=>_n.PERSON===t.agentType,t=>_n.CONTRACT===t.agentType]}class Xa extends x{constructor(e){super(),ee(this,e,Ua,qa,Q,{})}}function zs(l,e,n){const t=l.slice();return t[4]=e[n][0],t[5]=e[n][1],t}function Ka(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function Wa(l){let e,n,t=l[3],s=[];for(let o=0;o<t.length;o+=1)s[o]=Fs(zs(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=ie()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c&3){t=o[3];let i;for(i=0;i<t.length;i+=1){const a=zs(o,t,i);s[i]?(s[i].p(a,c),k(s[i],1)):(s[i]=Fs(a),s[i].c(),k(s[i],1),s[i].m(e.parentNode,e))}for(re(),i=t.length;i<s.length;i+=1)r(i);oe()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)k(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Se(s,o),o&&d(e)}}}function Fs(l){let e,n;return e=new it({props:{pfp:l[5].pfp,name:l[5].host,resourcePath:l[4],iconClass:"square pfp"}}),e.$on("click",l[2]),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Ga(l){let e;return{c(){e=H("Loading...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function Ya(l){let e,n,t,s,r,o;e=new Ee({props:{search:!0,network:!0,account:!0}}),t=new jt({props:{bare:!0,title:"Sites / Apps"}});let c={ctx:l,current:null,token:null,hasCatch:!1,pending:Ga,then:Wa,catch:Ka,value:3,blocks:[,,,]};return Ie(l[1](),c),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),r=y("div"),c.block.c(),w(r,"class","rows no-margin")},m(i,a){A(e,i,a),m(i,n,a),A(t,i,a),m(i,s,a),m(i,r,a),c.block.m(r,c.anchor=null),c.mount=()=>r,c.anchor=null,o=!0},p(i,a){l=i,Re(c,l,a)},i(i){o||(k(e.$$.fragment,i),k(t.$$.fragment,i),k(c.block),o=!0)},o(i){S(e.$$.fragment,i),S(t.$$.fragment,i);for(let a=0;a<3;a+=1){const f=c.blocks[a];S(f)}o=!1},d(i){I(e,i),i&&d(n),I(t,i),i&&d(s),i&&d(r),c.block.d(),c.token=null,c=null}}}function Za(l){let e,n;return e=new ve({props:{debug:"SitesHome",nav:!0,root:!0,$$slots:{default:[Ya]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&256&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Ja(l){const e=he("page");async function n(){return(await vl.read()).entries()}return[e,n,()=>{e.push({})}]}class Qa extends x{constructor(e){super(),ee(this,e,Ja,Za,Q,{})}}function xa(l){let e,n,t,s,r,o;e=new Ot({props:{resource:l[0],resourcePath:l[2],actions:l[3],$$slots:{subtitle:[nf],default:[tf]},$$scope:{ctx:l}}}),t=new me({props:{name:"gRPC-web URL",key:"grpc-web",$$slots:{default:[lf]},$$scope:{ctx:l}}});let c=l[0].rpcHost&&Bs(l);return{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),c&&c.c(),r=ie()},m(i,a){A(e,i,a),m(i,n,a),A(t,i,a),m(i,s,a),c&&c.m(i,a),m(i,r,a),o=!0},p(i,a){const f={};a&1&&(f.resource=i[0]),a&130&&(f.$$scope={dirty:a,ctx:i}),e.$set(f);const u={};a&129&&(u.$$scope={dirty:a,ctx:i}),t.$set(u),i[0].rpcHost?c?(c.p(i,a),a&1&&k(c,1)):(c=Bs(i),c.c(),k(c,1),c.m(r.parentNode,r)):c&&(re(),S(c,1,1,()=>{c=null}),oe())},i(i){o||(k(e.$$.fragment,i),k(t.$$.fragment,i),k(c),o=!0)},o(i){S(e.$$.fragment,i),S(t.$$.fragment,i),S(c),o=!1},d(i){I(e,i),i&&d(n),I(t,i),i&&d(s),c&&c.d(i),i&&d(r)}}}function ef(l){let e;return{c(){e=H("Loading network...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function tf(l){let e;return{c(){e=H("address")},m(n,t){m(n,e,t)},d(n){n&&d(e)}}}function nf(l){let e,n=l[1].name+"",t,s,r=l[1].id+"",o,c;return{c(){e=y("span"),t=H(n),s=H(" ("),o=H(r),c=H(")"),w(e,"class","font-family_mono svelte-yy3tbl")},m(i,a){m(i,e,a),v(e,t),v(e,s),v(e,o),v(e,c)},p(i,a){a&2&&n!==(n=i[1].name+"")&&J(t,n),a&2&&r!==(r=i[1].id+"")&&J(o,r)},d(i){i&&d(e)}}}function sf(l){let e=l[0].grpcWebUrl+"",n;return{c(){n=H(e)},m(t,s){m(t,n,s)},p(t,s){s&1&&e!==(e=t[0].grpcWebUrl+"")&&J(n,e)},d(t){t&&d(n)}}}function lf(l){let e,n;return e=new tn({props:{key:"grpc-web-value",$$slots:{default:[sf]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&129&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Bs(l){let e,n;return e=new me({props:{name:"RPC Host",key:"rpc",$$slots:{default:[of]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&129&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function rf(l){let e=l[0].rpcHost+"",n;return{c(){n=H(e)},m(t,s){m(t,n,s)},p(t,s){s&1&&e!==(e=t[0].rpcHost+"")&&J(n,e)},d(t){t&&d(n)}}}function of(l){let e,n;return e=new tn({props:{key:"rpc-value",$$slots:{default:[rf]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,s){const r={};s&129&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function cf(l){let e,n,t,s,r,o,c;e=new Ee({props:{pops:!0,search:!0,network:!0,account:!0}});const i=[ef,xa],a=[];function f(u,_){return u[1]?1:0}return t=f(l),s=a[t]=i[t](l),o=new Rl({}),{c(){T(e.$$.fragment),n=M(),s.c(),r=M(),T(o.$$.fragment)},m(u,_){A(e,u,_),m(u,n,_),a[t].m(u,_),m(u,r,_),A(o,u,_),c=!0},p(u,_){let p=t;t=f(u),t===p?a[t].p(u,_):(re(),S(a[p],1,1,()=>{a[p]=null}),oe(),s=a[t],s?s.p(u,_):(s=a[t]=i[t](u),s.c()),k(s,1),s.m(r.parentNode,r))},i(u){c||(k(e.$$.fragment,u),k(s),k(o.$$.fragment,u),c=!0)},o(u){S(e.$$.fragment,u),S(s),S(o.$$.fragment,u),c=!1},d(u){I(e,u),u&&d(n),a[t].d(u),u&&d(r),I(o,u)}}}function af(l){let e,n;return e=new ve({props:{nav:!0,slides:!0,$$slots:{default:[cf]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&131&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function ff(l,e,n){let t,{networkRef:s}=e;const r=s;let o;Nt.at(r).then(a=>n(0,o=a));let c;he("page");const i={};return l.$$set=a=>{"networkRef"in a&&n(4,s=a.networkRef)},l.$$.update=()=>{l.$$.dirty&1&&n(5,t=o?.chain),l.$$.dirty&32&&t&&fe.at(t).then(a=>n(1,c=a))},[o,c,r,i,s,t]}class uf extends x{constructor(e){super(),ee(this,e,ff,af,Q,{networkRef:4})}}function Ds(l,e,n){const t=l.slice();t[6]=e[n][0],t[7]=e[n][1];const s=t[0].at(t[7].chain);return t[8]=s,t}function _f(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function pf(l){let e,n,t=l[5],s=[];for(let o=0;o<t.length;o+=1)s[o]=Vs(Ds(l,t,o));const r=o=>S(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();e=ie()},m(o,c){for(let i=0;i<s.length;i+=1)s[i].m(o,c);m(o,e,c),n=!0},p(o,c){if(c&7){t=o[5];let i;for(i=0;i<t.length;i+=1){const a=Ds(o,t,i);s[i]?(s[i].p(a,c),k(s[i],1)):(s[i]=Vs(a),s[i].c(),k(s[i],1),s[i].m(e.parentNode,e))}for(re(),i=t.length;i<s.length;i+=1)r(i);oe()}},i(o){if(!n){for(let c=0;c<t.length;c+=1)k(s[c]);n=!0}},o(o){s=s.filter(Boolean);for(let c=0;c<s.length;c+=1)S(s[c]);n=!1},d(o){Se(s,o),o&&d(e)}}}function Vs(l){let e,n;function t(){return l[3](l[6])}return e=new it({props:{resource:l[7],resourcePath:l[6],iconClass:"square pfp",detail:`${l[8]?.name} (${l[8]?.id})`}}),e.$on("click",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r&1&&(o.detail=`${l[8]?.name} (${l[8]?.id})`),e.$set(o)},i(s){n||(k(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function mf(l){let e;return{c(){e=H("Loading...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function df(l){let e,n,t,s,r,o;e=new Ee({props:{search:!0,network:!0,account:!0}}),t=new jt({props:{bare:!0,title:"Networks"}});let c={ctx:l,current:null,token:null,hasCatch:!1,pending:mf,then:pf,catch:_f,value:5,blocks:[,,,]};return Ie(l[2](),c),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),r=y("div"),c.block.c(),w(r,"class","rows no-margin")},m(i,a){A(e,i,a),m(i,n,a),A(t,i,a),m(i,s,a),m(i,r,a),c.block.m(r,c.anchor=null),c.mount=()=>r,c.anchor=null,o=!0},p(i,a){l=i,Re(c,l,a)},i(i){o||(k(e.$$.fragment,i),k(t.$$.fragment,i),k(c.block),o=!0)},o(i){S(e.$$.fragment,i),S(t.$$.fragment,i);for(let a=0;a<3;a+=1){const f=c.blocks[a];S(f)}o=!1},d(i){I(e,i),i&&d(n),I(t,i),i&&d(s),i&&d(r),c.block.d(),c.token=null,c=null}}}function hf(l){let e,n;return e=new ve({props:{debug:"NetworksHome",nav:!0,root:!0,$$slots:{default:[df]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&2049&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function gf(l,e,n){const t=he("page");let s,r;async function o(){return n(0,[s,r]=await Promise.all([fe.read(),Nt.read()]),s),r.entries()}return[s,t,o,i=>{t.push({creator:uf,props:{networkRef:i}})}]}class bf extends x{constructor(e){super(),ee(this,e,gf,hf,Q,{})}}function wf(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function vf(l){let e,n;return e=new zr({props:{incidents:l[3]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function $f(l){let e;return{c(){e=H("Loading history...")},m(n,t){m(n,e,t)},p:N,i:N,o:N,d(n){n&&d(e)}}}function qs(l){let e,n,t={ctx:l,current:null,token:null,hasCatch:!1,pending:$f,then:vf,catch:wf,value:3,blocks:[,,,]};return Ie(l[1](),t),{c(){e=ie(),t.block.c()},m(s,r){m(s,e,r),t.block.m(s,t.anchor=r),t.mount=()=>e.parentNode,t.anchor=e,n=!0},p(s,r){l=s,Re(t,l,r)},i(s){n||(k(t.block),n=!0)},o(s){for(let r=0;r<3;r+=1){const o=t.blocks[r];S(o)}n=!1},d(s){s&&d(e),t.block.d(s),t.token=null,t=null}}}function kf(l){let e,n,t,s,r=l[0],o,c;e=new Ee({props:{search:!0,network:!0,account:!0}}),t=new jt({props:{title:"History",bare:!0}});let i=qs(l);return{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),i.c(),o=ie()},m(a,f){A(e,a,f),m(a,n,f),A(t,a,f),m(a,s,f),i.m(a,f),m(a,o,f),c=!0},p(a,f){f&1&&Q(r,r=a[0])?(re(),S(i,1,1,N),oe(),i=qs(a),i.c(),k(i,1),i.m(o.parentNode,o)):i.p(a,f)},i(a){c||(k(e.$$.fragment,a),k(t.$$.fragment,a),k(i),c=!0)},o(a){S(e.$$.fragment,a),S(t.$$.fragment,a),S(i),c=!1},d(a){I(e,a),a&&d(n),I(t,a),a&&d(s),a&&d(o),i.d(a)}}}function yf(l){let e,n;return e=new ve({props:{nav:!0,root:!0,$$slots:{default:[kf]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&17&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Sf(l,e,n){let t=1;const s=yn({updateStore({key:o}){o==="events"&&n(0,t++,t)}});Lt(()=>{s()});async function r(){return[...await Hr.filter()]}return[t,r]}class Cf extends x{constructor(e){super(),ee(this,e,Sf,yf,Q,{})}}var Qe=(l=>(l.DEFAULT="default",l.INIT="init",l.SEARCH="search",l.TOKENS="tokens",l.NFTS="nfts",l.CONTACTS="contacts",l.HISTORY="history",l.NETWORKS="networks",l.ACCOUNTS="accounts",l.TAGS="tags",l.SITES="sites",l))(Qe||{});const Pl={default:yl,init:Nl,tokens:Cc,contacts:Xa,history:Cf,networks:bf,accounts:Jc,sites:Qa};function Mf(l){let e,n,t,s,r,o;return{c(){e=Ct("svg"),n=Ct("style"),t=H(`.overscroll .bg {
  fill: var(--theme-color-text-light);
}
.overscroll .ring {
  fill: transparent;
  stroke: #c4c4c4;
}
.overscroll .progress {
  fill: transparent;
  stroke: black;
}
`),s=Ct("circle"),r=Ct("circle"),o=Ct("circle"),w(n,"lang","less"),w(s,"cx","16"),w(s,"cy","16"),w(s,"r","16"),w(s,"class","bg"),w(r,"cx","16"),w(r,"cy","16"),w(r,"r","10"),w(r,"class","ring"),w(r,"stroke-width","3"),He(r,"opacity","0.2"),w(o,"cx","16"),w(o,"cy","16"),w(o,"r","10"),w(o,"class","progress svelte-1u2i3kk"),w(o,"stroke-width","3"),He(o,"stroke-dashoffset",62-l[1]*62),w(e,"width","32"),w(e,"height","32"),w(e,"viewBox","0 0 32 32"),w(e,"xmlns","http://www.w3.org/2000/svg"),w(e,"class","overscroll svelte-1u2i3kk")},m(c,i){m(c,e,i),v(e,n),v(n,t),v(e,s),v(e,r),v(e,o),l[2](o)},p(c,[i]){i&2&&He(o,"stroke-dashoffset",62-c[1]*62)},i:N,o:N,d(c){c&&d(e),l[2](null)}}}function Nf(l,e,n){let t;K(l,Fr,o=>n(1,t=o));let s;function r(o){de[o?"unshift":"push"](()=>{s=o,n(0,s)})}return[s,t,r]}class Ef extends x{constructor(e){super(),ee(this,e,Nf,Mf,Q,{})}}function Tf(l){let e,n,t,s,r,o;var c=l[0];function i(a){return{}}return c&&(t=new c(i())),{c(){e=y("div"),n=y("section"),t&&T(t.$$.fragment),w(n,"class","screen content svelte-rtd9ps"),w(e,"class","popup svelte-rtd9ps"),Y(e,"showing",l[0]!==null)},m(a,f){m(a,e,f),v(e,n),t&&A(t,n,null),s=!0,r||(o=[te(n,"click",Af),te(e,"click",l[1])],r=!0)},p(a,[f]){if(c!==(c=a[0])){if(t){re();const u=t;S(u.$$.fragment,1,0,()=>{I(u,1)}),oe()}c?(t=new c(i()),T(t.$$.fragment),k(t.$$.fragment,1),A(t,n,null)):t=null}f&1&&Y(e,"showing",a[0]!==null)},i(a){s||(t&&k(t.$$.fragment,a),s=!0)},o(a){t&&S(t.$$.fragment,a),s=!1},d(a){a&&d(e),t&&I(t),r=!1,rt(o)}}}const Af=l=>l.stopPropagation();function If(l,e,n){let t;return K(l,An,r=>n(0,t=r)),[t,()=>be(An,t=null,t)]}class Rf extends x{constructor(e){super(),ee(this,e,If,Tf,Q,{})}}var Lf=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M12 16L18 10L16.59 8.59L12 13.17L7.41 8.59L6 10L12 16Z" />
</svg>
`,Of=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8Zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6ZM3 12a5.99 5.99 0 0 1 4-5.65V4.26C3.55 5.15 1 8.27 1 12c0 3.73 2.55 6.85 6 7.74v-2.09A5.99 5.99 0 0 1 3 12Z" />
</svg>
`,jf=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg,currentColor);" d="M13 3a9 9 0 0 0-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42A8.954 8.954 0 0 0 13 21a9 9 0 0 0 0-18Zm-1 5v5l4.25 2.52.77-1.28-3.52-2.09V8H12Z" />
</svg>
`,Pf=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<style type="text/css">
		.s2r-menu-fg {
			fill: var(--svg-color-fg, currentColor);
		}
	</style>
	<path class="s2r-menu-fg" d="M4 19h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1Zm0-6h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1ZM3 6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1Z" />
</svg>
`;function Us(l,e,n){const t=l.slice();return t[17]=e[n][0],t[18]=e[n][1],t}function Hf(l){let e,n,t,s=l[18].svg+"",r,o,c,i,a=l[18].label+"",f,u,_,p;function h(){return l[9](l[17])}return{c(){e=y("li"),n=y("div"),t=new $l(!1),r=M(),o=y("span"),c=M(),i=y("div"),f=H(a),u=M(),t.a=r,w(o,"class","notification svelte-1ylq4j5"),Y(o,"display_none",!l[1].includes(l[17])),w(n,"class","icon svelte-1ylq4j5"),w(i,"class","label svelte-1ylq4j5"),w(e,"class","button "+l[17]+" svelte-1ylq4j5"),Y(e,"active",l[0]===l[17])},m(g,b){m(g,e,b),v(e,n),t.m(s,n),v(n,r),v(n,o),v(e,c),v(e,i),v(i,f),v(e,u),_||(p=te(e,"click",h),_=!0)},p(g,b){l=g,b&18&&Y(o,"display_none",!l[1].includes(l[17])),b&17&&Y(e,"active",l[0]===l[17])},d(g){g&&d(e),_=!1,p()}}}function zf(l){let e,n,t,s=l[18].svg+"",r,o,c,i,a=l[18].label+"",f,u;return{c(){e=y("li"),n=y("div"),t=new $l(!1),r=M(),o=y("span"),c=M(),i=y("div"),f=H(a),u=M(),t.a=r,w(o,"class","notification svelte-1ylq4j5"),Y(o,"display_none",!l[1].includes(l[17])),w(n,"class","icon svelte-1ylq4j5"),w(i,"class","label svelte-1ylq4j5"),w(e,"class","button "+l[17]+" svelte-1ylq4j5"),He(e,"opacity","0.5"),Y(e,"active",l[0]===l[17])},m(_,p){m(_,e,p),v(e,n),t.m(s,n),v(n,r),v(n,o),v(e,c),v(e,i),v(i,f),v(e,u)},p(_,p){p&18&&Y(o,"display_none",!_[1].includes(_[17])),p&17&&Y(e,"active",_[0]===_[17])},d(_){_&&d(e)}}}function Xs(l){let e;function n(r,o){return r[18].disabled?zf:Hf}let s=n(l)(l);return{c(){s.c(),e=ie()},m(r,o){s.m(r,o),m(r,e,o)},p(r,o){s.p(r,o)},d(r){s.d(r),r&&d(e)}}}function Ff(l){let e,n,t,s,r,o,c=ke(l[4]),i=[];for(let a=0;a<c.length;a+=1)i[a]=Xs(Us(l,c,a));return{c(){e=y("nav"),n=y("div"),t=M(),s=y("ul");for(let a=0;a<i.length;a+=1)i[a].c();w(n,"class","collapse icon svelte-1ylq4j5"),w(s,"class","bar svelte-1ylq4j5"),w(e,"class","svelte-1ylq4j5"),Y(e,"collapsed",l[2]),Y(e,"visible",l[3])},m(a,f){m(a,e,f),v(e,n),n.innerHTML=Lf,v(e,t),v(e,s);for(let u=0;u<i.length;u+=1)i[u].m(s,null);r||(o=te(n,"click",l[8]),r=!0)},p(a,[f]){if(f&83){c=ke(a[4]);let u;for(u=0;u<c.length;u+=1){const _=Us(a,c,u);i[u]?i[u].p(_,f):(i[u]=Xs(_),i[u].c(),i[u].m(s,null))}for(;u<i.length;u+=1)i[u].d(1);i.length=c.length}f&4&&Y(e,"collapsed",a[2]),f&8&&Y(e,"visible",a[3])},i:N,o:N,d(a){a&&d(e),Se(i,a),r=!1,o()}}}function Bf(l,e,n){let t,s,r,o,c,i,a,f,u,_;K(l,kt,R=>n(10,t=R)),K(l,Vt,R=>n(11,s=R)),K(l,qt,R=>n(7,r=R)),K(l,wt,R=>n(12,o=R)),K(l,In,R=>n(13,c=R)),K(l,Rn,R=>n(14,i=R)),K(l,Ln,R=>n(15,a=R)),K(l,On,R=>n(1,f=R)),K(l,jn,R=>n(2,u=R)),K(l,Br,R=>n(3,_=R));const p={[Qe.TOKENS]:{svg:Of,label:"Tokens"},[Qe.CONTACTS]:{svg:Sn,label:"Contacts",disabled:!0},[Qe.HISTORY]:{svg:jf,label:"History"},menu:{svg:Pf,label:"Menu"}},h=new Map($n(Pl,(R,D)=>[D,R]));let g="";function b(){be(jn,u=!u,u)}function $(R){switch(be(On,f=f.filter(D=>R!==D),f),a&&be(Ln,a=!1,a),i&&be(Rn,i=!1,i),c&&be(In,c=!1,c),R){case"menu":{be(wt,o=!0,o);break}case g:{t.activePage.dom.scrollTo({top:0,left:0,behavior:"smooth"});break}case s.id:{const D=r.peak();D&&h.get(D.creator)===s.id?r.pop():r.reset();break}default:{t.activateThread(R);break}}}const C=()=>b(),j=R=>$(R);return l.$$.update=()=>{l.$$.dirty&128&&n(0,g=r&&h.get(r.creator)||"")},[g,f,u,_,p,b,$,r,C,j]}class Df extends x{constructor(e){super(),ee(this,e,Bf,Ff,Q,{})}}function lt(l){return Array.isArray?Array.isArray(l):Fl(l)==="[object Array]"}const Vf=1/0;function qf(l){if(typeof l=="string")return l;let e=l+"";return e=="0"&&1/l==-Vf?"-0":e}function Uf(l){return l==null?"":qf(l)}function Je(l){return typeof l=="string"}function Hl(l){return typeof l=="number"}function Xf(l){return l===!0||l===!1||Kf(l)&&Fl(l)=="[object Boolean]"}function zl(l){return typeof l=="object"}function Kf(l){return zl(l)&&l!==null}function Pe(l){return l!=null}function cn(l){return!l.trim().length}function Fl(l){return l==null?l===void 0?"[object Undefined]":"[object Null]":Object.prototype.toString.call(l)}const Wf="Incorrect 'index' type",Gf=l=>`Invalid value for key ${l}`,Yf=l=>`Pattern length exceeds max of ${l}.`,Zf=l=>`Missing ${l} property in key`,Jf=l=>`Property 'weight' in key '${l}' must be a positive integer`,Ks=Object.prototype.hasOwnProperty;class Qf{constructor(e){this._keys=[],this._keyMap={};let n=0;e.forEach(t=>{let s=Bl(t);n+=s.weight,this._keys.push(s),this._keyMap[s.id]=s,n+=s.weight}),this._keys.forEach(t=>{t.weight/=n})}get(e){return this._keyMap[e]}keys(){return this._keys}toJSON(){return JSON.stringify(this._keys)}}function Bl(l){let e=null,n=null,t=null,s=1,r=null;if(Je(l)||lt(l))t=l,e=Ws(l),n=pn(l);else{if(!Ks.call(l,"name"))throw new Error(Zf("name"));const o=l.name;if(t=o,Ks.call(l,"weight")&&(s=l.weight,s<=0))throw new Error(Jf(o));e=Ws(o),n=pn(o),r=l.getFn}return{path:e,id:n,weight:s,src:t,getFn:r}}function Ws(l){return lt(l)?l:l.split(".")}function pn(l){return lt(l)?l.join("."):l}function xf(l,e){let n=[],t=!1;const s=(r,o,c)=>{if(!!Pe(r))if(!o[c])n.push(r);else{let i=o[c];const a=r[i];if(!Pe(a))return;if(c===o.length-1&&(Je(a)||Hl(a)||Xf(a)))n.push(Uf(a));else if(lt(a)){t=!0;for(let f=0,u=a.length;f<u;f+=1)s(a[f],o,c+1)}else o.length&&s(a,o,c+1)}};return s(l,Je(e)?e.split("."):e,0),t?n:n[0]}const eu={includeMatches:!1,findAllMatches:!1,minMatchCharLength:1},tu={isCaseSensitive:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:(l,e)=>l.score===e.score?l.idx<e.idx?-1:1:l.score<e.score?-1:1},nu={location:0,threshold:.6,distance:100},su={useExtendedSearch:!1,getFn:xf,ignoreLocation:!1,ignoreFieldNorm:!1,fieldNormWeight:1};var ne={...tu,...eu,...nu,...su};const lu=/[^ ]+/g;function ru(l=1,e=3){const n=new Map,t=Math.pow(10,e);return{get(s){const r=s.match(lu).length;if(n.has(r))return n.get(r);const o=1/Math.pow(r,.5*l),c=parseFloat(Math.round(o*t)/t);return n.set(r,c),c},clear(){n.clear()}}}class Mn{constructor({getFn:e=ne.getFn,fieldNormWeight:n=ne.fieldNormWeight}={}){this.norm=ru(n,3),this.getFn=e,this.isCreated=!1,this.setIndexRecords()}setSources(e=[]){this.docs=e}setIndexRecords(e=[]){this.records=e}setKeys(e=[]){this.keys=e,this._keysMap={},e.forEach((n,t)=>{this._keysMap[n.id]=t})}create(){this.isCreated||!this.docs.length||(this.isCreated=!0,Je(this.docs[0])?this.docs.forEach((e,n)=>{this._addString(e,n)}):this.docs.forEach((e,n)=>{this._addObject(e,n)}),this.norm.clear())}add(e){const n=this.size();Je(e)?this._addString(e,n):this._addObject(e,n)}removeAt(e){this.records.splice(e,1);for(let n=e,t=this.size();n<t;n+=1)this.records[n].i-=1}getValueForItemAtKeyId(e,n){return e[this._keysMap[n]]}size(){return this.records.length}_addString(e,n){if(!Pe(e)||cn(e))return;let t={v:e,i:n,n:this.norm.get(e)};this.records.push(t)}_addObject(e,n){let t={i:n,$:{}};this.keys.forEach((s,r)=>{let o=s.getFn?s.getFn(e):this.getFn(e,s.path);if(!!Pe(o)){if(lt(o)){let c=[];const i=[{nestedArrIndex:-1,value:o}];for(;i.length;){const{nestedArrIndex:a,value:f}=i.pop();if(!!Pe(f))if(Je(f)&&!cn(f)){let u={v:f,i:a,n:this.norm.get(f)};c.push(u)}else lt(f)&&f.forEach((u,_)=>{i.push({nestedArrIndex:_,value:u})})}t.$[r]=c}else if(Je(o)&&!cn(o)){let c={v:o,n:this.norm.get(o)};t.$[r]=c}}}),this.records.push(t)}toJSON(){return{keys:this.keys,records:this.records}}}function Dl(l,e,{getFn:n=ne.getFn,fieldNormWeight:t=ne.fieldNormWeight}={}){const s=new Mn({getFn:n,fieldNormWeight:t});return s.setKeys(l.map(Bl)),s.setSources(e),s.create(),s}function ou(l,{getFn:e=ne.getFn,fieldNormWeight:n=ne.fieldNormWeight}={}){const{keys:t,records:s}=l,r=new Mn({getFn:e,fieldNormWeight:n});return r.setKeys(t),r.setIndexRecords(s),r}function Dt(l,{errors:e=0,currentLocation:n=0,expectedLocation:t=0,distance:s=ne.distance,ignoreLocation:r=ne.ignoreLocation}={}){const o=e/l.length;if(r)return o;const c=Math.abs(t-n);return s?o+c/s:c?1:o}function iu(l=[],e=ne.minMatchCharLength){let n=[],t=-1,s=-1,r=0;for(let o=l.length;r<o;r+=1){let c=l[r];c&&t===-1?t=r:!c&&t!==-1&&(s=r-1,s-t+1>=e&&n.push([t,s]),t=-1)}return l[r-1]&&r-t>=e&&n.push([t,r-1]),n}const pt=32;function cu(l,e,n,{location:t=ne.location,distance:s=ne.distance,threshold:r=ne.threshold,findAllMatches:o=ne.findAllMatches,minMatchCharLength:c=ne.minMatchCharLength,includeMatches:i=ne.includeMatches,ignoreLocation:a=ne.ignoreLocation}={}){if(e.length>pt)throw new Error(Yf(pt));const f=e.length,u=l.length,_=Math.max(0,Math.min(t,u));let p=r,h=_;const g=c>1||i,b=g?Array(u):[];let $;for(;($=l.indexOf(e,h))>-1;){let B=Dt(e,{currentLocation:$,expectedLocation:_,distance:s,ignoreLocation:a});if(p=Math.min(B,p),h=$+f,g){let L=0;for(;L<f;)b[$+L]=1,L+=1}}h=-1;let C=[],j=1,R=f+u;const D=1<<f-1;for(let B=0;B<f;B+=1){let L=0,O=R;for(;L<O;)Dt(e,{errors:B,currentLocation:_+O,expectedLocation:_,distance:s,ignoreLocation:a})<=p?L=O:R=O,O=Math.floor((R-L)/2+L);R=O;let U=Math.max(1,_-O+1),E=o?u:Math.min(_+O,u)+f,q=Array(E+2);q[E+1]=(1<<B)-1;for(let P=E;P>=U;P-=1){let V=P-1,se=n[l.charAt(V)];if(g&&(b[V]=+!!se),q[P]=(q[P+1]<<1|1)&se,B&&(q[P]|=(C[P+1]|C[P])<<1|1|C[P+1]),q[P]&D&&(j=Dt(e,{errors:B,currentLocation:V,expectedLocation:_,distance:s,ignoreLocation:a}),j<=p)){if(p=j,h=V,h<=_)break;U=Math.max(1,2*_-h)}}if(Dt(e,{errors:B+1,currentLocation:_,expectedLocation:_,distance:s,ignoreLocation:a})>p)break;C=q}const G={isMatch:h>=0,score:Math.max(.001,j)};if(g){const B=iu(b,c);B.length?i&&(G.indices=B):G.isMatch=!1}return G}function au(l){let e={};for(let n=0,t=l.length;n<t;n+=1){const s=l.charAt(n);e[s]=(e[s]||0)|1<<t-n-1}return e}class Vl{constructor(e,{location:n=ne.location,threshold:t=ne.threshold,distance:s=ne.distance,includeMatches:r=ne.includeMatches,findAllMatches:o=ne.findAllMatches,minMatchCharLength:c=ne.minMatchCharLength,isCaseSensitive:i=ne.isCaseSensitive,ignoreLocation:a=ne.ignoreLocation}={}){if(this.options={location:n,threshold:t,distance:s,includeMatches:r,findAllMatches:o,minMatchCharLength:c,isCaseSensitive:i,ignoreLocation:a},this.pattern=i?e:e.toLowerCase(),this.chunks=[],!this.pattern.length)return;const f=(_,p)=>{this.chunks.push({pattern:_,alphabet:au(_),startIndex:p})},u=this.pattern.length;if(u>pt){let _=0;const p=u%pt,h=u-p;for(;_<h;)f(this.pattern.substr(_,pt),_),_+=pt;if(p){const g=u-pt;f(this.pattern.substr(g),g)}}else f(this.pattern,0)}searchIn(e){const{isCaseSensitive:n,includeMatches:t}=this.options;if(n||(e=e.toLowerCase()),this.pattern===e){let h={isMatch:!0,score:0};return t&&(h.indices=[[0,e.length-1]]),h}const{location:s,distance:r,threshold:o,findAllMatches:c,minMatchCharLength:i,ignoreLocation:a}=this.options;let f=[],u=0,_=!1;this.chunks.forEach(({pattern:h,alphabet:g,startIndex:b})=>{const{isMatch:$,score:C,indices:j}=cu(e,h,g,{location:s+b,distance:r,threshold:o,findAllMatches:c,minMatchCharLength:i,includeMatches:t,ignoreLocation:a});$&&(_=!0),u+=C,$&&j&&(f=[...f,...j])});let p={isMatch:_,score:_?u/this.chunks.length:1};return _&&t&&(p.indices=f),p}}class ft{constructor(e){this.pattern=e}static isMultiMatch(e){return Gs(e,this.multiRegex)}static isSingleMatch(e){return Gs(e,this.singleRegex)}search(){}}function Gs(l,e){const n=l.match(e);return n?n[1]:null}class fu extends ft{constructor(e){super(e)}static get type(){return"exact"}static get multiRegex(){return/^="(.*)"$/}static get singleRegex(){return/^=(.*)$/}search(e){const n=e===this.pattern;return{isMatch:n,score:n?0:1,indices:[0,this.pattern.length-1]}}}class uu extends ft{constructor(e){super(e)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.*)"$/}static get singleRegex(){return/^!(.*)$/}search(e){const t=e.indexOf(this.pattern)===-1;return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}class _u extends ft{constructor(e){super(e)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.*)"$/}static get singleRegex(){return/^\^(.*)$/}search(e){const n=e.startsWith(this.pattern);return{isMatch:n,score:n?0:1,indices:[0,this.pattern.length-1]}}}class pu extends ft{constructor(e){super(e)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.*)"$/}static get singleRegex(){return/^!\^(.*)$/}search(e){const n=!e.startsWith(this.pattern);return{isMatch:n,score:n?0:1,indices:[0,e.length-1]}}}class mu extends ft{constructor(e){super(e)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.*)"\$$/}static get singleRegex(){return/^(.*)\$$/}search(e){const n=e.endsWith(this.pattern);return{isMatch:n,score:n?0:1,indices:[e.length-this.pattern.length,e.length-1]}}}class du extends ft{constructor(e){super(e)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.*)"\$$/}static get singleRegex(){return/^!(.*)\$$/}search(e){const n=!e.endsWith(this.pattern);return{isMatch:n,score:n?0:1,indices:[0,e.length-1]}}}class ql extends ft{constructor(e,{location:n=ne.location,threshold:t=ne.threshold,distance:s=ne.distance,includeMatches:r=ne.includeMatches,findAllMatches:o=ne.findAllMatches,minMatchCharLength:c=ne.minMatchCharLength,isCaseSensitive:i=ne.isCaseSensitive,ignoreLocation:a=ne.ignoreLocation}={}){super(e),this._bitapSearch=new Vl(e,{location:n,threshold:t,distance:s,includeMatches:r,findAllMatches:o,minMatchCharLength:c,isCaseSensitive:i,ignoreLocation:a})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.*)"$/}static get singleRegex(){return/^(.*)$/}search(e){return this._bitapSearch.searchIn(e)}}class Ul extends ft{constructor(e){super(e)}static get type(){return"include"}static get multiRegex(){return/^'"(.*)"$/}static get singleRegex(){return/^'(.*)$/}search(e){let n=0,t;const s=[],r=this.pattern.length;for(;(t=e.indexOf(this.pattern,n))>-1;)n=t+r,s.push([t,n-1]);const o=!!s.length;return{isMatch:o,score:o?0:1,indices:s}}}const mn=[fu,Ul,_u,pu,du,mu,uu,ql],Ys=mn.length,hu=/ +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,gu="|";function bu(l,e={}){return l.split(gu).map(n=>{let t=n.trim().split(hu).filter(r=>r&&!!r.trim()),s=[];for(let r=0,o=t.length;r<o;r+=1){const c=t[r];let i=!1,a=-1;for(;!i&&++a<Ys;){const f=mn[a];let u=f.isMultiMatch(c);u&&(s.push(new f(u,e)),i=!0)}if(!i)for(a=-1;++a<Ys;){const f=mn[a];let u=f.isSingleMatch(c);if(u){s.push(new f(u,e));break}}}return s})}const wu=new Set([ql.type,Ul.type]);class vu{constructor(e,{isCaseSensitive:n=ne.isCaseSensitive,includeMatches:t=ne.includeMatches,minMatchCharLength:s=ne.minMatchCharLength,ignoreLocation:r=ne.ignoreLocation,findAllMatches:o=ne.findAllMatches,location:c=ne.location,threshold:i=ne.threshold,distance:a=ne.distance}={}){this.query=null,this.options={isCaseSensitive:n,includeMatches:t,minMatchCharLength:s,findAllMatches:o,ignoreLocation:r,location:c,threshold:i,distance:a},this.pattern=n?e:e.toLowerCase(),this.query=bu(this.pattern,this.options)}static condition(e,n){return n.useExtendedSearch}searchIn(e){const n=this.query;if(!n)return{isMatch:!1,score:1};const{includeMatches:t,isCaseSensitive:s}=this.options;e=s?e:e.toLowerCase();let r=0,o=[],c=0;for(let i=0,a=n.length;i<a;i+=1){const f=n[i];o.length=0,r=0;for(let u=0,_=f.length;u<_;u+=1){const p=f[u],{isMatch:h,indices:g,score:b}=p.search(e);if(h){if(r+=1,c+=b,t){const $=p.constructor.type;wu.has($)?o=[...o,...g]:o.push(g)}}else{c=0,r=0,o.length=0;break}}if(r){let u={isMatch:!0,score:c/r};return t&&(u.indices=o),u}}return{isMatch:!1,score:1}}}const dn=[];function $u(...l){dn.push(...l)}function hn(l,e){for(let n=0,t=dn.length;n<t;n+=1){let s=dn[n];if(s.condition(l,e))return new s(l,e)}return new Vl(l,e)}const Yt={AND:"$and",OR:"$or"},gn={PATH:"$path",PATTERN:"$val"},bn=l=>!!(l[Yt.AND]||l[Yt.OR]),ku=l=>!!l[gn.PATH],yu=l=>!lt(l)&&zl(l)&&!bn(l),Zs=l=>({[Yt.AND]:Object.keys(l).map(e=>({[e]:l[e]}))});function Xl(l,e,{auto:n=!0}={}){const t=s=>{let r=Object.keys(s);const o=ku(s);if(!o&&r.length>1&&!bn(s))return t(Zs(s));if(yu(s)){const i=o?s[gn.PATH]:r[0],a=o?s[gn.PATTERN]:s[i];if(!Je(a))throw new Error(Gf(i));const f={keyId:pn(i),pattern:a};return n&&(f.searcher=hn(a,e)),f}let c={children:[],operator:r[0]};return r.forEach(i=>{const a=s[i];lt(a)&&a.forEach(f=>{c.children.push(t(f))})}),c};return bn(l)||(l=Zs(l)),t(l)}function Su(l,{ignoreFieldNorm:e=ne.ignoreFieldNorm}){l.forEach(n=>{let t=1;n.matches.forEach(({key:s,norm:r,score:o})=>{const c=s?s.weight:null;t*=Math.pow(o===0&&c?Number.EPSILON:o,(c||1)*(e?1:r))}),n.score=t})}function Cu(l,e){const n=l.matches;e.matches=[],Pe(n)&&n.forEach(t=>{if(!Pe(t.indices)||!t.indices.length)return;const{indices:s,value:r}=t;let o={indices:s,value:r};t.key&&(o.key=t.key.src),t.idx>-1&&(o.refIndex=t.idx),e.matches.push(o)})}function Mu(l,e){e.score=l.score}function Nu(l,e,{includeMatches:n=ne.includeMatches,includeScore:t=ne.includeScore}={}){const s=[];return n&&s.push(Cu),t&&s.push(Mu),l.map(r=>{const{idx:o}=r,c={item:e[o],refIndex:o};return s.length&&s.forEach(i=>{i(r,c)}),c})}class yt{constructor(e,n={},t){this.options={...ne,...n},this.options.useExtendedSearch,this._keyStore=new Qf(this.options.keys),this.setCollection(e,t)}setCollection(e,n){if(this._docs=e,n&&!(n instanceof Mn))throw new Error(Wf);this._myIndex=n||Dl(this.options.keys,this._docs,{getFn:this.options.getFn,fieldNormWeight:this.options.fieldNormWeight})}add(e){!Pe(e)||(this._docs.push(e),this._myIndex.add(e))}remove(e=()=>!1){const n=[];for(let t=0,s=this._docs.length;t<s;t+=1){const r=this._docs[t];e(r,t)&&(this.removeAt(t),t-=1,s-=1,n.push(r))}return n}removeAt(e){this._docs.splice(e,1),this._myIndex.removeAt(e)}getIndex(){return this._myIndex}search(e,{limit:n=-1}={}){const{includeMatches:t,includeScore:s,shouldSort:r,sortFn:o,ignoreFieldNorm:c}=this.options;let i=Je(e)?Je(this._docs[0])?this._searchStringList(e):this._searchObjectList(e):this._searchLogical(e);return Su(i,{ignoreFieldNorm:c}),r&&i.sort(o),Hl(n)&&n>-1&&(i=i.slice(0,n)),Nu(i,this._docs,{includeMatches:t,includeScore:s})}_searchStringList(e){const n=hn(e,this.options),{records:t}=this._myIndex,s=[];return t.forEach(({v:r,i:o,n:c})=>{if(!Pe(r))return;const{isMatch:i,score:a,indices:f}=n.searchIn(r);i&&s.push({item:r,idx:o,matches:[{score:a,value:r,norm:c,indices:f}]})}),s}_searchLogical(e){const n=Xl(e,this.options),t=(c,i,a)=>{if(!c.children){const{keyId:u,searcher:_}=c,p=this._findMatches({key:this._keyStore.get(u),value:this._myIndex.getValueForItemAtKeyId(i,u),searcher:_});return p&&p.length?[{idx:a,item:i,matches:p}]:[]}const f=[];for(let u=0,_=c.children.length;u<_;u+=1){const p=c.children[u],h=t(p,i,a);if(h.length)f.push(...h);else if(c.operator===Yt.AND)return[]}return f},s=this._myIndex.records,r={},o=[];return s.forEach(({$:c,i})=>{if(Pe(c)){let a=t(n,c,i);a.length&&(r[i]||(r[i]={idx:i,item:c,matches:[]},o.push(r[i])),a.forEach(({matches:f})=>{r[i].matches.push(...f)}))}}),o}_searchObjectList(e){const n=hn(e,this.options),{keys:t,records:s}=this._myIndex,r=[];return s.forEach(({$:o,i:c})=>{if(!Pe(o))return;let i=[];t.forEach((a,f)=>{i.push(...this._findMatches({key:a,value:o[f],searcher:n}))}),i.length&&r.push({idx:c,item:o,matches:i})}),r}_findMatches({key:e,value:n,searcher:t}){if(!Pe(n))return[];let s=[];if(lt(n))n.forEach(({v:r,i:o,n:c})=>{if(!Pe(r))return;const{isMatch:i,score:a,indices:f}=t.searchIn(r);i&&s.push({score:a,key:e,value:r,idx:o,norm:c,indices:f})});else{const{v:r,n:o}=n,{isMatch:c,score:i,indices:a}=t.searchIn(r);c&&s.push({score:i,key:e,value:r,norm:o,indices:a})}return s}}yt.version="6.6.2";yt.createIndex=Dl;yt.parseIndex=ou;yt.config=ne;yt.parseQuery=Xl;$u(vu);function Js(l,e,n){const t=l.slice();return t[9]=e[n],t}function Qs(l){let e,n;return e=new GenericRow({props:{item:l[9]}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p:N,i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function Eu(l){let e,n,t,s,r,o,c;const i=[{network:!0},{account:!0},{search:!0},{isSearchScreen:!0},l[2]||{}];let a={};for(let p=0;p<i.length;p+=1)a=gt(a,i[p]);e=new Ee({props:a}),e.$on("search",l[5]);let f=l[3],u=[];for(let p=0;p<f.length;p+=1)u[p]=Qs(Js(l,f,p));const _=p=>S(u[p],1,1,()=>{u[p]=null});return{c(){T(e.$$.fragment),n=M(),t=y("p"),t.innerHTML=`<span style="color:var(--theme-color-caution);">Disclaimer:</span>
			This temporary search interface does not represent the look and function of the actual search interface currently under development for beta.`,s=M(),r=y("div");for(let p=0;p<u.length;p+=1)u[p].c();o=ie(),He(t,"font-size","12px"),w(r,"class","results no-margin")},m(p,h){A(e,p,h),m(p,n,h),m(p,t,h),m(p,s,h),m(p,r,h);for(let g=0;g<u.length;g+=1)u[g].m(r,null);v(r,o),l[6](r),c=!0},p(p,h){const g=h&4?un(i,[i[0],i[1],i[2],i[3],qr(p[2]||{})]):{};if(e.$set(g),h&8){f=p[3];let b;for(b=0;b<f.length;b+=1){const $=Js(p,f,b);u[b]?(u[b].p($,h),k(u[b],1)):(u[b]=Qs($),u[b].c(),k(u[b],1),u[b].m(o.parentNode,o))}for(re(),b=f.length;b<u.length;b+=1)_(b);oe()}},i(p){if(!c){k(e.$$.fragment,p);for(let h=0;h<f.length;h+=1)k(u[h]);c=!0}},o(p){S(e.$$.fragment,p),u=u.filter(Boolean);for(let h=0;h<u.length;h+=1)S(u[h]);c=!1},d(p){I(e,p),p&&d(n),p&&d(t),p&&d(s),p&&d(r),Se(u,p),l[6](null)}}}function Tu(l){let e,n,t;return n=new ve({props:{debug:"Search",root:!0,$$slots:{default:[Eu]},$$scope:{ctx:l}}}),{c(){e=y("div"),T(n.$$.fragment),w(e,"class","search svelte-5f3tva"),Y(e,"display_none",!l[0])},m(s,r){m(s,e,r),A(n,e,null),t=!0},p(s,[r]){const o={};r&4102&&(o.$$scope={dirty:r,ctx:s}),n.$set(o),r&1&&Y(e,"display_none",!s[0])},i(s){t||(k(n.$$.fragment,s),t=!0)},o(s){S(n.$$.fragment,s),t=!1},d(s){s&&d(e),I(n)}}}var ct;(function(l){l.UNKNOWN="unknown",l.FAMILY="family",l.CHAIN="chain",l.NETWORK="network",l.ACCOUNT="account",l.CONTACT="contact",l.CONTRACT="contract",l.TOKEN="token",l.HOLDING="holding",l.APP="app",l.COIN="coin",l.TAG="tag",l.ICON="icon",l.IBCT="ibct",l.SNIP721="snip721",l.TXN="txn",l.OTHER="other"})(ct||(ct={}));function Au(l,e,n){let t,s;K(l,Dr,_=>n(0,t=_)),K(l,Vr,_=>n(2,s=_));let r;const o=[];let c=[];const i=(_,p)=>new yt(_,{includeScore:!0,includeMatches:!0,keys:["label",...p.map(h=>`details.${h}`)]});(async()=>{const _=await fe.read();c=[(()=>i(_.entries().map(([p,h])=>({class:ct.CHAIN,name:h.name,resourcePath:p,resource:h,details:{name:h.name,id:h.id}})),["id"]))(),(()=>i(_.entries().flatMap(([p,h])=>$n(h.coins,(g,b)=>({class:ct.COIN,name:Gt(b.extra?.coingecko_id||"Unknown"),postname:g,resourcePath:`${p}/coin.${g}`,resource:{name:Gt(b.extra?.coingecko_id||"Unknown"),pfp:h.pfp,...b},details:{symbol:g,denom:b.denom,coingecko:b.extra?.coingecko_id||""}}))),["symbol","denom"]))(),...await Promise.all([(async()=>{const p=await st.read();return i(p.entries().map(([h,g])=>{const b=[],$=new Set;for(const[,C]of _)$.add(fe.addressFor(g.pubkey,C));return b.push(...$),{class:ct.ACCOUNT,name:g.name,resourcePath:h,resource:g,details:{name:g.name,addresses:b}}}),["addresses"])})(),(async()=>{const p=await xe.read();return i([...p.contacts()].map(([h,g])=>({class:ct.CONTACT,name:g.name,resourcePath:h,resource:g,details:{name:g.name,notes:g.notes,addresses:[..._.inFamily(g.family)].map(([,b])=>fe.bech32(g.address,b))}})),["notes"])})(),(async()=>{const p=await vl.read();return i(p.entries().map(([h,g])=>({class:ct.APP,name:g.host,resourcePath:h,resource:g,details:{host:g.host}})),[])})(),(async()=>{const p=[];for(const[,h]of _.entries())for(const[g,b]of ke(await Ae.readFungibleTokens(h)))for(const[$,C]of ke(b))p.push({class:ct.TOKEN,name:C.name,resourcePath:$,resource:C,details:{spec:g,name:C.name,symbol:C.symbol,bech32:C.bech32,codehash:C.hash}});return i(p,["spec","symbol","bech32","codehash"])})()])]})();function a(_){const p=[],h=[];let g=0;for(const b of c){const $=b.search(_);$.length&&(g+=h.length,h.push(...$),p.push({top:$[0].score,hits:$}))}h.sort((b,$)=>$.score-b.score),n(1,r.innerHTML="",r),console.log(h);for(const b of h)new it({target:r,props:{...b.item,pfpDim:32}})}const f=_=>a(_.detail);function u(_){de[_?"unshift":"push"](()=>{r=_,n(1,r)})}return l.$$.update=()=>{l.$$.dirty&1&&t&&a(t)},[t,r,s,o,a,f,u]}class Iu extends x{constructor(e){super(),ee(this,e,Au,Tu,Q,{})}}function Ru(l){let e,n,t,s,r,o=(l[0][0]||l[0][1])+"",c,i,a=l[0][1]+"",f;return{c(){e=y("div"),n=y("div"),t=M(),s=y("div"),r=H("Step "),c=H(o),i=H(" of "),f=H(a),w(n,"class","bar svelte-1hwu1hf"),He(n,"width",l[1]+"%"),w(e,"class","progress svelte-1hwu1hf"),Y(e,"visible",l[0][0]>0),w(s,"class","step svelte-1hwu1hf"),Y(s,"visible",l[0][0]>0)},m(u,_){m(u,e,_),v(e,n),m(u,t,_),m(u,s,_),v(s,r),v(s,c),v(s,i),v(s,f)},p(u,[_]){_&2&&He(n,"width",u[1]+"%"),_&1&&Y(e,"visible",u[0][0]>0),_&1&&o!==(o=(u[0][0]||u[0][1])+"")&&J(c,o),_&1&&a!==(a=u[0][1]+"")&&J(f,a),_&1&&Y(s,"visible",u[0][0]>0)},i:N,o:N,d(u){u&&d(e),u&&d(t),u&&d(s)}}}function Lu(l,e,n){let t,s;return K(l,Ur,r=>n(0,s=r)),l.$$.update=()=>{l.$$.dirty&1&&n(1,t=s[0]/s[1]*100)},[s,t]}class Ou extends x{constructor(e){super(),ee(this,e,Lu,Ru,Q,{})}}var ju=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="m18 16 4-4-4-4v3h-5.06A8.974 8.974 0 0 0 8 3.95 3.005 3.005 0 0 0 5 1C3.34 1 2 2.34 2 4s1.34 3 3 3c.95 0 1.78-.45 2.33-1.14C9.23 6.9 10.6 8.77 10.92 11h-3.1C7.4 9.84 6.3 9 5 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c1.3 0 2.4-.84 2.82-2h3.1c-.32 2.23-1.69 4.1-3.58 5.14C6.78 17.45 5.95 17 5 17c-1.66 0-3 1.34-3 3s1.34 3 3 3a2.99 2.99 0 0 0 2.99-2.95A8.974 8.974 0 0 0 12.93 13H18v3z"/>
</svg>`,Pu=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33A7.95 7.95 0 0 1 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z"/>
</svg>`,Hu=`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<path style="fill: var(--svg-color-fg, currentColor);" d="M18 4v16H6V4h12m0-2H6c-1.1 0-2 .9-2 2v18h16V4c0-1.1-.9-2-2-2zm-2.5 8.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5S17 12.83 17 12s-.67-1.5-1.5-1.5z"/>
</svg>`;function xs(l,e,n){const t=l.slice();return t[10]=e[n],t}function el(l,e,n){const t=l.slice();return t[10]=e[n],t}function tl(l){let e,n,t=l[10].icon+"",s,r,o=l[10].label+"",c,i,a,f;function u(){return l[5](l[10])}return{c(){e=y("li"),n=y("span"),s=M(),r=y("span"),c=H(o),i=M(),w(n,"class","icon svelte-fhv297"),w(r,"class","text svelte-fhv297"),w(e,"class","svelte-fhv297")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=t,v(e,s),v(e,r),v(r,c),v(e,i),a||(f=te(e,"click",u),a=!0)},p(_,p){l=_},d(_){_&&d(e),a=!1,f()}}}function nl(l){let e,n,t=l[10].icon+"",s,r,o=l[10].label+"",c,i,a,f;function u(){return l[6](l[10])}return{c(){e=y("li"),n=y("span"),s=M(),r=y("span"),c=H(o),i=M(),w(n,"class","icon svelte-fhv297"),w(r,"class","text svelte-fhv297"),w(e,"class"," svelte-fhv297")},m(_,p){m(_,e,p),v(e,n),n.innerHTML=t,v(e,s),v(e,r),v(r,c),v(e,i),a||(f=te(e,"click",u),a=!0)},p(_,p){l=_},d(_){_&&d(e),a=!1,f()}}}function zu(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,g,b,$=l[2],C=[];for(let D=0;D<$.length;D+=1)C[D]=tl(el(l,$,D));let j=l[1],R=[];for(let D=0;D<j.length;D+=1)R[D]=nl(xs(l,j,D));return{c(){e=y("div"),n=y("div"),t=M(),s=y("div"),r=y("div"),o=M(),c=y("div"),i=y("div"),a=y("ul");for(let D=0;D<C.length;D+=1)C[D].c();f=M(),u=y("hr"),_=M(),p=y("div"),h=y("ul");for(let D=0;D<R.length;D+=1)R[D].c();w(n,"class","backdrop svelte-fhv297"),w(r,"class","close icon svelte-fhv297"),w(a,"class","session svelte-fhv297"),w(u,"class","svelte-fhv297"),w(i,"class","top svelte-fhv297"),w(h,"class","items svelte-fhv297"),w(p,"class","main svelte-fhv297"),w(c,"class","menu svelte-fhv297"),w(s,"class","bar svelte-fhv297"),w(e,"class","side-menu svelte-fhv297"),Y(e,"collapsed",!l[0])},m(D,G){m(D,e,G),v(e,n),v(e,t),v(e,s),v(s,r),r.innerHTML=Xr,v(s,o),v(s,c),v(c,i),v(i,a);for(let B=0;B<C.length;B+=1)C[B].m(a,null);v(i,f),v(i,u),v(c,_),v(c,p),v(p,h);for(let B=0;B<R.length;B+=1)R[B].m(h,null);g||(b=[te(n,"click",l[3]),te(r,"click",l[4])],g=!0)},p(D,[G]){if(G&4){$=D[2];let B;for(B=0;B<$.length;B+=1){const L=el(D,$,B);C[B]?C[B].p(L,G):(C[B]=tl(L),C[B].c(),C[B].m(a,null))}for(;B<C.length;B+=1)C[B].d(1);C.length=$.length}if(G&2){j=D[1];let B;for(B=0;B<j.length;B+=1){const L=xs(D,j,B);R[B]?R[B].p(L,G):(R[B]=nl(L),R[B].c(),R[B].m(h,null))}for(;B<R.length;B+=1)R[B].d(1);R.length=j.length}G&1&&Y(e,"collapsed",!D[0])},i:N,o:N,d(D){D&&d(e),Se(C,D),Se(R,D),g=!1,rt(b)}}}function Fu(l,e,n){let t,s;K(l,kt,_=>n(7,t=_)),K(l,wt,_=>n(0,s=_)),he("page");function r(_){be(wt,s=!1,s),_===t.activeThread.id?t.activeThread.reset():t.activateThread(_)}return[s,[{label:"Accounts",icon:Pu,click(){r(Qe.ACCOUNTS)}},{label:"Networks",icon:ju,click(){r(Qe.NETWORKS)}}],[{label:"Log out",icon:Hu,async click(){await Kr(),globalThis.close()}}],()=>be(wt,s=!1,s),()=>be(wt,s=!1,s),_=>_.click(),_=>_.click()]}class Bu extends x{constructor(e){super(),ee(this,e,Fu,zu,Q,{})}}function Du(l){let e;return{c(){e=H("[...]")},m(n,t){m(n,e,t)},p:N,d(n){n&&d(e)}}}function Vu(l){let e=(l[2]/1e3).toFixed(2)+"",n,t;return{c(){n=H(e),t=H(" seconds")},m(s,r){m(s,n,r),m(s,t,r)},p(s,r){r&4&&e!==(e=(s[2]/1e3).toFixed(2)+"")&&J(n,e)},d(s){s&&d(n),s&&d(t)}}}function qu(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h,g,b,$,C,j,R,D,G,B,L,O,U,E,q,z,P,V,se,Z,le,ue,ce,ae,_e,F,X,pe,Fe,Te,Ye,Be,Le,Oe,Xe,Ke,We,et,De,Ze,tt,ut,nt,Ht,St,zt;function Ft(ye,je){return ye[2]?Vu:Du}let bt=Ft(l),Ve=bt(l);return{c(){e=y("div"),n=y("div"),t=M(),s=y("div"),r=y("div"),o=M(),c=y("div"),i=y("div"),a=y("div"),f=y("div"),u=M(),_=y("div"),_.textContent=`v${Wr}`,p=M(),h=y("div"),g=y("div"),g.textContent="Network Status",b=M(),$=y("div"),C=H(l[3]),j=M(),R=y("div"),D=y("div"),D.textContent="Chain Id",G=M(),B=y("div"),L=y("span"),O=H(l[5]),U=M(),E=y("div"),q=y("div"),q.textContent="Current Provider",z=M(),P=y("div"),V=y("span"),se=H(l[4]),Z=M(),le=y("div"),ue=y("div"),ue.textContent="Current Block Height",ce=M(),ae=y("div"),_e=H("#"),F=H(l[0]),X=M(),pe=y("div"),Fe=y("div"),Fe.textContent="Average Block Time",Te=M(),Ye=y("div"),Ve.c(),Be=M(),Le=y("div"),Oe=y("div"),Oe.textContent="Last Block Seen",Xe=M(),Ke=y("div"),We=H(l[6]),et=M(),De=y("div"),Ze=y("div"),Ze.textContent="Block Saturation",tt=M(),ut=y("div"),nt=H(l[1]),Ht=H(" txs"),w(n,"class","backdrop svelte-1y4wjl5"),w(r,"class","close icon svelte-1y4wjl5"),w(a,"class","app svelte-1y4wjl5"),w(g,"class","name svelte-1y4wjl5"),w($,"class","value svelte-1y4wjl5"),w(h,"class","info svelte-1y4wjl5"),w(D,"class","name svelte-1y4wjl5"),w(L,"class","font-family_mono svelte-1y4wjl5"),w(B,"class","value svelte-1y4wjl5"),w(R,"class","info svelte-1y4wjl5"),w(q,"class","name svelte-1y4wjl5"),w(V,"class","font-family_mono svelte-1y4wjl5"),w(P,"class","value svelte-1y4wjl5"),w(E,"class","info svelte-1y4wjl5"),w(ue,"class","name svelte-1y4wjl5"),w(ae,"class","value svelte-1y4wjl5"),w(le,"class","info svelte-1y4wjl5"),w(Fe,"class","name svelte-1y4wjl5"),w(Ye,"class","value svelte-1y4wjl5"),w(pe,"class","info svelte-1y4wjl5"),w(Oe,"class","name svelte-1y4wjl5"),w(Ke,"class","value svelte-1y4wjl5"),w(Le,"class","info svelte-1y4wjl5"),w(Ze,"class","name svelte-1y4wjl5"),w(ut,"class","value svelte-1y4wjl5"),w(De,"class","info svelte-1y4wjl5"),w(i,"class","main svelte-1y4wjl5"),w(c,"class","menu svelte-1y4wjl5"),w(s,"class","bar svelte-1y4wjl5"),w(e,"class","vendor-menu svelte-1y4wjl5"),Y(e,"collapsed",!l[7])},m(ye,je){m(ye,e,je),v(e,n),v(e,t),v(e,s),v(s,r),v(s,o),v(s,c),v(c,i),v(i,a),v(a,f),v(a,u),v(a,_),v(i,p),v(i,h),v(h,g),v(h,b),v(h,$),v($,C),v(i,j),v(i,R),v(R,D),v(R,G),v(R,B),v(B,L),v(L,O),v(i,U),v(i,E),v(E,q),v(E,z),v(E,P),v(P,V),v(V,se),v(i,Z),v(i,le),v(le,ue),v(le,ce),v(le,ae),v(ae,_e),v(ae,F),v(i,X),v(i,pe),v(pe,Fe),v(pe,Te),v(pe,Ye),Ve.m(Ye,null),v(i,Be),v(i,Le),v(Le,Oe),v(Le,Xe),v(Le,Ke),v(Ke,We),v(i,et),v(i,De),v(De,Ze),v(De,tt),v(De,ut),v(ut,nt),v(ut,Ht),St||(zt=[te(n,"click",l[9]),te(r,"click",l[10])],St=!0)},p(ye,[je]){je&8&&J(C,ye[3]),je&32&&J(O,ye[5]),je&16&&J(se,ye[4]),je&1&&J(F,ye[0]),bt===(bt=Ft(ye))&&Ve?Ve.p(ye,je):(Ve.d(1),Ve=bt(ye),Ve&&(Ve.c(),Ve.m(Ye,null))),je&64&&J(We,ye[6]),je&2&&J(nt,ye[1]),je&128&&Y(e,"collapsed",!ye[7])},i:N,o:N,d(ye){ye&&d(e),Ve.d(),St=!1,rt(zt)}}}function Uu(l,e,n){let t,s,r;K(l,Et,$=>n(12,t=$)),K(l,Gr,$=>n(8,s=$)),K(l,rn,$=>n(7,r=$));let o="",c=0,i=0,a=0,f="Loading",u="",_="";yn({blockInfo($){if(t===$.chain){n(3,f="Online"),n(5,_=$.header.chain_id),n(0,o=$.header.height),i=Date.now(),n(1,c=$.txCount);const C=$.recents;if(C.length>1){const j=[];for(let R=1;R<C.length;R++)j.push(C[R]-C[R-1]);n(2,a=j.reduce((R,D)=>R+D,0)/j.length)}}}});let p="[...]";const h=window.setInterval(()=>{if(i>0){const $=Date.now()-i;n(6,p=`${Math.round($/1e3)} seconds ago`)}},500);Lt(()=>{clearInterval(h)});const g=()=>be(rn,r=!1,r),b=()=>be(rn,r=!1,r);return l.$$.update=()=>{l.$$.dirty&256&&s&&(n(0,o="[...]"),i=0,n(2,a=0),n(3,f="Connecting"),n(4,u=new URL(s.grpcWebUrl).host),n(5,_=""),n(1,c=0))},[o,c,a,f,u,_,p,r,s,g,b]}class Xu extends x{constructor(e){super(),ee(this,e,Uu,qu,Q,{})}}function sl(l,e,n){const t=l.slice();return t[4]=e[n],t[6]=n,t}function Ku(l){let e,n,t=l[4].error?.stack+"",s;return{c(){e=y("pre"),n=y("code"),s=H(t),w(e,"class","error-stack svelte-1k68c03")},m(r,o){m(r,e,o),v(e,n),v(n,s)},p(r,o){o&1&&t!==(t=r[4].error?.stack+"")&&J(s,t)},d(r){r&&d(e)}}}function Wu(l){let e=l[4].text+"",n;return{c(){n=H(e)},m(t,s){m(t,n,s)},p(t,s){s&1&&e!==(e=t[4].text+"")&&J(n,e)},d(t){t&&d(n)}}}function Gu(l){let e;function n(r,o){return r[4].text?Wu:Ku}let t=n(l),s=t(l);return{c(){s.c(),e=M()},m(r,o){s.m(r,o),m(r,e,o)},p(r,o){t===(t=n(r))&&s?s.p(r,o):(s.d(1),s=t(r),s&&(s.c(),s.m(e.parentNode,e)))},d(r){s.d(r),r&&d(e)}}}function ll(l){let e,n;function t(){return l[2](l[4])}return e=new Il({props:{icon:"error",title:l[4].title,dismissable:!0,rootStyle:`
				position: absolute;
				width: calc(100% - 40px);
				box-sizing: border-box;
				margin-left: 20px;
				margin-right: 20px;
				bottom: ${l[6]*60+20}px;
				box-shadow: 0 0 40px #000;
			`,$$slots:{default:[Gu]},$$scope:{ctx:l}}}),e.$on("dismiss",t),{c(){T(e.$$.fragment)},m(s,r){A(e,s,r),n=!0},p(s,r){l=s;const o={};r&1&&(o.title=l[4].title),r&129&&(o.$$scope={dirty:r,ctx:l}),e.$set(o)},i(s){n||(k(e.$$.fragment,s),n=!0)},o(s){S(e.$$.fragment,s),n=!1},d(s){I(e,s)}}}function Yu(l){let e,n,t,s,r=l[0],o=[];for(let i=0;i<r.length;i+=1)o[i]=ll(sl(l,r,i));const c=i=>S(o[i],1,1,()=>{o[i]=null});return{c(){e=y("div"),n=y("div"),t=M();for(let i=0;i<o.length;i+=1)o[i].c();w(n,"class","backdrop svelte-1k68c03"),w(e,"class","notifications svelte-1k68c03"),Y(e,"hidden",!l[0].length)},m(i,a){m(i,e,a),v(e,n),v(e,t);for(let f=0;f<o.length;f+=1)o[f].m(e,null);s=!0},p(i,[a]){if(a&3){r=i[0];let f;for(f=0;f<r.length;f+=1){const u=sl(i,r,f);o[f]?(o[f].p(u,a),k(o[f],1)):(o[f]=ll(u),o[f].c(),k(o[f],1),o[f].m(e,null))}for(re(),f=r.length;f<o.length;f+=1)c(f);oe()}a&1&&Y(e,"hidden",!i[0].length)},i(i){if(!s){for(let a=0;a<r.length;a+=1)k(o[a]);s=!0}},o(i){o=o.filter(Boolean);for(let a=0;a<o.length;a+=1)S(o[a]);s=!1},d(i){i&&d(e),Se(o,i)}}}function Zu(l,e,n){let t=[];const s=Yr(c=>{t.push(c),n(0,t)});function r(c){const i=t.indexOf(c);i!==-1&&(t.splice(i,1),n(0,t))}return Lt(()=>{s()}),[t,r,c=>r(c)]}class Ju extends x{constructor(e){super(),ee(this,e,Zu,Yu,Q,{})}}class wn{constructor(e,n){$e(this,"_dc_creator");$e(this,"_yc_component");$e(this,"_h_props");$e(this,"_h_context");$e(this,"_dm_page");$e(this,"_si_page");$e(this,"_h_events",{});$e(this,"_sr_path");$e(this,"_sx_pattern");this._kt_parent=n,{creator:this._dc_creator,props:this._h_props={},context:this._h_context={}}=e,this._si_page=crypto.randomUUID();const t=It("div"),s=new Map(ke({...this._h_context,page:this}));if(this._yc_component=new this._dc_creator({target:t,props:{...this._h_props,k_page:this},context:s}),e.events)for(const[o,c]of ke(e.events))this._yc_component.$on(o,c);const r=t.firstElementChild;if(!r)throw new Error(`No DOM element was created during page component spawning using: ${JSON.stringify(e)}`);this._dm_page=r}get id(){return this._si_page}get index(){return this.thread.history.length}get thread(){return this._kt_parent}get creator(){return this._dc_creator}get component(){return this._yc_component}get props(){return this._h_props}get dom(){return this._dm_page}equivalent(e){return e.creator===this.creator&&!kl(e.props||{},this.props)}peak(){return this._kt_parent.peak()}push(e){return this._kt_parent.push(e,this)}pop(e){return this._kt_parent.pop(e||{},this)}jump(e,n){return this._kt_parent.jump(e,n||{},this)}on(e){for(const[n,t]of ke(e))t&&(this._h_events[n]=this._h_events[n]||[]).push(t)}async fire(e,n){const t=this._h_events[e];t&&await Promise.all(t.map(s=>s(...n||[])))}destroy(){this._yc_component.$destroy()}reset(){this._kt_parent.reset()}}class Qu{constructor(e,n,t){$e(this,"_dm_thread");$e(this,"_a_history",[]);this._si_thread=e,this._gc_default=n,this._k_navigator=t,this._dm_thread=It("div",{class:"thread","data-thread-id":this._si_thread,style:"z-index: 100;"})}get id(){return this._si_thread}get default(){return this._gc_default}get history(){return this._a_history}get page(){return this._a_history[0]}get dom(){return this._dm_thread}_place(e){const n=new wn({...e,context:{...this._k_navigator.context,...e.context}},this);return this._dm_thread.appendChild(n.dom),this._a_history.unshift(n),n}reset(e=this.default,n){const{keepTop:t}=n||{},s=this._a_history;for(let o=t?1:0;o<s.length;o++)s[o].component.$destroy();s.length=0;const r=this._place(e);return this._k_navigator.after_reset(this,r,n||{}),r}peak(){return this._a_history[1]}push(e,n){if(n!==this.page)throw new Error("Prevented inactive page from pushing new screen");if(!this._k_navigator.before_push(e,n,this))throw new Error("Prevented inactive thread from pushing new screen");const t=this._place(e);return this._k_navigator.after_push(this,n,t),t}pop(e,n){if(n!==this.page)throw new Error("Prevented inactive page from popping active screen");if(this._a_history.length<2)throw new Error("Failed to pop empty history");if(!this._k_navigator.before_pop(e,this._a_history[1],n,this))throw new Error("Prevented inactive thread from popping active screen");this._a_history.shift();const t=this.page;return this._k_navigator.after_pop(this,n,t,e),t}jump(e,n,t){if(t!==this.page)throw new Error("Prevented inactive page from jumping to screen");if(!this._k_navigator.before_jump(n,e,t,this))throw new Error("Prevented inactive thread from jumping to screen");const s=this._a_history[1];if(!n.force&&s?.equivalent(e))return this.pop({},t);const r=new wn(e,this);return this.reset(),Kl(r.dom,t.dom,1),this._k_navigator.after_jump(this,t,r,n).then(()=>{try{t.destroy()}catch{console.warn(`Failed to destroy stale component belonging to page: ${t.creator.name+""}`),t.dom.remove()}}),r}hide(){this._dm_thread.style.display="none"}show(){this._dm_thread.style.display="initial"}}function Kl(l,e,n){const t=+l.style.zIndex,s=t+n;l.style.zIndex=t+"",e.style.zIndex=s+""}class xu{constructor(e){$e(this,"_h_threads",{});$e(this,"_h_thread_spawners");$e(this,"_dm_threads");$e(this,"_dm_buffer",It("div"));$e(this,"_g_hooks");$e(this,"_h_context");$e(this,"_si_thread",Qe.DEFAULT);$e(this,"_c_thread_z",200);this._gc_navigator=e,{container:this._dm_threads,threads:this._h_thread_spawners,hooks:this._g_hooks,context:this._h_context={}}=e,this._new_thread(Qe.DEFAULT)}get context(){return this._h_context}_new_thread(e,n={},t={}){const s=this._h_thread_spawners[e];if(!s)throw new Error(`Navigator has no such thread registered: '${e}'`);const r=new Qu(e,s(n,t),this);return this._h_threads[e]=r,this._dm_threads.appendChild(r.dom),r.reset({...r.default,props:{...r.default.props,...n}}),r}get activeThread(){return this._h_threads[this._si_thread]}get activePage(){return this.activeThread.page}before_push(e,n,t){return!(this.activeThread!==t||this._g_hooks.before_change?.(t,n,"push")===!1||this._g_hooks.before_push?.(t,n,e)===!1)}before_pop(e,n,t,s){return!(this.activeThread!==s||this._g_hooks.before_change?.(s,t,"pop")===!1||this._g_hooks.before_pop?.(s,t,n,e)===!1)}before_jump(e,n,t,s){return!(this.activeThread!==s||this._g_hooks.before_change?.(s,t,"jump")===!1||this._g_hooks.before_jump?.(s,t,n,e)===!1)}async before_switch(e,n){if(this._g_hooks.before_change?.(e,e.page,"switch")===!1)throw new Error("Cannot stop thread switch");await this._g_hooks.before_switch?.(e,n)}async after_push(e,n,t){const s=await this._g_hooks.after_push?.(e,n,t);await this._g_hooks.after_change?.(e,n,t,"push",s||{})}async after_pop(e,n,t,s){const r=await this._g_hooks.after_pop?.(e,n,t,s);await this._g_hooks.after_change?.(e,n,t,"pop",r||{})}async after_jump(e,n,t,s){const r=await this._g_hooks.after_jump?.(e,n,t,s);await this._g_hooks.after_change?.(e,n,t,"jump",r||{})}async after_reset(e,n,t){const s=await this._g_hooks.after_reset?.(e,n,t);await this._g_hooks.after_change?.(e,null,n,"reset",s||{})}async after_switch(e,n){await this._g_hooks.after_switch?.(e,n)}async activateThread(e,n={}){const t=this.activeThread,s=this.activePage;let r=this._h_threads[e];if(e!==this._si_thread){if(await this.before_switch(t,e),this._si_thread,!r)r=this._new_thread(e,n);else if(kl(r.default.props||{},n)){const o=new wn({...r.default,props:n,context:this._h_context},r);r.reset(o,{keepTop:!0}),Kl(s.dom,o.dom,-1)}return this._si_thread=e,this.activeThread.show(),this.activeThread.dom.style.zIndex=this._c_thread_z+++"",await this.after_switch(t,r),!0}return!1}}function e_(l){let e,n,t={ctx:l,current:null,token:null,hasCatch:!1,pending:l_,then:n_,catch:t_,value:25,blocks:[,,,]};return Ie(Ut.getRootKey(),t),{c(){e=ie(),t.block.c()},m(s,r){m(s,e,r),t.block.m(s,t.anchor=r),t.mount=()=>e.parentNode,t.anchor=e,n=!0},p(s,r){l=s,Re(t,l,r)},i(s){n||(k(t.block),n=!0)},o(s){for(let r=0;r<3;r+=1){const o=t.blocks[r];S(o)}n=!1},d(s){s&&d(e),t.block.d(s),t.token=null,t=null}}}function t_(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function n_(l){let e,n,t=l[25]&&s_();return{c(){t&&t.c(),e=ie()},m(s,r){t&&t.m(s,r),m(s,e,r),n=!0},p:N,i(s){n||(k(t),n=!0)},o(s){S(t),n=!1},d(s){t&&t.d(s),s&&d(e)}}}function s_(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h;return e=new Ef({}),t=new Df({}),r=new Iu({}),c=new Xu({}),a=new Bu({}),u=new Rf({}),p=new Ju({}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),T(c.$$.fragment),i=M(),T(a.$$.fragment),f=M(),T(u.$$.fragment),_=M(),T(p.$$.fragment)},m(g,b){A(e,g,b),m(g,n,b),A(t,g,b),m(g,s,b),A(r,g,b),m(g,o,b),A(c,g,b),m(g,i,b),A(a,g,b),m(g,f,b),A(u,g,b),m(g,_,b),A(p,g,b),h=!0},i(g){h||(k(e.$$.fragment,g),k(t.$$.fragment,g),k(r.$$.fragment,g),k(c.$$.fragment,g),k(a.$$.fragment,g),k(u.$$.fragment,g),k(p.$$.fragment,g),h=!0)},o(g){S(e.$$.fragment,g),S(t.$$.fragment,g),S(r.$$.fragment,g),S(c.$$.fragment,g),S(a.$$.fragment,g),S(u.$$.fragment,g),S(p.$$.fragment,g),h=!1},d(g){I(e,g),g&&d(n),I(t,g),g&&d(s),I(r,g),g&&d(o),I(c,g),g&&d(i),I(a,g),g&&d(f),I(u,g),g&&d(_),I(p,g)}}}function l_(l){return{c:N,m:N,p:N,i:N,o:N,d:N}}function r_(l){let e,n,t,s,r,o,c,i,a;const f=l[7].default,u=Jt(f,l,l[6],null);c=new Ou({});let _=l[3]&&e_(l);return{c(){e=y("main"),n=y("div"),t=M(),s=y("div"),r=M(),u&&u.c(),o=M(),T(c.$$.fragment),i=M(),_&&_.c(),w(n,"class","content threads svelte-m1b0zj"),w(s,"class","content exitting svelte-m1b0zj"),w(e,"class","viewport svelte-m1b0zj")},m(p,h){m(p,e,h),v(e,n),l[8](n),v(e,t),v(e,s),l[9](s),v(e,r),u&&u.m(e,null),v(e,o),A(c,e,null),v(e,i),_&&_.m(e,null),l[10](e),a=!0},p(p,[h]){u&&u.p&&(!a||h&64)&&Qt(u,f,p,p[6],a?en(f,p[6],h,null):xt(p[6]),null),p[3]&&_.p(p,h)},i(p){a||(k(u,p),k(c.$$.fragment,p),k(_),a=!0)},o(p){S(u,p),S(c.$$.fragment,p),S(_),a=!1},d(p){p&&d(e),l[8](null),l[9](null),u&&u.d(p),I(c),_&&_.d(),l[10](null)}}}function o_(l,e,n){let t,s,r,o,c,i,a,f,u;K(l,kt,E=>n(11,t=E)),K(l,Vt,E=>n(12,s=E)),K(l,qt,E=>n(13,r=E)),K(l,ht,E=>n(14,o=E)),K(l,Mt,E=>n(15,c=E)),K(l,an,E=>n(16,i=E)),K(l,dt,E=>n(17,a=E)),K(l,Et,E=>n(18,f=E)),K(l,ze,E=>n(19,u=E));let{$$slots:_={},$$scope:p}=e,{page:h}=e;const g=h;let{mode:b}=e;const $=b==="flow",C=b==="app";let j,R,D;const G=Object.fromEntries(Zr().entries());async function B(E,q=!1){return await Qr(0),new Promise(z=>{E.addEventListener("transitionend",function(V){V.propertyName==="transform"&&(E.classList.add("slid"),z())}),E.style.transform=`translateX(${q?"0px":"var(--app-window-width)"})`})}Jr(async()=>{const E={container:R,context:G,threads:{default:()=>({creator:yl})},hooks:{before_change(z,P,V){P.fire("blur")},after_push(z,P,V){Pn().then(()=>{B(V.dom,!0)})},after_pop(z,P,V,se){V.fire("restore"),se.bypassAnimation?P.destroy():(P.dom.style.transform="translateX(var(--app-window-width))",P.dom.addEventListener("transitionend",function Z(le){le.propertyName==="transform"&&(P.dom.removeEventListener("transitionend",Z),P.destroy())}))},after_change(z,P,V,se,Z={}){be(qt,r=V,r),be(Vt,s=z,s),V.fire("focus")},async before_switch(){try{await Promise.all([u||on(ze,!0),fe.read().then(z=>be(Et,f=ke(z.raw)[0][0],f)),a||on(dt,!0),Nt.read().then(z=>be(an,i=ke(z.raw)[0][0],i)),c||on(Mt,!0),st.read().then(z=>be(ht,o=ke(z.raw)[0][0],o))]),delete this.before_switch}catch{}},async after_switch(z,P){be(qt,r=P.page,r),be(Vt,s=P,s),P.page.fire("focus"),await Pn(),await B(P.page.dom,!0)}}};$?E.threads={default:()=>g}:C&&(E.threads=gl(Pl,(z,P)=>({[z]:V=>({creator:P,props:V})})),E.threads.init=(z,P)=>({...g,props:{...g.props,...z},context:{...g.context,...P}}));const q=new xu(E);be(kt,t=q,t)});function L(E){de[E?"unshift":"push"](()=>{R=E,n(1,R)})}function O(E){de[E?"unshift":"push"](()=>{D=E,n(2,D)})}function U(E){de[E?"unshift":"push"](()=>{j=E,n(0,j)})}return l.$$set=E=>{"page"in E&&n(4,h=E.page),"mode"in E&&n(5,b=E.mode),"$$scope"in E&&n(6,p=E.$$scope)},[j,R,D,C,h,b,p,_,L,O,U]}class b_ extends x{constructor(e){super(),ee(this,e,o_,r_,Q,{page:4,mode:5})}}function rl(l){let e,n,t,s;return{c(){e=y("div"),n=H(l[1]),w(e,"class","validation-message")},m(r,o){m(r,e,o),v(e,n),s=!0},p(r,o){(!s||o&2)&&J(n,r[1])},i(r){s||(Ge(()=>{t||(t=qe(e,ge,{duration:300},!0)),t.run(1)}),s=!0)},o(r){t||(t=qe(e,ge,{duration:300},!1)),t.run(0),s=!1},d(r){r&&d(e),r&&t&&t.end()}}}function i_(l){let e,n,t,s,r,o,c=l[1]&&rl(l);return{c(){e=y("input"),n=M(),c&&c.c(),t=ie(),w(e,"type","password"),w(e,"name","password"),e.autofocus=!0,w(e,"placeholder","Password"),Y(e,"invalid",l[1])},m(i,a){m(i,e,a),Ne(e,l[0]),m(i,n,a),c&&c.m(i,a),m(i,t,a),s=!0,e.focus(),r||(o=te(e,"input",l[4]),r=!0)},p(i,a){a&1&&e.value!==i[0]&&Ne(e,i[0]),a&2&&Y(e,"invalid",i[1]),i[1]?c?(c.p(i,a),a&2&&k(c,1)):(c=rl(i),c.c(),k(c,1),c.m(t.parentNode,t)):c&&(re(),S(c,1,1,()=>{c=null}),oe())},i(i){s||(k(c),s=!0)},o(i){S(c),s=!1},d(i){i&&d(e),i&&d(n),c&&c.d(i),i&&d(t),r=!1,o()}}}function c_(l){let e,n,t,s,r,o,c,i,a,f,u,_,p,h;i=new me({props:{key:"password",name:"",$$slots:{default:[i_]},$$scope:{ctx:l}}}),f=new at({props:{confirm:["Unlock",l[3]]}});function g($){l[5]($)}let b={hide:!0};return l[2].items!==void 0&&(b.items=l[2].items),_=new Cl({props:b}),de.push(()=>Ce(_,"items",g)),{c(){e=y("div"),e.innerHTML='<img width="96" src="/media/vendor/logo-96px.png" srcset="/media/vendor/logo-96px.png 1x, /media/vendor/logo-192px.png 2x" alt="StarShell"/>',n=M(),t=y("div"),t.innerHTML='<img src="/media/vendor/title.svg" alt=""/>',s=M(),r=y("div"),r.textContent="\xA0",o=M(),c=y("div"),T(i.$$.fragment),a=M(),T(f.$$.fragment),u=M(),T(_.$$.fragment),w(e,"class","logo"),w(t,"class","title"),w(r,"class","line svelte-wsweyo"),w(c,"class","form flex-rows")},m($,C){m($,e,C),m($,n,C),m($,t,C),m($,s,C),m($,r,C),m($,o,C),m($,c,C),A(i,c,null),m($,a,C),A(f,$,C),m($,u,C),A(_,$,C),h=!0},p($,C){const j={};C&1027&&(j.$$scope={dirty:C,ctx:$}),i.$set(j);const R={};!p&&C&4&&(p=!0,R.items=$[2].items,Me(()=>p=!1)),_.$set(R)},i($){h||(k(i.$$.fragment,$),k(f.$$.fragment,$),k(_.$$.fragment,$),h=!0)},o($){S(i.$$.fragment,$),S(f.$$.fragment,$),S(_.$$.fragment,$),h=!1},d($){$&&d(e),$&&d(n),$&&d(t),$&&d(s),$&&d(r),$&&d(o),$&&d(c),I(i),$&&d(a),I(f,$),$&&d(u),I(_,$)}}}function a_(l){let e,n,t;return n=new ve({props:{debug:"Authenticate",classNames:"welcome",$$slots:{default:[c_]},$$scope:{ctx:l}}}),{c(){e=M(),T(n.$$.fragment)},m(s,r){m(s,e,r),A(n,s,r),t=!0},p(s,[r]){const o={};r&1031&&(o.$$scope={dirty:r,ctx:s}),n.$set(o)},i(s){t||(k(n.$$.fragment,s),t=!0)},o(s){S(n.$$.fragment,s),t=!1},d(s){s&&d(e),I(n,s)}}}function f_(l,e,n){const t=he("completed");let s="",r="",o=!1,c=0,i=new Sl;function a(p){n(2,i=i.event(p,Date.now()-c))}async function f(p=!1){if(o)return 1;o=!0;const h=()=>(o=!1,1);n(1,r=""),c=Date.now(),a("Estimating time to complete");{const g=window.performance.now();await Ut.deriveRootBits(il,cl,1/50);const $=window.performance.now()-g,C=2*($*50);a(`About ${(C/1e3).toFixed(1)} seconds`)}try{await fl(s,p,a)}catch(g){if(g instanceof xr)n(1,r="No accounts detected");else if(g instanceof al)n(1,r="Invalid passphrase");else{if(g instanceof eo)return n(1,r="Vault is partially corrupted; attempting recovery..."),await f(!0);p?n(1,r=`Recovery failed. Vault may be irreparably corrupted.
${g.message}`):g instanceof to?n(1,r=`Vault appears to be irreparably corrupted.
${g.message}`):n(1,r=`Unknown error occurred: ${g.stack||g.message}`)}return h()}return t&&t(!0),h()}function u(){s=this.value,n(0,s)}function _(p){l.$$.not_equal(i.items,p)&&(i.items=p,n(2,i))}return[s,r,i,f,u,_]}class w_ extends x{constructor(e){super(),ee(this,e,f_,a_,Q,{})}}const v_=kn(document,"section#dom-log"),u_=kn(document,"#dom-log-list");function $_(l){console.log(l),u_?.append(It("li",{},[It("pre",{},[l])]))}function __(l){let e,n="&nbsp;";return{c(){e=y("div"),w(e,"class","no-margin horizon svelte-12kmiz9")},m(t,s){m(t,e,s),e.innerHTML=n},p:N,i:N,o:N,d(t){t&&d(e)}}}class p_ extends x{constructor(e){super(),ee(this,e,null,__,Q,{})}}function m_(l){let e,n,t,s,r,o,c,i,a,f,u,_;return e=new ol({props:{dim:96}}),t=new Ml({}),r=new p_({}),u=new at({props:{confirm:["Get Started"],contd:{creator:Nl}}}),{c(){T(e.$$.fragment),n=M(),T(t.$$.fragment),s=M(),T(r.$$.fragment),o=M(),c=y("div"),c.innerHTML=`<div>Welcome to the beta program.</div> 
		<div>Thank for you being a tester!</div>`,i=M(),a=y("p"),f=M(),T(u.$$.fragment),w(c,"class","large")},m(p,h){A(e,p,h),m(p,n,h),A(t,p,h),m(p,s,h),A(r,p,h),m(p,o,h),m(p,c,h),m(p,i,h),m(p,a,h),m(p,f,h),A(u,p,h),_=!0},p:N,i(p){_||(k(e.$$.fragment,p),k(t.$$.fragment,p),k(r.$$.fragment,p),k(u.$$.fragment,p),_=!0)},o(p){S(e.$$.fragment,p),S(t.$$.fragment,p),S(r.$$.fragment,p),S(u.$$.fragment,p),_=!1},d(p){I(e,p),p&&d(n),I(t,p),p&&d(s),I(r,p),p&&d(o),p&&d(c),p&&d(i),p&&d(a),p&&d(f),I(u,p)}}}function d_(l){let e,n;return e=new ve({props:{root:!0,classNames:"preregister",$$slots:{default:[m_]},$$scope:{ctx:l}}}),{c(){T(e.$$.fragment)},m(t,s){A(e,t,s),n=!0},p(t,[s]){const r={};s&1&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(k(e.$$.fragment,t),n=!0)},o(t){S(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}class k_ extends x{constructor(e){super(),ee(this,e,null,d_,Q,{})}}export{jc as A,yl as B,p_ as H,k_ as P,Ml as S,Qe as T,b_ as a,$_ as b,w_ as c,v_ as d};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
