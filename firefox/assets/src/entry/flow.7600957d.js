import{S as L,i as P,s as O,a as J,c as y,m as v,t as k,b as S,d as C,bs as V,ag as Z,w as b,h as A,j as h,k as p,T as $,a9 as D,ah as G,n as d,ac as Q,W as Y,b_ as ee,b$ as te,c0 as ne,z as m,a7 as se,U as oe,x as R,Z as ie,_ as w,A as E,c1 as ae,V as M,c2 as re,L as ce}from"../../web-resource-cache.fb3e84c9.js";import{b as f,d as le,a as fe,P as ue,c as pe}from"../../PreRegister.084f3eb8.js";function W(n,e,s){const t=n.slice();return t[12]=e[s],t}function de(n){return{c:m,m,p:m,d:m}}function me(n){let e,s=n[11],t=[];for(let o=0;o<s.length;o+=1)t[o]=j(W(n,s,o));return{c(){for(let o=0;o<t.length;o+=1)t[o].c();e=se()},m(o,a){for(let i=0;i<t.length;i+=1)t[i].m(o,a);p(o,e,a)},p(o,a){if(a&16){s=o[11];let i;for(i=0;i<s.length;i+=1){const r=W(o,s,i);t[i]?t[i].p(r,a):(t[i]=j(r),t[i].c(),t[i].m(e.parentNode,e))}for(;i<t.length;i+=1)t[i].d(1);t.length=s.length}},d(o){oe(t,o),o&&d(e)}}}function j(n){let e,s,t,o,a=n[12]+"",i,r;return{c(){e=h("div"),s=h("input"),t=b(" Always allow "),o=h("code"),i=b(a),r=b(` to see StarShell.
			`),R(s,"type","checkbox")},m(l,_){p(l,e,_),$(e,s),$(e,t),$(e,o),$(o,i),$(e,r)},p:m,d(l){l&&d(e)}}}function _e(n){return{c:m,m,p:m,d:m}}function ge(n){let e,s=n[2].host+"",t,o,a,i,r,l,_,I,N,H,g={ctx:n,current:null,token:null,hasCatch:!1,pending:_e,then:me,catch:de,value:11};return Z(n[4](),g),{c(){e=b("Allow "),t=b(s),o=b(` to see you have StarShell installed?

	`),g.block.c(),a=A(),i=h("button"),r=b("Allow"),l=A(),_=h("button"),I=b("Cancel"),i.disabled=n[1],_.disabled=n[1]},m(c,u){p(c,e,u),p(c,t,u),p(c,o,u),g.block.m(c,g.anchor=u),g.mount=()=>a.parentNode,g.anchor=a,p(c,a,u),p(c,i,u),$(i,r),p(c,l,u),p(c,_,u),$(_,I),N||(H=[D(i,"click",n[7]),D(_,"click",n[8])],N=!0)},p(c,u){n=c,G(g,n,u),u&2&&(i.disabled=n[1]),u&2&&(_.disabled=n[1])},d(c){c&&d(e),c&&d(t),c&&d(o),g.block.d(c),g.token=null,g=null,c&&d(a),c&&d(i),c&&d(l),c&&d(_),N=!1,Q(H)}}}function he(n){let e,s;return e=new J({props:{$$slots:{default:[ge]},$$scope:{ctx:n}}}),{c(){y(e.$$.fragment)},m(t,o){v(e,t,o),s=!0},p(t,[o]){const a={};o&32771&&(a.$$scope={dirty:o,ctx:t}),e.$set(a)},i(t){s||(k(e.$$.fragment,t),s=!0)},o(t){S(e.$$.fragment,t),s=!1},d(t){C(e,t)}}}function $e(n,e,s){let{k_page:t}=e,{completed:o}=e,{app:a}=e;const i=a,r=V.pathFrom(i),l=i.host;let _=!1;async function I(){if(_)return 1;s(1,_=!0);const c=()=>(s(1,_=!1),1);return await V.open(async u=>{await u.put(u.at(r)||i)}),o(!0),c()}async function N(){await Y.get(ee);let c="";const u=[];if(te.test(l))u.push(l);else if(i.scheme==="https"&&(u.push(l),!ne.test(l))){const X=l.replace(/^.*(:.+)$/,"$1"),T=l.replace(/:.+$/,"").split(".");for(let x=T.length-1;x>0;x--){const B=T.slice(x).join(".");if(!T.includes(B)){c=B;break}}u.push("*."+c+X)}return u}const H=()=>I(),g=()=>o(!1);return n.$$set=c=>{"k_page"in c&&s(5,t=c.k_page),"completed"in c&&s(0,o=c.completed),"app"in c&&s(6,a=c.app)},[o,_,i,I,N,t,a,H,g]}class we extends L{constructor(e){super(),P(this,e,$e,he,O,{k_page:5,completed:0,app:6})}}function be(n){let e,s,t;return{c(){e=h("div"),s=h("img"),ie(s.src,t=n[0].image)||R(s,"src",t),R(s,"alt",n[0].text||""),R(e,"class","img")},m(o,a){p(o,e,a),$(e,s)},p:m,d(o){o&&d(e)}}}function ye(n){let e;return{c(){e=h("div"),e.textContent=`${n[0].text}`,R(e,"class","text svelte-1rfq4uw")},m(s,t){p(s,e,t)},p:m,d(s){s&&d(e)}}}function ve(n){let e,s,t=n[0].image&&be(n),o=n[0].text&&ye(n);return{c(){e=h("div"),t&&t.c(),s=A(),o&&o.c(),R(e,"class","backdrop svelte-1rfq4uw")},m(a,i){p(a,e,i),t&&t.m(e,null),$(e,s),o&&o.m(e,null)},p(a,[i]){a[0].image&&t.p(a,i),a[0].text&&o.p(a,i)},i:m,o:m,d(a){a&&d(e),t&&t.d(),o&&o.d()}}}function ke(n,e,s){let{display:t}=e;const o=t;let{exits:a=!1}=e;return n.$$set=i=>{"display"in i&&s(1,t=i.display),"exits"in i&&s(2,a=i.exits)},[o,t,a]}class K extends L{constructor(e){super(),P(this,e,ke,ve,O,{display:1,exits:2})}}function Se(n){let e,s,t,o,a,i;return e=new K({props:{exits:!0,display:{image:n[0],text:n[1].host}}}),a=new E({props:{back:!0,confirm:["Connect",n[2]]}}),{c(){y(e.$$.fragment),s=A(),t=h("center"),t.innerHTML=`<h3>Review permissions</h3> 

		<h4>Allow this site to:</h4>`,o=A(),y(a.$$.fragment)},m(r,l){v(e,r,l),p(r,s,l),p(r,t,l),p(r,o,l),v(a,r,l),i=!0},p:m,i(r){i||(k(e.$$.fragment,r),k(a.$$.fragment,r),i=!0)},o(r){S(e.$$.fragment,r),S(a.$$.fragment,r),i=!1},d(r){C(e,r),r&&d(s),r&&d(t),r&&d(o),C(a,r)}}}function Ce(n){let e,s;return e=new J({props:{$$slots:{default:[Se]},$$scope:{ctx:n}}}),{c(){y(e.$$.fragment)},m(t,o){v(e,t,o),s=!0},p(t,[o]){const a={};o&32&&(a.$$scope={dirty:o,ctx:t}),e.$set(a)},i(t){s||(k(e.$$.fragment,t),s=!0)},o(t){S(e.$$.fragment,t),s=!1},d(t){C(e,t)}}}function Ae(n){const e=w("completed"),s=w("faviconSrc"),t=w("app");w("chains");function o(){e(!0)}return[s,t,o]}class Re extends L{constructor(e){super(),P(this,e,Ae,Ce,O,{})}}function Ie(n){let e,s,t,o,a,i;return e=new K({props:{display:{image:n[2],text:n[1].host}}}),a=new E({props:{cancel:n[4],contd:{creator:Re,props:{accounts:n[3]}}}}),{c(){y(e.$$.fragment),s=A(),t=h("center"),t.innerHTML=`<h3>Connect to StarShell</h3> 

		<h4>Select account(s)</h4>`,o=A(),y(a.$$.fragment)},m(r,l){v(e,r,l),p(r,s,l),p(r,t,l),p(r,o,l),v(a,r,l),i=!0},p:m,i(r){i||(k(e.$$.fragment,r),k(a.$$.fragment,r),i=!0)},o(r){S(e.$$.fragment,r),S(a.$$.fragment,r),i=!1},d(r){C(e,r),r&&d(s),r&&d(t),r&&d(o),C(a,r)}}}function Ne(n){let e,s;return e=new J({props:{$$slots:{default:[Ie]},$$scope:{ctx:n}}}),{c(){y(e.$$.fragment)},m(t,o){v(e,t,o),s=!0},p(t,[o]){const a={};o&256&&(a.$$scope={dirty:o,ctx:t}),e.$set(a)},i(t){s||(k(e.$$.fragment,t),s=!0)},o(t){S(e.$$.fragment,t),s=!1},d(t){C(e,t)}}}function qe(n){const e=w("completed"),s=w("app"),t=w("faviconSrc"),o=w("chains"),a=w("chainIndex")||0;return o[a],[e,s,t,[],()=>e(!1)]}class He extends L{constructor(e){super(),P(this,e,qe,Ne,O,{})}}async function z(){await ae("flow")}addEventListener("beforeunload",z);function q(n,e,s){try{le.style.display="none"}catch{}new fe({target:document.body,props:{mode:"flow",page:{creator:n,props:s||{}}},context:new Map(ce(e))})}async function U(n){if(f("Handling 'authenticate'."),await M.getRootKey()){f("Vault is already unlocked."),n(!0);return}await M.getBase()?(f("Root found. Prompting login."),q(pe,{completed:n})):(f("No root found. Prompting registration."),q(ue,{completed(){U(n)}}))}const Le={requestAdvertisement(n,e){f(`Handling 'requestAdvertisement' on ${JSON.stringify(n)}`),q(we,{},{completed:e,app:n.app})},requestConnection(n,e){f(`Handling 'requestConnection' on ${JSON.stringify(n)}`),q(He,{completed:e,app:n.app,chains:n.chains})},signTransaction(n){},inspectIncident(n,e){f(`Handling 'inspectIncident' on ${JSON.stringify(n)}`),q(re,{completed:e},{incident:n.incident})}};async function F(n,e){if(n.type==="authenticate")return f(`Calling built-in handler for '${n.type}'`),void U(o=>{e(o,n.page)});const s=Le[n.type];if(!s)return f(`No such handler registered for '${n.type}'`);if(!await M.getRootKey())return f("Vault is locked. Redirecting to login."),void U(()=>{F(n,e)});f(`Calling registered handler for '${n.type}'`),s(n.value,o=>{e(o,n.page)})}async function Pe(n){let e;try{e=await browser.tabs.get(n.tabId)}catch{}if(!(!e||!e.url)&&n.href===e.url)return new Promise(s=>{})}(function(){f("Flow script init");const n=new URLSearchParams(location.search.slice(1)),e=n.get("headless");if(e){if(e==="info")return browser.storage.session.set({display_info:{width:screen.width,height:screen.height,availHeight:screen.availHeight,availWidth:screen.availWidth,orientation:screen.orientation,devicePixelRatio}}).then(()=>{window.close()});window.close()}if(n.get("comm")==="broadcast"){f("Using broadcast comm");const s=n.get("name");if(typeof s!="string"||!s)return f("Invalid or missing channel name");f(`Channel name: '${s}'`);const t=new BroadcastChannel(s),o=(i,r)=>{t.postMessage({type:"completeFlow",value:{answer:i}}),setTimeout(async()=>{r&&await Pe(r),await z(),window.close()},200)};t.onmessage=function(i){const r=i.data;if(f(`Received => ${JSON.stringify(r)}`),!r||!r.type)return f("Invalid message");sessionStorage.setItem(s,JSON.stringify(r)),t.postMessage({type:"acknowledgeReceipt",value:r}),F(r,o)},f("Listening for message...");const a=sessionStorage.getItem(s);if(a){f("Attempting to restore message after reload...");let i;try{i=JSON.parse(a)}catch{return f("Failed to parse message from session storage")}F(i,o)}}else f(`Unknown comm '${n.get("comm")||"(null | undefined)"}'`)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
